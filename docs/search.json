[{"path":"/articles/vignette1.html","id":"generalized-linear-latent-variable-models","dir":"Articles","previous_headings":"","what":"Generalized linear latent variable models","title":"Analysing multivariate abundance data using gllvm","text":"multivariate abundance dataset can defined matrix abundances, nn rows (usually sites) mm columns responses (usually species). Denote abundance jjth species iith site yijy_{ij}. set k environmental variables, experimental treatments, may also recorded site stored vector ùê±=(xi1,...,xik)\\boldsymbol{x}_i = (x_{i1}, ..., x_{ik}). GLLVM regresses mean abundance Œºij\\mu_{ij} environmental variables vector d<md<m latent variables, ùêÆ=(ui1,...,uid)‚Ä≤\\boldsymbol{u}_i = (u_{i1}, ..., u_{id})': g(Œºij)=Œ∑ij=Œ±i+Œ≤0j+ùê±‚Ä≤ùõÉj+ùêÆ‚Ä≤ùõâj,g(\\mu_{ij}) = \\eta_{ij} = \\alpha_i + \\beta_{0j} + \\boldsymbol{x}_i'\\boldsymbol{\\beta}_j + \\boldsymbol{u}_i'\\boldsymbol{\\theta}_j, ùõÉj\\boldsymbol{\\beta}_j ùõâj\\boldsymbol{\\theta}_j vectors species specific coefficients related covariates latent variables, respectively. latent variables ùêÆ\\boldsymbol{u}_i can thought unmeasured environmental variables, ordination scores, capturing main axes covariation abundance (controlling observed predictors ùê±\\boldsymbol{x}_i). assume latent variables independent across sites standard normally distributed. parameters Œ≤0j\\beta_{0j} species specific intercepts, Œ±i\\alpha_i optional site effects can chosen either fixed random effects (Œ±i‚àºN(0;œÉ2))\\alpha_i \\sim N(0; \\sigma^2)). row effects Œ±i\\alpha_i included, terms model can subsequently interpreted modelling relative abundance compositional effects (Hui et al., 2015). qq trait covariates ùê≠j=(ti1,‚Ä¶,tiq)‚ä§\\boldsymbol{t}_j=(t_{i1}, \\dots,t_{iq})^\\top also recorded, can use help explain inter-specific variation environmental response. leads extension -called ‚Äúfourth corner model‚Äù multivariate abundance regressed function traits environment, environment-trait interactions represents fourth corner association traits environment. also include species-specific random slopes environmental covariates order take account inters-pecific variation responses explained covariates. associated fourth corner GLLVM mean model: g(Œºij)=Œ∑ij=Œ±i+Œ≤0j+ùê±‚ä§(ùõÉe+ùêõj)+(ùê≠j‚äóùê±)‚ä§ùõÉ+ùêÆ‚ä§ùõâj,g(\\mu_{ij}) = \\eta_{ij}= \\alpha_i + \\beta_{0j} + \\boldsymbol x^\\top_i (\\boldsymbol\\beta_e + \\boldsymbol b_j) + (\\boldsymbol t_j \\otimes \\boldsymbol x_i)^\\top \\boldsymbol \\beta_I + \\boldsymbol u_i^\\top\\boldsymbol\\theta_j, ùõÉe\\boldsymbol\\beta_e vector main effects environmental covariates, ùõÉ\\boldsymbol\\beta_I fourth corner coefficients. main effect traits included, main effects abundance across species absorbed intercept term Œ≤0j\\beta_{0j}. model assumes inter-specific variation response covariates mediated species random slopes, reduces number parameters related covariates. difficulty fitting GLLVM ùêÆ\\boldsymbol{u}_i‚Äôs unobserved must integrate possible values. Specifically, log-likelihood function wish maximize form $$l(\\boldsymbol\\Psi)=\\sum_{=1}^n \\log(f(y_{ij},\\boldsymbol\\Psi))=\\sum_{=1}^n \\log\\left(\\int_{{\\rm \\!R}^{d}} \\prod_{j=1}^m f(y_{ij}|\\boldsymbol u_i;\\boldsymbol\\Psi) f(\\boldsymbol{u}_i) d\\boldsymbol{u}_i,\\right),$$ ùõô\\boldsymbol\\psi includes model parameters. expression assumed abundances independent across sites correlation across responses captured latent variables ùêÆ\\boldsymbol u_i. Thus conditional ùêÆ\\boldsymbol u_i, yijy_{ij} independent within sites. gllvm package overcomes computational problems using three key innovations: maximizing approximation log-likelihood (almost completely) closed form. provide two ways ‚Äì using Gaussian variational approximations overdispersed counts, binary ordinal responses, using Laplace approximations exponential family distributions fully closed form variational approximation obtained e.g. biomass data can modelled Tweedie distribution. Parameter estimation makes use automatic differentiation software C++ accelerate computation times, via interface provided R package TMB. Careful choice starting values. particular, use factor analysis Dunn-Smyth residuals obtain starting values close anticipated solution, optionally, jittering check sensitivity approach. next examples illustrate usage gllvm package using antTraits data mvabund package. data consists counts 41 ant species measured 30 sites across south-east Australia, along records five environmental variables five trait variables species. package data can loaded follows.","code":"library(mvabund) library(gllvm) #> Loading required package: TMB #>  #> Attaching package: 'gllvm' #> The following object is masked from 'package:mvabund': #>  #>     coefplot #> The following object is masked from 'package:stats': #>  #>     simulate data(antTraits) y <- as.matrix(antTraits$abund) X <- scale(as.matrix(antTraits$env)) TR <- antTraits$traits"},{"path":"/articles/vignette1.html","id":"data-input","dir":"Articles","previous_headings":"","what":"Data input","title":"Analysing multivariate abundance data using gllvm","text":"Main function gllvm package gllvm(), can used fit GLLVMs multivariate data important arguments listed following: Data input can specified using ‚Äúwide format‚Äù matrices via y, X TR arguments. alternative way use long format via data argument along formula. Notice formula can also used model specification data given wide format. following lines ant data re-organised long format. model can fitted number latent variables can defined using argument num.lv. default number latent variables two. important arguments gllvm call row.eff defining type row effects (none, fixed random), offset potential inclusion offsets, Power defining power parameter Tweedie distribution starting.val judicious choice starting values latent variables. List available distributions mean, E(yij)E(y_{ij}), mean-variance, V(Œºij)V(\\mu_{ij}), functions, estimation methods link functions various response types table .","code":"gllvm(y = NULL, X = NULL, TR = NULL, data = NULL, formula = NULL, num.lv = 2, family,        method = \"VA\", row.eff = FALSE, offset = NULL, Power = 1.5, starting.val = \"res\", ...) # Model without predictors: gllvm(y, family = \"negative.binomial\") # Model where environmental variables, that is, all variables in X are included: gllvm(y, X, family = \"negative.binomial\") # Fourth corner model, where all main effects for environmental variables in X and # all interactions between variables in X and variables in TR are included: gllvm(y, X, TR, family = \"negative.binomial\") yX <- reshape(data.frame(cbind(y, X)), direction = \"long\", varying =                 colnames(y), v.names = \"y\", timevar = \"sp\") TR2 <- data.frame(sp = 1:41, TR) datalong <- merge(yX, TR2, by = \"sp\") datalong[1:3, ] #>   sp Bare.ground Canopy.cover Shrub.cover Volume.lying.CWD Feral.mammal.dung y #> 1  1  -0.3926017    0.2290869  -0.5748133        0.4373291        -0.1755352 0 #> 2  1  -0.8007744   -0.4475411  -0.8053533       -0.2309758         1.5171255 0 #> 3  1  -0.3585873   -0.4475411   2.9293959       -0.3609125        -0.9278288 0 #>   id Femur.length No.spines Pilosity Polymorphism Webers.length #> 1  1   -0.3827814         0        2            1      1.094225 #> 2  2   -0.3827814         0        2            1      1.094225 #> 3  3   -0.3827814         0        2            1      1.094225 # Model without predictors: gllvm(formula = y ~ 1, data = datalong, family = \"negative.binomial\") # Model with environmental variables Bare.ground and Shrub.cover as predictors gllvm(formula = y ~ (Bare.ground + Shrub.cover), data = datalong,         family = \"negative.binomial\")"},{"path":"/articles/vignette1.html","id":"model-based-ordination","dir":"Articles","previous_headings":"","what":"Model-based ordination","title":"Analysing multivariate abundance data using gllvm","text":"GLLVMs can used model-based approach unconstrained ordination including (e.g.) two latent variables model predictors. corresponding ordination plot provides graphical representation sites similar terms species composition. model can fitted ant data using function gllvm . consider two count distributions data ‚Äì Poisson negative binomial (NB). model-based ordination method, GLLVMs offer tools model checking contrast classical algorithm-based ordination methods nMDS. example, default printout includes information criteria, suggest NB distribution better choice Poisson distribution modelling response. addition information criteria, can use residual plots diagnosing model fit. default, plot function utilizes residual function calculate Dunn-Smyth residuals, also known randomized quantile residuals, prints five residual diagnostic plots, including plot residuals linear predictors fitted values, Normal Q-Q plot residuals simulated point-wise 95% confidence interval envelope, residuals row index column index scale-location plot. argument one can define plots produced. residual diagnostics Poisson model shows overdispersion residuals, particular, telltale fan-shape plot residuals fitted values. issues largely resolved NB model. Note latent variables model provide capacity account overdispersion, overdispersed counts always require us move beyond Poisson distribution, although clear evidence need example.   appropriate model established data, can construct ordination scatter plot predicted latent variables via ordiplot function. species largest factor loadings (largest norms, ||ùõâj||||\\boldsymbol\\theta_j||), hence strongly associated ordination scores, can added using logical argument biplot, leading biplot finding indicator species corresponding specific sites. ind.spp argument defines number species plotted. command creates biplot ordination plot based GLLVM fitted antTraits data. can see one large cluster sites top many indicator species, smaller clusters indicator species e.g. sites 12‚Äì15. 95% prediction regions ordiplot give clue uncertainty estimates. rotation scale latent variables loadings differ actual values order produce biplot predicted latent variables loadings rotated scaled factor loadings species direction sites abundant.  Sometimes species names biplot might hard read, especially species names long close . order make figure easier read can change sizes species names biplot using cex.spp. species site names close can use jitter = TRUE order add random variation species site locations. can also shorten species names. can also done model fitted directly changing row names loading matrix, see example .","code":"fitp <- gllvm(y, family = poisson()) fitp #> Call:  #> gllvm(y = y, family = poisson()) #> family:  #> [1] \"poisson\" #> method:  #> [1] \"VA\" #>  #> log-likelihood:  -2098.632  #> Residual degrees of freedom:  1108  #> AIC:  4441.264  #> AICc:  4468.375  #> BIC:  5065.266 fit_ord <- gllvm(y, family = \"negative.binomial\") fit_ord #> Call:  #> gllvm(y = y, family = \"negative.binomial\") #> family:  #> [1] \"negative.binomial\" #> method:  #> [1] \"VA\" #>  #> log-likelihood:  -1865.085  #> Residual degrees of freedom:  1067  #> AIC:  4056.171  #> AICc:  4106.325  #> BIC:  4889.878 # Plot residuals for the Poisson model par(mfrow = c(3, 2), mar = c(4, 4, 2, 1)) plot(fitp, var.colors = 1) # Plot residuals for the NB model par(mfrow = c(3, 2), mar = c(4, 4, 2, 1)) plot(fit_ord, var.colors = 1) ordiplot(fit_ord, biplot = TRUE, ind.spp = 15, xlim = c(-3, 3), ylim = c(-3, 3),           main = \"Biplot\") ordiplot(fit_ord, biplot = FALSE, ind.spp = 15, xlim = c(-3, 3), ylim = c(-3, 3),           main = \"Ordination plot\", predict.region = TRUE) rownames(fit_ord$params$theta) <- paste(\"spp\", 1:ncol(fit_ord$y), sep = \"\") ordiplot(fit_ord, biplot = TRUE, ind.spp = 15, xlim = c(-3, 3), ylim = c(-2, 1.6),           main = \"Biplot\", jitter = TRUE, cex.spp = 0.8)"},{"path":"/articles/vignette1.html","id":"model-with-environmental-variables","dir":"Articles","previous_headings":"","what":"Model with environmental variables","title":"Analysing multivariate abundance data using gllvm","text":"Environmental variables can included model, whether study effects assemblages, study patterns species co-occurrence controlling environmental variables. illustrate model including three environmental variables Bare.ground, Canopy.cover Volume.lying.CWD model. Similarly previous example, can use residual analysis information criteria study distribution offers suitable mean-variance relationship responses, many latent variables needed. Based tools model NB distributed responses 1 latent variable chosen. estimated coefficients predictors confidence intervals can plotted using coefplot function, order study nature effects environmental variables species. Function coefplot plots point estimates (ticks) coefficients environmental variables 95% confidence intervals (lines) fit_env model, colored grey (black) denoting intervals () containing zero.  resulting plot 95% confidence intervals include zero, indicating majority species exhibit evidence strong association environment species abundance. may due lack information data, much due lack environmental association accounting potential residual species covariation. extreme effect sizes covariates Canopy.cover Volume.lying.CWD explained fact species Myrmecia.pilosula.complex Ochetellus.glaber observed sites percent canopy cover zero species Cardiocondyla.nuda.atalanta observed mainly sites estimated volume Coarse Woody Debris zero sites. Due lack variation effects sizes tend become extreme. Similarly biplot, species names coefficient plot can also changed changing row names coefficient matrix. Species ordering according effects‚Äô sizes optional logical argument order.  Alternatively, model-selection covariates, latent variables can performed dredging, using MuMIn package. Though especially large datasets many covariates latent variables, can take run.","code":"criteria <- NULL for(i in 1:5){   fiti <- gllvm(y, X, family = \"negative.binomial\", num.lv = i, sd.errors = FALSE,                 formula = ~ Bare.ground + Canopy.cover + Volume.lying.CWD, seed = 1234)   criteria[i] <- summary(fiti)$AICc   names(criteria)[i] = i } # Compare AICc values criteria #>        1        2        3        4        5  #> 4163.565 4215.446 4311.091 4462.069 4612.805 fit_env <- gllvm(y, X, family = \"negative.binomial\", num.lv = 1,                  formula = ~ Bare.ground + Canopy.cover +                    Volume.lying.CWD, seed = 1234) coefplot(fit_env, cex.ylab = 0.7, mar = c(4, 9, 2, 1), mfrow=c(1,1)) rownames(fit_env$params$Xcoef) <- paste(\"spp\", 1:ncol(fit_env$y), sep = \"\") coefplot(fit_env, cex.ylab = 0.7, order = FALSE, mfrow=c(1,1)) library(MuMIn) fit_table <- dredge(fiti,varying=list(num.lv=1:5), rank=\"AICc\") subset(fit_table, delta<2) # Global model call: gllvm(y = y, X = X, formula = ~Bare.ground + Canopy.cover +  Volume.lying.CWD,  #     family = \"negative.binomial\", num.lv = i, sd.errors = FALSE,  #     seed = 1234) # --- # Model selection table  #    (Int) Cnp.cvr num.lv  df    logLik   AICc delta weight # 11     +       +      1 164 -1839.914 4058.6     0      1 # Models ranked by AICc(x)"},{"path":"/articles/vignette1.html","id":"studying-co-occurrence-patterns","dir":"Articles","previous_headings":"","what":"Studying co-occurrence patterns","title":"Analysing multivariate abundance data using gllvm","text":"Latent variables induce correlation across response variables, provide means estimating correlation patterns across species, extent can explained environmental variables. Information correlation stored factor loadings ùõâj\\boldsymbol\\theta_j, residual covariance matrix, storing information species co-occurrence explained environmental variables, can calculated ùö∫=ùö™ùö™‚ä§\\boldsymbol\\Sigma=\\boldsymbol\\Gamma \\boldsymbol\\Gamma^\\top, ùö™=[ùõâ1‚Ä¶ùõâm]‚Ä≤\\boldsymbol\\Gamma = [\\boldsymbol\\theta_1\\dots\\boldsymbol\\theta_m]'. getResidualCor function can used estimate correlation matrix linear predictor across species. can visualised using corrplot package:  Group squares coloured dark blue correlation plot indicate clusters species positively correlated , controlling (co)variation species explained environmental terms fit_env (linear terms Bare.ground, Canopy.cover Volumn.lying.CWD). also group squares coloured red, indicating negative correlation pairs species. effect environmental variables species correlations can seen comparing residual correlation matrix () correlation matrix given model without environmental variables ().  Residual correlations can also visualized residual biplot, highly correlated species tend lie direction negatively correlated species opposite side biplot, see figure (b) . order fit fit_env model two latent variables compare model without predictors fit_ord ().  biplots can see species 23 (Monomorium.rothsteini), 24 (Monomorium.sydneyense), 28 (Nylanderia.sp..) 41 (Tetramorium.sp..) close . can also seen correlation plots species correlations highly positive. getResidualCov function can used quantify amount variation data can explained environmental variables. Specifically, use trace residual covariance matrix ùö∫\\boldsymbol\\Sigma measure unexplained variation, can compare quantity environmental variables included model. ratio traces suggests environmental variables explain approximately 40% (co)variation ant species abundances.","code":"# Residual correlation matrix: cr <- getResidualCor(fit_env) library(corrplot); library(gclus) #> corrplot 0.94 loaded #> Loading required package: cluster corrplot(cr[order.single(cr), order.single(cr)], diag = FALSE, type = \"lower\",           method = \"square\", tl.cex = 0.5, tl.srt = 45, tl.col = \"red\") # Fit GLLVM without environmental variables and 1 latent variable: fit1lv <- gllvm(y, family = \"negative.binomial\", num.lv = 1, seed = 1234) # Correlation matrix cr0 <- getResidualCor(fit1lv) corrplot(cr0[order.single(cr0), order.single(cr0)], diag = FALSE, type = \"lower\",           method = \"square\", tl.cex = 0.5, tl.srt = 45, tl.col = \"red\") fit_env2 <- gllvm(y, X, family = \"negative.binomial\", num.lv = 2,                    formula = ~ Bare.ground + Canopy.cover +                      Volume.lying.CWD, seed = 12345) rownames(fit_env2$params$theta) <- paste(\"sp\", 1:ncol(fit_env2$y), sep = \"\") ordiplot(fit_ord, biplot = TRUE, ind.spp = 15, jitter = TRUE, cex.spp = 1,          xlim = c(-4, 3.5), ylim = c(-2.5, 2), main = \"(a)\") ordiplot(fit_env2, biplot = TRUE, ind.spp = 15, jitter = TRUE, cex.spp = 1,          xlim = c(-4, 3.5), ylim = c(-2.5, 2), main = \"(b)\") rcov <- getResidualCov(fit_env, adjust = 0) rcov0 <- getResidualCov(fit1lv, adjust = 0) rcov0$trace; rcov$trace #> [1] 44.15558 #> [1] 25.83591 1 - rcov$trace / rcov0$trace #> [1] 0.4148892"},{"path":"/articles/vignette1.html","id":"incorporating-functional-traits-into-fourth-corner-models","dir":"Articles","previous_headings":"","what":"Incorporating functional traits into fourth corner models","title":"Analysing multivariate abundance data using gllvm","text":"previous section, environmental associations studied fitting separate terms species, without attempting explain different species respond differently environment. Adding functional traits model offers potential explain species differ environmental response. fourth corner model can fitted using argument TR include traits. argument formula used specify model. Random row effects included using row.eff = \"random\" argument randomX used incorporate random slopes model. defined model complex, use three starting points initial values latent variables via argument n.init order ensure maximum point reached. previously, coefficients can plotted using function coefplot. environmental-trait interaction terms, also known fourth corner terms, can visualized using function levelplot package lattice, see . resulting plots indicate interactions trait variable Polymorphism Bare.ground Canopy.cover, Pilosity3 Canopy.cover strongest effects ant abundances.","code":"fit_4th <- gllvm(y, X, TR, family = \"negative.binomial\", num.lv = 1,                   formula = y ~ (Bare.ground + Canopy.cover + Volume.lying.CWD) +                 (Bare.ground + Canopy.cover + Volume.lying.CWD) : (Pilosity +                  Polymorphism + Webers.length), seed = 123,                 row.eff = \"random\", control.start =list(n.init = 3, jitter.var = 0.01),                 randomX = ~ Bare.ground + Canopy.cover + Volume.lying.CWD) library(lattice) coefplot(fit_4th, mar = c(4, 11, 1, 1), cex.ylab = 0.8) fourth <- fit_4th$fourth.corner a <- 1.5 colort <- colorRampPalette(c(\"blue\", \"white\", \"red\")) plot.4th <- levelplot((as.matrix(fourth)), xlab = \"Environmental Variables\",                        ylab = \"Species traits\", col.regions = colort(100), cex.lab = 1.3,                        at = seq(-a, a, length = 100), scales = list(x = list(rot = 45))) plot.4th"},{"path":"/articles/vignette1.html","id":"example-model-based-inference","dir":"Articles","previous_headings":"","what":"Example: Model-based inference","title":"Analysing multivariate abundance data using gllvm","text":"key point departure gllvm package, compared alternative ways fit GLLVMs, using maximum likelihood framework, likelihood-based machinery becomes available inference. particular example likelihood ratio testing, available via anova function comparing nested models. noted however tests can expected maintain (close ) valid Type error rates number parameters involved model small (rely large-NN-small-mm asymptotics). previous example, trait-environment interactions seem relatively small confidence intervals include zero values. Using likelihood ratio test can test traits vary environment. , model without traits fitted likelihood ratio test comparing model previous one performed. Based output applying anova function, pp value suggests fourth corner model interactions appropriate. Notice order separate model main effects environmental variables one species specific coefficients environmental variables, include TR matrix function call.","code":"fit_4th2 <- gllvm(y, X, TR, family = \"negative.binomial\", num.lv = 1,          formula = y ~ (Bare.ground + Canopy.cover + Volume.lying.CWD), seed = 123,                  row.eff = \"random\", control.start =list(n.init = 3, jitter.var = 0.01),                  randomX = ~ Bare.ground + Canopy.cover + Volume.lying.CWD) # Test interactions using likelihood ratio test: anova(fit_4th, fit_4th2) # Model  1 :  y ~ (Bare.ground + Canopy.cover + Volume.lying.CWD)  # Model  2 :  y ~ (Bare.ground + Canopy.cover + Volume.lying.CWD) + (Bare.ground +  # Canopy.cover + Volume.lying.CWD):(Pilosity + Polymorphism + Webers.length)  # Resid.Df        D Df.diff     P.value # 1     1097  0.00000       0             # 2     1079 61.26473      18 1.27598e-06"},{"path":[]},{"path":[]},{"path":[]},{"path":"/articles/vignette3.html","id":"r-package-gllvm","dir":"Articles","previous_headings":"Introduction to gllvm","what":"R package gllvm","title":"Introduction to gllvm Part 1: Ordination","text":"R package gllvm fits Generalized linear latent variable models (GLLVM) multivariate data1. Developed J. Niku, W.Brooks, R. Herliansyah, F.K.C. Hui, S. Taskinen, D.. Warton, B. van der Veen. package available GitHub: https://github.com/JenniNiku/gllvm CRAN: https://CRAN.R-project.org/package=gllvm Package installation: gllvm package depends R packages TMB mvabund, try install first. GLLVMs computationally intensive fit due integral log-likelihood. gllvm package overcomes computational problems applying closed form approximations log-likelihood using automatic differentiation C++ accelerate computation times (TMB2). Estimation performed using either variational approximation (VA3), extended variational approximation method (EVA4) Laplace approximation (LA5) method implemented via R package TMB. VA method faster accurate LA, applicable distributions link functions. Using gllvm can fit GLLVM without covariates gives model-based ordination biplots GLLVM environmental covariates studying factors explaining species abundance Fourth corner models latent variables studying environmental-trait interactions GLLVM without latent variables fits basic multivariate GLMs Additional tools: model checking, model selection, inference, visualization.","code":"# From CRAN install.packages(gllvm) # OR # From GitHub using devtools package's function install_github devtools::install_github(\"JenniNiku/gllvm\")"},{"path":[]},{"path":"/articles/vignette3.html","id":"data-input","dir":"Articles","previous_headings":"Introduction to gllvm","what":"Data input","title":"Introduction to gllvm Part 1: Ordination","text":"Main function gllvm package gllvm(), can used fit GLLVMs multivariate data important arguments listed following: y: matrix abundances X: matrix data.frame environmental variables TR: matrix data.frame trait variables family: distribution responses num.lv: number latent variables method: approximation used ‚ÄúVA‚Äù ‚ÄúLA‚Äù row.eff: type row effects n.init: number random starting points latent variables starting.val: starting value method","code":"gllvm(y = NULL, X = NULL, TR = NULL, family, num.lv = 2,   formula = NULL, method = \"VA\", row.eff = FALSE, n.init=1, starting.val =\"res\", ...) library(gllvm) ## Loading required package: TMB ##  ## Attaching package: 'gllvm' ## The following object is masked from 'package:stats': ##  ##     simulate"},{"path":"/articles/vignette3.html","id":"example-spiders","dir":"Articles","previous_headings":"Introduction to gllvm","what":"Example: Spiders","title":"Introduction to gllvm Part 1: Ordination","text":"Abundances 12 hunting spider species measured count 28 sites6. soil.dry: Soil dry mass bare.sand: cover bare sand fallen.leaves: cover fallen leaves/twigs moss: cover moss herb.layer: cover herb layer reflection: reflection soil surface cloudless sky","code":""},{"path":"/articles/vignette3.html","id":"data-fitting","dir":"Articles","previous_headings":"Introduction to gllvm","what":"Data fitting","title":"Introduction to gllvm Part 1: Ordination","text":"Fitting basic GLLVM g(E(yij))=Œ≤0j+ùêÆ‚Ä≤ùõâjg(E(y_{ij})) = \\beta_{0j} + \\boldsymbol{u}_i'\\boldsymbol{\\theta}_j gllvm:","code":"data(\"spider\", package = \"mvabund\") library(gllvm) fitnb <- gllvm(y = spider$abund, family = \"negative.binomial\", num.lv = 2) fitnb ## Call:  ## gllvm(y = spider$abund, family = \"negative.binomial\", num.lv = 2) ## family:  ## [1] \"negative.binomial\" ## method:  ## [1] \"VA\" ##  ## log-likelihood:  -733.6807  ## Residual degrees of freedom:  289  ## AIC:  1561.361  ## AICc:  1577.028  ## BIC:  1740.766"},{"path":"/articles/vignette3.html","id":"residual-analysis","dir":"Articles","previous_headings":"Introduction to gllvm","what":"Residual analysis","title":"Introduction to gllvm Part 1: Ordination","text":"Residual analysis can used assess appropriateness fitted model (eg. terms mean-variance relationship). Randomized quantile/Dunn-Smyth residuals7 used package, provide standard normal distributed residuals, even discrete responses, case proper model.","code":"par(mfrow = c(1,2)) plot(fitnb, which = 1:2)"},{"path":"/articles/vignette3.html","id":"model-selection","dir":"Articles","previous_headings":"Introduction to gllvm","what":"Model selection","title":"Introduction to gllvm Part 1: Ordination","text":"Information criteria can used model selection. example, compare distributions choose suitable number latent variables.","code":"fitp <- gllvm(y = spider$abund, family = poisson(), num.lv = 2) fitnb <- gllvm(y = spider$abund, family = \"negative.binomial\", num.lv = 2) AIC(fitp) ## [1] 1761.655 AIC(fitnb) ## [1] 1561.361"},{"path":"/articles/vignette3.html","id":"exercises","dir":"Articles","previous_headings":"","what":"Exercises","title":"Introduction to gllvm Part 1: Ordination","text":"Try exercises next 10 minutes, many time enough . E1. Load spider data mvabund package take look dataset. 1. Print data covariates draw boxplot data.  E2. Fit GLLVM spider data suitable distribution. Data consists counts spider species. 2. Response variables spider data counts, Poisson, negative binomial zero inflated Poisson possible. However, ZIP implemented Laplace method, need noticed, models fitted different methods can compared information criteria. Let‚Äôs try just Poisson NB.  NOTE results may exactly , initial values model fit slightly different, results may also differ slightly. Based AIC, NB distribution suits better. residual analysis:  NOTE package uses randomized quantile residuals time plot residuals, look little different.   comparisons Laplace method well, using code , give conclusion NB distribution suits best: E3. Explore fitted model. estimates parameters? predicted latent variables? Standard errors? 3. Lets explore fitted model: E4. Fit model different numbers latent variables. 4. Default number latent variables 2. Let‚Äôs try 1 3 latent variables well: E5. Include environmental variables GLLVM explore model fit. 5. Environmental variables can included argument X: problems model fitting. model converges infinity local maxima:  GLLVMs complex models starting values big role. Choosing different starting value method (see argument starting.val) use multiple runs pick one giving highest log-likelihood value using argument n.init. variation starting points can added jitter.var. results look answers: results may exactly answers, initial values model fit slightly different, results may also differ slightly.","code":"library(gllvm) data(\"spider\", package = \"mvabund\") # more info:  # ?spider # response matrix: spider$abund ##       Alopacce Alopcune Alopfabr Arctlute Arctperi Auloalbi Pardlugu Pardmont ##  [1,]       25       10        0        0        0        4        0       60 ##  [2,]        0        2        0        0        0       30        1        1 ##  [3,]       15       20        2        2        0        9        1       29 ##  [4,]        2        6        0        1        0       24        1        7 ##  [5,]        1       20        0        2        0        9        1        2 ##  [6,]        0        6        0        6        0        6        0       11 ##  [7,]        2        7        0       12        0       16        1       30 ##  [8,]        0       11        0        0        0        7       55        2 ##  [9,]        1        1        0        0        0        0        0       26 ## [10,]        3        0        1        0        0        0        0       22 ## [11,]       15        1        2        0        0        1        0       95 ## [12,]       16       13        0        0        0        0        0       96 ## [13,]        3       43        1        2        0       18        1       24 ## [14,]        0        2        0        1        0        4        3       14 ## [15,]        0        0        0        0        0        0        6        0 ## [16,]        0        3        0        0        0        0        6        0 ## [17,]        0        0        0        0        0        0        2        0 ## [18,]        0        1        0        0        0        0        5        0 ## [19,]        0        1        0        0        0        0       12        0 ## [20,]        0        2        0        0        0        0       13        0 ## [21,]        0        1        0        0        0        0       16        1 ## [22,]        7        0       16        0        4        0        0        2 ## [23,]       17        0       15        0        7        0        2        6 ## [24,]       11        0       20        0        5        0        0        3 ## [25,]        9        1        9        0        0        2        1       11 ## [26,]        3        0        6        0       18        0        0        0 ## [27,]       29        0       11        0        4        0        0        1 ## [28,]       15        0       14        0        1        0        0        6 ##       Pardnigr Pardpull Trocterr Zoraspin ##  [1,]       12       45       57        4 ##  [2,]       15       37       65        9 ##  [3,]       18       45       66        1 ##  [4,]       29       94       86       25 ##  [5,]      135       76       91       17 ##  [6,]       27       24       63       34 ##  [7,]       89      105      118       16 ##  [8,]        2        1       30        3 ##  [9,]        1        1        2        0 ## [10,]        0        0        1        0 ## [11,]        0        1        4        0 ## [12,]        1        8       13        0 ## [13,]       53       72       97       22 ## [14,]       15       72       94       32 ## [15,]        0        0       25        3 ## [16,]        2        0       28        4 ## [17,]        0        0       23        2 ## [18,]        0        0       25        0 ## [19,]        1        0       22        3 ## [20,]        0        0       22        2 ## [21,]        0        1       18        2 ## [22,]        0        0        1        0 ## [23,]        0        0        1        0 ## [24,]        0        0        0        0 ## [25,]        6        0       16        6 ## [26,]        0        0        1        0 ## [27,]        0        0        0        0 ## [28,]        0        0        2        0 # Environmental variables spider$x ##    soil.dry bare.sand fallen.leaves   moss herb.layer reflection ## 1    2.3321    0.0000        0.0000 3.0445     4.4543     3.9120 ## 2    3.0493    0.0000        1.7918 1.0986     4.5643     1.6094 ## 3    2.5572    0.0000        0.0000 2.3979     4.6052     3.6889 ## 4    2.6741    0.0000        0.0000 2.3979     4.6151     2.9957 ## 5    3.0155    0.0000        0.0000 0.0000     4.6151     2.3026 ## 6    3.3810    2.3979        3.4340 2.3979     3.4340     0.6931 ## 7    3.1781    0.0000        0.0000 0.6931     4.6151     2.3026 ## 8    2.6247    0.0000        4.2627 1.0986     3.4340     0.6931 ## 9    2.4849    0.0000        0.0000 4.3307     3.2581     3.4012 ## 10   2.1972    3.9318        0.0000 3.4340     3.0445     3.6889 ## 11   2.2192    0.0000        0.0000 4.1109     3.7136     3.6889 ## 12   2.2925    0.0000        0.0000 3.8286     4.0254     3.6889 ## 13   3.5175    1.7918        1.7918 0.6931     4.5109     3.4012 ## 14   3.0865    0.0000        0.0000 1.7918     4.5643     1.0986 ## 15   3.2696    0.0000        4.3944 0.6931     3.0445     0.6931 ## 16   3.0301    0.0000        4.6052 0.6931     0.6931     0.0000 ## 17   3.3322    0.0000        4.4543 0.6931     3.0445     1.0986 ## 18   3.1224    0.0000        4.3944 0.0000     3.0445     1.0986 ## 19   2.9232    0.0000        4.5109 1.6094     1.6094     0.0000 ## 20   3.1091    0.0000        4.5951 0.6931     0.6931     0.0000 ## 21   2.9755    0.0000        4.5643 0.6931     1.7918     0.0000 ## 22   1.2528    3.2581        0.0000 4.3307     0.6931     3.9120 ## 23   1.1939    3.0445        0.0000 4.0254     3.2581     4.0943 ## 24   1.6487    3.2581        0.0000 4.0254     3.0445     4.0073 ## 25   1.8245    3.5835        0.0000 1.0986     4.1109     2.3026 ## 26   0.9933    4.5109        0.0000 1.7918     1.7918     4.3820 ## 27   0.9555    2.3979        0.0000 3.8286     3.4340     3.6889 ## 28   0.9555    3.4340        0.0000 3.7136     3.4340     3.6889 # Plot data using boxplot: boxplot(spider$abund) # Take a look at the function documentation for help:  ?gllvm # Fit a GLLVM to data fitp <- gllvm(y = spider$abund, family = poisson(), num.lv = 2) fitp ## Call:  ## gllvm(y = spider$abund, family = poisson(), num.lv = 2) ## family:  ## [1] \"poisson\" ## method:  ## [1] \"VA\" ##  ## log-likelihood:  -845.8277  ## Residual degrees of freedom:  301  ## AIC:  1761.655  ## AICc:  1770.055  ## BIC:  1895.254 fitnb <- gllvm(y = spider$abund, family = \"negative.binomial\", num.lv = 2) fitnb ## Call:  ## gllvm(y = spider$abund, family = \"negative.binomial\", num.lv = 2) ## family:  ## [1] \"negative.binomial\" ## method:  ## [1] \"VA\" ##  ## log-likelihood:  -733.6807  ## Residual degrees of freedom:  289  ## AIC:  1561.361  ## AICc:  1577.028  ## BIC:  1740.766 # Fit a GLLVM to data plot(fitp) plot(fitnb) fitLAp <- gllvm(y = spider$abund, family = poisson(), method = \"LA\", num.lv = 2) fitLAnb <- gllvm(y = spider$abund, family = \"negative.binomial\", method = \"LA\", num.lv = 2) fitLAzip <- gllvm(y = spider$abund, family = \"ZIP\", method = \"LA\", num.lv = 2) AIC(fitLAp) AIC(fitLAnb) AIC(fitLAzip) # Parameters: coef(fitnb) ## $Species.scores ##                 LV1        LV2 ## Alopacce  1.0000000  0.0000000 ## Alopcune -0.2631740  1.0000000 ## Alopfabr  0.9012964 -0.4840078 ## Arctlute -0.7026951  2.0282163 ## Arctperi  0.5941041 -1.5893485 ## Auloalbi -0.6529384  1.5332130 ## Pardlugu -0.8880584 -0.0283346 ## Pardmont  0.7492841  0.5884815 ## Pardnigr -0.5748022  1.7798474 ## Pardpull -0.4149376  1.9481946 ## Trocterr -0.4693903  0.7878657 ## Zoraspin -0.6961561  1.1566005 ##  ## $sigma.lv ##      LV1      LV2  ## 1.803892 1.828690  ##  ## $Intercept ##   Alopacce   Alopcune   Alopfabr   Arctlute   Arctperi   Auloalbi   Pardlugu  ##  0.7737550  0.5527384 -0.1428596 -3.5862506 -3.3681967 -0.7299217  0.3189523  ##   Pardmont   Pardnigr   Pardpull   Trocterr   Zoraspin  ##  1.6255407 -0.2729636 -0.1332579  2.6566655  0.2477211  ##  ## $inv.phi ##   Alopacce   Alopcune   Alopfabr   Arctlute   Arctperi   Auloalbi   Pardlugu  ##  1.3064181  1.4682482  0.7052467  0.8985537  2.3306414  1.5386146  1.1528918  ##   Pardmont   Pardnigr   Pardpull   Trocterr   Zoraspin  ##  1.6180079  2.5401112  2.1949143 12.9753513  2.5724225  ##  ## $phi ##  Alopacce  Alopcune  Alopfabr  Arctlute  Arctperi  Auloalbi  Pardlugu  Pardmont  ## 0.7654517 0.6810838 1.4179435 1.1128995 0.4290664 0.6499353 0.8673841 0.6180440  ##  Pardnigr  Pardpull  Trocterr  Zoraspin  ## 0.3936835 0.4555987 0.0770692 0.3887386 # Where are the predicted latent variable values? just fitp$lvs or getLV(fitnb) ##              LV1           LV2 ## Row1   0.9280716  1.2703921608 ## Row2  -0.6833799  0.7931112996 ## Row3   0.6761008  1.2744024537 ## Row4  -0.2474688  1.1495300096 ## Row5  -0.3612717  1.2169150843 ## Row6  -0.3523948  1.0083966313 ## Row7   0.0290453  1.4259839281 ## Row8  -1.5218059 -0.0718307843 ## Row9   0.9102994  0.0008130686 ## Row10  1.0371311 -0.4941576829 ## Row11  1.4890401  0.3029948635 ## Row12  1.3244847  0.8073754550 ## Row13  0.1153634  1.3565782725 ## Row14 -0.4371787  1.0141354167 ## Row15 -1.3193982 -0.5458435954 ## Row16 -1.1743660 -0.2435487204 ## Row17 -1.1130624 -0.5141217705 ## Row18 -1.1587204 -0.5439088158 ## Row19 -1.3405175 -0.5038367050 ## Row20 -1.3668834 -0.5930933717 ## Row21 -1.1394851 -0.4765512978 ## Row22  0.7642653 -1.3470526207 ## Row23  0.9210288 -1.3815121496 ## Row24  0.9791178 -1.3962675403 ## Row25  0.6313729  0.5764522986 ## Row26  0.2747960 -1.9652036873 ## Row27  1.1157439 -1.3103619005 ## Row28  1.0192948 -0.8263728575 # Standard errors for parameters: fitnb$sd ## $theta ##                LV1       LV2 ## Alopacce 0.0000000 0.0000000 ## Alopcune 0.2733177 0.0000000 ## Alopfabr 0.3298680 0.2043612 ## Arctlute 0.6735202 0.7836738 ## Arctperi 0.4752967 0.5592892 ## Auloalbi 0.4402796 0.3893924 ## Pardlugu 0.2273684 0.2004821 ## Pardmont 0.2195966 0.1816528 ## Pardnigr 0.4727799 0.3799419 ## Pardpull 0.4960265 0.4108329 ## Trocterr 0.2095264 0.1569012 ## Zoraspin 0.3474686 0.2796226 ##  ## $sigma.lv ##       LV1       LV2  ## 0.4163533 0.4258952  ##  ## $beta0 ##  Alopacce  Alopcune  Alopfabr  Arctlute  Arctperi  Auloalbi  Pardlugu  Pardmont  ## 0.4519226 0.4628608 0.5478520 1.7071988 1.4653249 0.7891611 0.4390375 0.3995752  ##  Pardnigr  Pardpull  Trocterr  Zoraspin  ## 0.7865322 0.8338770 0.3337800 0.5826921  ##  ## $inv.phi ##  Alopacce  Alopcune  Alopfabr  Arctlute  Arctperi  Auloalbi  Pardlugu  Pardmont  ## 0.6026260 0.6024449 0.3958156 0.5792937 1.8032183 0.8380663 0.5810814 0.7757222  ##  Pardnigr  Pardpull  Trocterr  Zoraspin  ## 1.3144387 1.2462689 6.8906501 1.2848468  ##  ## $phi ##   Alopacce   Alopcune   Alopfabr   Arctlute   Arctperi   Auloalbi   Pardlugu  ## 0.35308842 0.27945917 0.79581245 0.71748153 0.33196891 0.35401255 0.43717961  ##   Pardmont   Pardnigr   Pardpull   Trocterr   Zoraspin  ## 0.29630908 0.20372057 0.25868821 0.04092813 0.19416313 # In exercise 2, we fitted GLLVM with two latent variables  fitnb ## Call:  ## gllvm(y = spider$abund, family = \"negative.binomial\", num.lv = 2) ## family:  ## [1] \"negative.binomial\" ## method:  ## [1] \"VA\" ##  ## log-likelihood:  -733.6807  ## Residual degrees of freedom:  289  ## AIC:  1561.361  ## AICc:  1577.028  ## BIC:  1740.766 # How about 1 or 3 LVs fitnb1 <- gllvm(y = spider$abund, family = \"negative.binomial\", num.lv = 1) fitnb1 ## Call:  ## gllvm(y = spider$abund, family = \"negative.binomial\", num.lv = 1) ## family:  ## [1] \"negative.binomial\" ## method:  ## [1] \"VA\" ##  ## log-likelihood:  -759.4012  ## Residual degrees of freedom:  300  ## AIC:  1590.802  ## AICc:  1599.712  ## BIC:  1728.218 getLV(fitnb1) ##               LV1 ## Row1  -0.81676413 ## Row2  -0.94960125 ## Row3  -0.91681940 ## Row4  -1.10568473 ## Row5  -1.22144979 ## Row6  -1.03398484 ## Row7  -1.26767644 ## Row8  -0.53478360 ## Row9   0.36592898 ## Row10  1.00877957 ## Row11  0.31276001 ## Row12 -0.31676991 ## Row13 -1.17619313 ## Row14 -1.03496933 ## Row15 -0.09008794 ## Row16 -0.27458309 ## Row17 -0.02447396 ## Row18 -0.02079744 ## Row19 -0.12968909 ## Row20 -0.06889017 ## Row21 -0.04324447 ## Row22  1.54068229 ## Row23  1.65008583 ## Row24  1.68364476 ## Row25 -0.28906403 ## Row26  1.92897385 ## Row27  1.62325289 ## Row28  1.20009416 fitnb3 <- gllvm(y = spider$abund, family = \"negative.binomial\", num.lv = 3) fitnb3 ## Call:  ## gllvm(y = spider$abund, family = \"negative.binomial\", num.lv = 3) ## family:  ## [1] \"negative.binomial\" ## method:  ## [1] \"VA\" ##  ## log-likelihood:  -733.6807  ## Residual degrees of freedom:  279  ## AIC:  1581.361  ## AICc:  1605.146  ## BIC:  1798.937 getLV(fitnb3) ##               LV1           LV2           LV3 ## Row1   0.92855997  1.2704066937  2.490147e-04 ## Row2  -0.68289382  0.7936434946 -4.250590e-04 ## Row3   0.67654263  1.2745071649  2.713419e-04 ## Row4  -0.24684270  1.1500860175  3.801664e-05 ## Row5  -0.36042112  1.2176476998  5.541020e-04 ## Row6  -0.35190586  1.0088261019  1.163737e-03 ## Row7   0.03029708  1.4267390069  1.056439e-03 ## Row8  -1.52100704 -0.0710999886 -2.349148e-03 ## Row9   0.91092628 -0.0002631222 -2.949115e-04 ## Row10  1.03719421 -0.4947825169 -3.210705e-04 ## Row11  1.48909850  0.3020168483 -4.614553e-04 ## Row12  1.32431104  0.8068430042 -7.479638e-04 ## Row13  0.11566140  1.3569379287 -1.993838e-04 ## Row14 -0.43645442  1.0147814740  2.241292e-04 ## Row15 -1.31860748 -0.5455602127  4.306928e-04 ## Row16 -1.17474725 -0.2435589343  1.754225e-04 ## Row17 -1.11197409 -0.5137065542  5.233045e-04 ## Row18 -1.15819895 -0.5438243299  3.008523e-04 ## Row19 -1.34038762 -0.5036427180  1.120733e-04 ## Row20 -1.36657978 -0.5927568262 -1.113443e-04 ## Row21 -1.13970938 -0.4766759052 -3.724385e-04 ## Row22  0.76499682 -1.3477413239  5.881954e-05 ## Row23  0.92092061 -1.3819481717 -5.979814e-04 ## Row24  0.97910691 -1.3962196048 -6.646905e-05 ## Row25  0.63223200  0.5766255674  7.922041e-04 ## Row26  0.27486244 -1.9659703788 -4.974432e-05 ## Row27  1.11558856 -1.3109958578 -7.057136e-05 ## Row28  1.01937654 -0.8279080554  1.168999e-04 fitnbx <- gllvm(y = spider$abund, X = spider$x, family = \"negative.binomial\", seed = 123, num.lv = 2) fitnbx ## Call:  ## gllvm(y = spider$abund, X = spider$x, family = \"negative.binomial\",  ##     num.lv = 2, seed = 123) ## family:  ## [1] \"negative.binomial\" ## method:  ## [1] \"VA\" ##  ## log-likelihood:  -593.6749  ## Residual degrees of freedom:  217  ## AIC:  1425.35  ## AICc:  1557.572  ## BIC:  1879.586 coef(fitnbx) ## $Species.scores ##                  LV1          LV2 ## Alopacce  1.00000000 0.000000e+00 ## Alopcune  0.65033064 1.000000e+00 ## Alopfabr  4.60955070 5.839337e-01 ## Arctlute -1.54308018 1.152119e+00 ## Arctperi  1.57923376 3.724113e-07 ## Auloalbi -1.24985864 6.094446e-01 ## Pardlugu -8.27756341 1.960724e-01 ## Pardmont  1.62553948 3.640396e-01 ## Pardnigr -0.02217957 1.070667e+00 ## Pardpull -0.31400009 7.281194e-01 ## Trocterr -1.94940036 4.990269e-01 ## Zoraspin  0.31162305 7.370960e-01 ##  ## $sigma.lv ##          LV1          LV2  ## 4.198566e-09 9.499576e-01  ##  ## $Intercept ##    Alopacce    Alopcune    Alopfabr    Arctlute    Arctperi    Auloalbi  ##  -1.8118034  -4.4229772  -1.6430780 -14.7012613 -14.9127415 -15.7161077  ##    Pardlugu    Pardmont    Pardnigr    Pardpull    Trocterr    Zoraspin  ##   7.9349699  -6.3785000  -5.1520389 -13.0281981  -0.1999952  -3.8441590  ##  ## $Xcoef ##            soil.dry   bare.sand fallen.leaves        moss  herb.layer ## Alopacce -0.9580696 -0.09050833    -0.3242683  0.10124549  0.73708820 ## Alopcune  1.3493055 -0.45012971     0.0171826 -0.19948113  0.41919734 ## Alopfabr -0.8697778  0.69550223    -0.4033527  0.54014731  0.30180782 ## Arctlute  5.8764638  0.16535494    -1.6723058  0.34396786 -0.12417544 ## Arctperi -1.7802096  0.23859650    -1.8760391  0.49600665  0.02128078 ## Auloalbi  0.2248309 -0.04627880     0.6286176  0.06258915  4.05162146 ## Pardlugu -2.5240359 -0.71558231     0.3620669 -0.37442348  0.58627107 ## Pardmont  1.5850692  0.13313869    -0.5143564  0.88718490  0.73395038 ## Pardnigr  2.5563703 -0.02664628    -0.8483469 -0.45644924  0.72835939 ## Pardpull  3.0008808 -0.35252699    -0.4703709  0.36475658  1.95127965 ## Trocterr  1.2400373 -0.23016156    -0.2275185 -0.20328000  0.44569773 ## Zoraspin  2.1000129  0.11996378    -0.5721528 -0.09000736  0.61975217 ##           reflection ## Alopacce  0.86935167 ## Alopcune  0.42105075 ## Alopfabr  0.06149616 ## Arctlute -0.64289561 ## Arctperi  4.00723441 ## Auloalbi -0.54358192 ## Pardlugu -1.16980030 ## Pardmont  0.07820141 ## Pardnigr -0.53365350 ## Pardpull -0.36801919 ## Trocterr -0.29455636 ## Zoraspin -0.93149392 ##  ## $inv.phi ##     Alopacce     Alopcune     Alopfabr     Arctlute     Arctperi     Auloalbi  ## 9.146737e+00 2.937857e+00 7.757592e+00 2.022399e+00 4.385230e+06 1.022941e+01  ##     Pardlugu     Pardmont     Pardnigr     Pardpull     Trocterr     Zoraspin  ## 2.770437e+01 1.990873e+00 7.672767e+00 1.667735e+01 2.643112e+01 6.321633e+00  ##  ## $phi ##     Alopacce     Alopcune     Alopfabr     Arctlute     Arctperi     Auloalbi  ## 1.093286e-01 3.403842e-01 1.289060e-01 4.944622e-01 2.280382e-07 9.775736e-02  ##     Pardlugu     Pardmont     Pardnigr     Pardpull     Trocterr     Zoraspin  ## 3.609539e-02 5.022923e-01 1.303311e-01 5.996155e-02 3.783419e-02 1.581870e-01 # confidence intervals for parameters: confint(fitnbx) ##                                      2.5 %        97.5 % ## sigma.lv.LV1                 -6.449473e-07  6.533444e-07 ## sigma.lv.LV2                  4.339237e-01  1.465992e+00 ## theta.LV1.1                   1.000000e+00  1.000000e+00 ## theta.LV1.2                  -1.369205e+08  1.369205e+08 ## theta.LV1.3                  -7.837880e+07  7.837881e+07 ## theta.LV1.4                  -1.248100e+08  1.248100e+08 ## theta.LV1.5                  -4.219775e+04  4.220090e+04 ## theta.LV1.6                  -5.925460e+07  5.925459e+07 ## theta.LV1.7                  -2.579623e+07  2.579621e+07 ## theta.LV1.8                  -1.211036e+08  1.211036e+08 ## theta.LV1.9                  -1.069053e+08  1.069053e+08 ## theta.LV1.10                 -7.661456e+07  7.661456e+07 ## theta.LV1.11                 -5.710665e+07  5.710664e+07 ## theta.LV1.12                 -8.664399e+07  8.664399e+07 ## theta.LV2.1                   0.000000e+00  0.000000e+00 ## theta.LV2.2                   1.000000e+00  1.000000e+00 ## theta.LV2.3                  -5.150183e-02  1.219369e+00 ## theta.LV2.4                  -1.944572e-01  2.498696e+00 ## theta.LV2.5                  -1.229696e-03  1.230441e-03 ## theta.LV2.6                   5.422453e-02  1.164665e+00 ## theta.LV2.7                  -1.285614e-01  5.207062e-01 ## theta.LV2.8                  -1.510936e-01  8.791728e-01 ## theta.LV2.9                   4.318875e-01  1.709446e+00 ## theta.LV2.10                  2.702054e-01  1.186033e+00 ## Intercept.Alopacce            2.336750e-01  7.643787e-01 ## Intercept.Alopcune            2.325701e-01  1.241622e+00 ## Intercept.Alopfabr           -5.315546e+00  1.691939e+00 ## Intercept.Arctlute           -9.576851e+00  7.308970e-01 ## Intercept.Arctperi           -7.967770e+00  4.681614e+00 ## Intercept.Auloalbi           -3.137398e+01  1.971456e+00 ## Intercept.Pardlugu           -2.630639e+01 -3.519095e+00 ## Intercept.Pardmont           -2.247640e+01 -8.955814e+00 ## Intercept.Pardnigr            3.196537e+00  1.267340e+01 ## Intercept.Pardpull           -1.042939e+01 -2.327611e+00 ## Intercept.Trocterr           -1.019784e+01 -1.062381e-01 ## Intercept.Zoraspin           -1.860810e+01 -7.448300e+00 ## Xcoef.soil.dry:Alopacce      -2.429291e+00  2.029301e+00 ## Xcoef.soil.dry:Alopcune      -7.699380e+00  1.106180e-02 ## Xcoef.soil.dry:Alopfabr      -1.627819e+00 -2.883202e-01 ## Xcoef.soil.dry:Arctlute      -1.659364e-01  2.864547e+00 ## Xcoef.soil.dry:Arctperi      -1.961645e+00  2.220892e-01 ## Xcoef.soil.dry:Auloalbi       4.213010e-01  1.133163e+01 ## Xcoef.soil.dry:Pardlugu      -3.435521e+00 -1.248979e-01 ## Xcoef.soil.dry:Pardmont      -9.613383e-01  1.411000e+00 ## Xcoef.soil.dry:Pardnigr      -3.776895e+00 -1.271176e+00 ## Xcoef.soil.dry:Pardpull       6.322576e-01  2.537881e+00 ## Xcoef.soil.dry:Trocterr       1.053284e+00  4.059457e+00 ## Xcoef.soil.dry:Zoraspin       1.556373e+00  4.445389e+00 ## Xcoef.bare.sand:Alopacce      5.869626e-01  1.893112e+00 ## Xcoef.bare.sand:Alopcune      9.200349e-01  3.279991e+00 ## Xcoef.bare.sand:Alopfabr     -3.852030e-01  2.041863e-01 ## Xcoef.bare.sand:Arctlute     -9.739425e-01  7.368305e-02 ## Xcoef.bare.sand:Arctperi      1.975735e-01  1.193431e+00 ## Xcoef.bare.sand:Auloalbi     -1.533905e+00  1.864615e+00 ## Xcoef.bare.sand:Pardlugu     -6.816265e-01  1.158820e+00 ## Xcoef.bare.sand:Pardmont     -4.622025e-01  3.696449e-01 ## Xcoef.bare.sand:Pardnigr     -1.248497e+00 -1.826675e-01 ## Xcoef.bare.sand:Pardpull     -1.853032e-01  4.515806e-01 ## Xcoef.bare.sand:Trocterr     -5.133315e-01  4.600389e-01 ## Xcoef.bare.sand:Zoraspin     -8.538039e-01  1.487499e-01 ## Xcoef.fallen.leaves:Alopacce -4.443042e-01 -1.601889e-02 ## Xcoef.fallen.leaves:Alopcune -2.625610e-01  5.024886e-01 ## Xcoef.fallen.leaves:Alopfabr -9.896539e-01  3.411172e-01 ## Xcoef.fallen.leaves:Arctlute -5.799276e-01  6.142928e-01 ## Xcoef.fallen.leaves:Arctperi -1.537152e+00  7.304470e-01 ## Xcoef.fallen.leaves:Auloalbi -3.798849e+00  4.542370e-01 ## Xcoef.fallen.leaves:Pardlugu -1.673561e+02  1.636040e+02 ## Xcoef.fallen.leaves:Pardmont  1.124858e-01  1.144749e+00 ## Xcoef.fallen.leaves:Pardnigr  3.911008e-02  6.850237e-01 ## Xcoef.fallen.leaves:Pardpull -1.026861e+00 -1.851484e-03 ## Xcoef.fallen.leaves:Trocterr -1.464693e+00 -2.320013e-01 ## Xcoef.fallen.leaves:Zoraspin -9.509773e-01  1.023561e-02 ## Xcoef.moss:Alopacce          -4.819962e-01  2.695925e-02 ## Xcoef.moss:Alopcune          -1.030295e+00 -1.140110e-01 ## Xcoef.moss:Alopfabr          -2.226192e-01  4.251102e-01 ## Xcoef.moss:Arctlute          -7.951878e-01  3.962256e-01 ## Xcoef.moss:Arctperi           1.287561e-02  1.067419e+00 ## Xcoef.moss:Auloalbi          -9.128146e-01  1.600750e+00 ## Xcoef.moss:Pardlugu          -1.220231e-01  1.114036e+00 ## Xcoef.moss:Pardmont          -4.179853e-01  5.431636e-01 ## Xcoef.moss:Pardnigr          -8.457072e-01  9.686023e-02 ## Xcoef.moss:Pardpull           4.272490e-01  1.347121e+00 ## Xcoef.moss:Trocterr          -1.039383e+00  1.264850e-01 ## Xcoef.moss:Zoraspin          -8.542468e-02  8.149378e-01 ## Xcoef.herb.layer:Alopacce    -4.720118e-01  6.545176e-02 ## Xcoef.herb.layer:Alopcune    -5.685103e-01  3.884955e-01 ## Xcoef.herb.layer:Alopfabr     3.371456e-01  1.137031e+00 ## Xcoef.herb.layer:Arctlute    -3.383310e-01  1.176726e+00 ## Xcoef.herb.layer:Arctperi    -2.708919e-01  8.745076e-01 ## Xcoef.herb.layer:Auloalbi    -3.062448e+00  2.814097e+00 ## Xcoef.herb.layer:Pardlugu    -4.106232e-01  4.531848e-01 ## Xcoef.herb.layer:Pardmont     2.457165e+00  5.646078e+00 ## Xcoef.herb.layer:Pardnigr     2.739258e-01  8.986164e-01 ## Xcoef.herb.layer:Pardpull     4.636978e-02  1.421531e+00 ## Xcoef.herb.layer:Trocterr    -1.339361e-01  1.590655e+00 ## Xcoef.herb.layer:Zoraspin     9.272378e-01  2.975321e+00 ## Xcoef.reflection:Alopacce     1.164534e-01  7.749420e-01 ## Xcoef.reflection:Alopcune    -1.629915e-02  1.255804e+00 ## Xcoef.reflection:Alopfabr     3.390305e-01  1.399673e+00 ## Xcoef.reflection:Arctlute    -3.763276e-01  1.218429e+00 ## Xcoef.reflection:Arctperi    -9.861328e-01  1.109125e+00 ## Xcoef.reflection:Auloalbi    -1.930076e+00  6.442852e-01 ## Xcoef.reflection:Pardlugu     1.461087e+00  6.553382e+00 ## Xcoef.reflection:Pardmont    -1.141760e+00  5.459662e-02 ## Xcoef.reflection:Pardnigr    -1.807600e+00 -5.320006e-01 ## Xcoef.reflection:Pardpull    -5.106481e-01  6.670509e-01 ## Xcoef.reflection:Trocterr    -1.302713e+00  2.354060e-01 ## Xcoef.reflection:Zoraspin    -8.994784e-01  1.634400e-01 ## inv.phi.Alopacce             -6.348769e-01  4.576424e-02 ## inv.phi.Alopcune             -1.527771e+00 -3.352165e-01 ## inv.phi.Alopfabr             -1.056783e+01  2.886131e+01 ## inv.phi.Arctlute             -7.217570e-02  5.947889e+00 ## inv.phi.Arctperi             -8.212985e+00  2.372817e+01 ## inv.phi.Auloalbi             -1.057543e+00  5.102341e+00 ## inv.phi.Pardlugu             -5.194026e+09  5.202797e+09 ## inv.phi.Pardmont             -3.755134e+00  2.421395e+01 ## inv.phi.Pardnigr             -4.815644e+01  1.035652e+02 ## inv.phi.Pardpull              5.020224e-01  3.479723e+00 ## inv.phi.Trocterr             -1.346396e+00  1.669193e+01 ## inv.phi.Zoraspin             -4.389429e+00  3.774414e+01 ## inv.phi.Trocterr             -3.376966e+00  5.623921e+01 ## inv.phi.Zoraspin             -1.191355e+00  1.383462e+01"},{"path":[]},{"path":"/articles/vignette3.html","id":"gllvm-as-a-model-based-ordination-method","dir":"Articles","previous_headings":"Ordination","what":"GLLVM as a model based ordination method","title":"Introduction to gllvm Part 1: Ordination","text":"GLLVMs can used model-based approach unconstrained ordination including two latent variables model: g(E(yij))=Œ≤0j+ùêÆ‚Ä≤ùõâjg(E(y_{ij})) = \\beta_{0j} + \\boldsymbol{u}_i'\\boldsymbol{\\theta}_j latent variable term try capture underlying factors driving species abundances sites. Predictions two latent variables, ùêÆÃÇ=(uÃÇi1,uÃÇi2)\\boldsymbol{\\hat u}_i=(\\hat u_{i1}, \\hat u_{i2}), provide coordinates sites ordination plot provides graphical representation sites similar terms species composition.","code":""},{"path":"/articles/vignette3.html","id":"ordination-plot","dir":"Articles","previous_headings":"Ordination","what":"Ordination plot","title":"Introduction to gllvm Part 1: Ordination","text":"ordiplot() produces ordination plots based fitted GLLVMs. Uncertainty ordination points model based ordination can assessed prediction regions based prediction errors latent variables. Prediction regions may also help interpreting differences ordination points really sign difference species composition sites.","code":""},{"path":"/articles/vignette3.html","id":"biplot","dir":"Articles","previous_headings":"Ordination","what":"Biplot","title":"Introduction to gllvm Part 1: Ordination","text":"species correlations can visualized biplot8 adding latent variable loadings ùõâj\\boldsymbol{\\theta}_j ordination sites, producing biplot, (argument biplot = TRUE ordiplot()). biplot latent variables loadings rotated LV loadings species direction sites abundant. Biplot can used finding groups correlated species finding indicator species common specific sites. example, species named Pardlugu common group sites located bottom (eg sites 8, 19, 20 21). x y axes may help interpretation.","code":"ordiplot(fitnb, biplot = TRUE) abline(h = 0, v = 0, lty=2)"},{"path":"/articles/vignette3.html","id":"environmental-gradients","dir":"Articles","previous_headings":"Ordination","what":"Environmental gradients","title":"Introduction to gllvm Part 1: Ordination","text":"potential impact environmental variables species communities can viewed coloring ordination points according variables. example, species named Pardlugu seems prefer sites lot dry soil mass low reflection soil surface cloudless sky.  environmental gradients stand quite clearly, indicating , least, differences species compositions sites can explained differences environmental conditions. next step include covariates model study precisely effects environmental variables: g(E(yij))=Œ≤0j+ùê±‚Ä≤ùõÉj+ùêÆ‚Ä≤ùõâjg(E(y_{ij})) = \\beta_{0j} + \\boldsymbol{x}_i'\\boldsymbol{\\beta}_{j} + \\boldsymbol{u}_i'\\boldsymbol{\\theta}_j","code":"# Arbitrary color palette, a vector length of 20. Can use, for example, colorRampPalette from package grDevices rbPal <- c(\"#00FA9A\", \"#00EC9F\", \"#00DFA4\", \"#00D2A9\", \"#00C5AF\", \"#00B8B4\", \"#00ABB9\", \"#009DBF\", \"#0090C4\", \"#0083C9\", \"#0076CF\", \"#0069D4\", \"#005CD9\", \"#004EDF\", \"#0041E4\", \"#0034E9\", \"#0027EF\", \"#001AF4\", \"#000DF9\", \"#0000FF\") X <- spider$x par(mfrow = c(3,2), mar=c(4,4,2,2)) for(i in 1:ncol(X)){ Col <- rbPal[as.numeric(cut(X[,i], breaks = 20))] ordiplot(fitnb, symbols = T, s.colors = Col, main = colnames(X)[i],           biplot = TRUE) }"},{"path":[]},{"path":"/articles/vignette4.html","id":"r-package-gllvm","dir":"Articles","previous_headings":"Introduction to gllvm","what":"R package gllvm","title":"Introduction to gllvm Part 2: Species correlations","text":"R package gllvm fits Generalized linear latent variable models (GLLVM) multivariate data1. Developed J. Niku, W.Brooks, R. Herliansyah, F.K.C. Hui, S. Taskinen, D.. Warton, B. van der Veen. package available GitHub: https://github.com/JenniNiku/gllvm CRAN: https://CRAN.R-project.org/package=gllvm Package installation: gllvm package depends R packages TMB mvabund, try install first. GLLVMs computationally intensive fit due integral log-likelihood. gllvm package overcomes computational problems applying closed form approximations log-likelihood using automatic differentiation C++ accelerate computation times (TMB2). Estimation performed using either variational approximation (VA3), extended variational approximation method (EVA4) Laplace approximation (LA5) method implemented via R package TMB. VA method faster accurate LA, applicable distributions link functions. Using gllvm can fit GLLVM without covariates gives model-based ordination biplots GLLVM environmental /trait covariates studying factors explaining species abundance Fourth corner models latent variables studying environmental-trait interactions GLLVM without latent variables fits basic multivariate GLMs Additional tools: residuals, information criteria, confidence intervals, visualization.","code":"# From CRAN install.packages(gllvm) # OR # From GitHub using devtools package's function install_github devtools::install_github(\"JenniNiku/gllvm\")"},{"path":[]},{"path":"/articles/vignette4.html","id":"data-input","dir":"Articles","previous_headings":"Introduction to gllvm","what":"Data input","title":"Introduction to gllvm Part 2: Species correlations","text":"Main function gllvm package gllvm(), can used fit GLLVMs multivariate data important arguments listed following: y: matrix abundances X: matrix data.frame environmental variables TR: matrix data.frame trait variables family: distribution responses num.lv: number latent variables method: approximation used ‚ÄúVA‚Äù ‚ÄúLA‚Äù row.eff: type row effects n.init: number random starting points latent variables starting.val: starting value method","code":"gllvm(y = NULL, X = NULL, TR = NULL, family, num.lv = 2,   formula = NULL, method = \"VA\", row.eff = FALSE, n.init=1, starting.val =\"res\", ...) library(gllvm) ## Loading required package: TMB ##  ## Attaching package: 'gllvm' ## The following object is masked from 'package:stats': ##  ##     simulate"},{"path":"/articles/vignette4.html","id":"example-spiders","dir":"Articles","previous_headings":"Introduction to gllvm","what":"Example: Spiders","title":"Introduction to gllvm Part 2: Species correlations","text":"Abundances 12 hunting spider species measured count 28 sites. soil.dry: Soil dry mass bare.sand: cover bare sand fallen.leaves: cover fallen leaves/twigs moss: cover moss herb.layer: cover herb layer reflection: reflection soil surface cloudless sky","code":""},{"path":"/articles/vignette4.html","id":"data-fitting","dir":"Articles","previous_headings":"Introduction to gllvm","what":"Data fitting","title":"Introduction to gllvm Part 2: Species correlations","text":"Fit GLLVM environmental variables g(E(yij))=Œ≤0j+ùê±‚Ä≤ùõÉj+ùêÆ‚Ä≤ùõâjg(E(y_{ij})) = \\beta_{0j} + \\boldsymbol{x}_i'\\boldsymbol{\\beta}_{j} + \\boldsymbol{u}_i'\\boldsymbol{\\theta}_j using gllvm:","code":"library(gllvm) data(\"spider\", package = \"mvabund\") fitx <- gllvm(y = spider$abund, X = spider$x, family = \"negative.binomial\", num.lv = 2) fitx ## Call:  ## gllvm(y = spider$abund, X = spider$x, family = \"negative.binomial\",  ##     num.lv = 2) ## family:  ## [1] \"negative.binomial\" ## method:  ## [1] \"VA\" ##  ## log-likelihood:  -593.6749  ## Residual degrees of freedom:  217  ## AIC:  1425.35  ## AICc:  1557.572  ## BIC:  1879.586"},{"path":"/articles/vignette4.html","id":"model-selection","dir":"Articles","previous_headings":"Introduction to gllvm","what":"Model selection","title":"Introduction to gllvm Part 2: Species correlations","text":"Number latent variables necessarily clear beforehand goal primarily ordination, information criteria can used model selection. example, using Akaike information criterion:","code":"X=spider$x fitx1 <- gllvm(spider$abund, X, family = \"negative.binomial\", num.lv = 1) fitx2 <- gllvm(spider$abund, X, family = \"negative.binomial\", num.lv = 2) fitx3 <- gllvm(spider$abund, X, family = \"negative.binomial\", num.lv = 3) AIC(fitx1) ## [1] 1393.843 AIC(fitx2) ## [1] 1425.35 AIC(fitx3) ## [1] 1445.35"},{"path":"/articles/vignette4.html","id":"residual-analysis","dir":"Articles","previous_headings":"Introduction to gllvm","what":"Residual analysis","title":"Introduction to gllvm Part 2: Species correlations","text":"Residual analysis can used assess appropriateness fitted model (eg. terms mean-variance relationship). Can performed using plot():","code":"par(mfrow = c(1,2)) plot(fitx1, which = 1:2)"},{"path":"/articles/vignette4.html","id":"exercises","dir":"Articles","previous_headings":"","what":"Exercises","title":"Introduction to gllvm Part 2: Species correlations","text":"E1. Load spider data mvabund package take look dataset. Package mvabund loaded gllvm just load function data().  E2. Fit GLLVM two latent variables spider data suitable distribution. Data consists counts spider species. 2. Response variables spider data counts, Poisson, negative binomial zero inflated Poisson possible. However, ZIP implemented Laplace method, need noticed, models fitted different methods can compared information criteria. Let‚Äôs try just Poisson NB.  NOTE results may exactly , initial values model fit slightly different, results may Based AIC, NB distribution suits better. residual analysis:  NOTE package uses randomized quantile residuals time plot residuals, look little different.   comparisons Laplace method well, using code , give conclusion NB distribution suits best: E3. Fit GLLVM environmental variables soil.dry reflection data suitable number latent variables. can extract two columns environmental variable matrix define model using formula. E4. Explore model fit. Find coefficients environmental covariates. Estimated parameters can obtained coef() function. Confidence intervals parameters obtained confint(). problems model fitting. model converges infinity local maxima:  GLLVMs complex models starting values big role. Choosing different starting value method (see argument starting.val) use multiple runs pick one giving highest log-likelihood value using argument n.init. variation starting points can added jitter.var. results look answers: results may exactly answers, initial values model fit slightly different, results may also differ slightly.","code":"library(gllvm) #Package **mvabund** is loaded with **gllvm** so just load with a function `data()`. data(\"spider\") # more info:  # ?spider # response matrix: spider$abund ##       Alopacce Alopcune Alopfabr Arctlute Arctperi Auloalbi Pardlugu Pardmont ##  [1,]       25       10        0        0        0        4        0       60 ##  [2,]        0        2        0        0        0       30        1        1 ##  [3,]       15       20        2        2        0        9        1       29 ##  [4,]        2        6        0        1        0       24        1        7 ##  [5,]        1       20        0        2        0        9        1        2 ##  [6,]        0        6        0        6        0        6        0       11 ##  [7,]        2        7        0       12        0       16        1       30 ##  [8,]        0       11        0        0        0        7       55        2 ##  [9,]        1        1        0        0        0        0        0       26 ## [10,]        3        0        1        0        0        0        0       22 ## [11,]       15        1        2        0        0        1        0       95 ## [12,]       16       13        0        0        0        0        0       96 ## [13,]        3       43        1        2        0       18        1       24 ## [14,]        0        2        0        1        0        4        3       14 ## [15,]        0        0        0        0        0        0        6        0 ## [16,]        0        3        0        0        0        0        6        0 ## [17,]        0        0        0        0        0        0        2        0 ## [18,]        0        1        0        0        0        0        5        0 ## [19,]        0        1        0        0        0        0       12        0 ## [20,]        0        2        0        0        0        0       13        0 ## [21,]        0        1        0        0        0        0       16        1 ## [22,]        7        0       16        0        4        0        0        2 ## [23,]       17        0       15        0        7        0        2        6 ## [24,]       11        0       20        0        5        0        0        3 ## [25,]        9        1        9        0        0        2        1       11 ## [26,]        3        0        6        0       18        0        0        0 ## [27,]       29        0       11        0        4        0        0        1 ## [28,]       15        0       14        0        1        0        0        6 ##       Pardnigr Pardpull Trocterr Zoraspin ##  [1,]       12       45       57        4 ##  [2,]       15       37       65        9 ##  [3,]       18       45       66        1 ##  [4,]       29       94       86       25 ##  [5,]      135       76       91       17 ##  [6,]       27       24       63       34 ##  [7,]       89      105      118       16 ##  [8,]        2        1       30        3 ##  [9,]        1        1        2        0 ## [10,]        0        0        1        0 ## [11,]        0        1        4        0 ## [12,]        1        8       13        0 ## [13,]       53       72       97       22 ## [14,]       15       72       94       32 ## [15,]        0        0       25        3 ## [16,]        2        0       28        4 ## [17,]        0        0       23        2 ## [18,]        0        0       25        0 ## [19,]        1        0       22        3 ## [20,]        0        0       22        2 ## [21,]        0        1       18        2 ## [22,]        0        0        1        0 ## [23,]        0        0        1        0 ## [24,]        0        0        0        0 ## [25,]        6        0       16        6 ## [26,]        0        0        1        0 ## [27,]        0        0        0        0 ## [28,]        0        0        2        0 # Environmental variables spider$x ##    soil.dry bare.sand fallen.leaves   moss herb.layer reflection ## 1    2.3321    0.0000        0.0000 3.0445     4.4543     3.9120 ## 2    3.0493    0.0000        1.7918 1.0986     4.5643     1.6094 ## 3    2.5572    0.0000        0.0000 2.3979     4.6052     3.6889 ## 4    2.6741    0.0000        0.0000 2.3979     4.6151     2.9957 ## 5    3.0155    0.0000        0.0000 0.0000     4.6151     2.3026 ## 6    3.3810    2.3979        3.4340 2.3979     3.4340     0.6931 ## 7    3.1781    0.0000        0.0000 0.6931     4.6151     2.3026 ## 8    2.6247    0.0000        4.2627 1.0986     3.4340     0.6931 ## 9    2.4849    0.0000        0.0000 4.3307     3.2581     3.4012 ## 10   2.1972    3.9318        0.0000 3.4340     3.0445     3.6889 ## 11   2.2192    0.0000        0.0000 4.1109     3.7136     3.6889 ## 12   2.2925    0.0000        0.0000 3.8286     4.0254     3.6889 ## 13   3.5175    1.7918        1.7918 0.6931     4.5109     3.4012 ## 14   3.0865    0.0000        0.0000 1.7918     4.5643     1.0986 ## 15   3.2696    0.0000        4.3944 0.6931     3.0445     0.6931 ## 16   3.0301    0.0000        4.6052 0.6931     0.6931     0.0000 ## 17   3.3322    0.0000        4.4543 0.6931     3.0445     1.0986 ## 18   3.1224    0.0000        4.3944 0.0000     3.0445     1.0986 ## 19   2.9232    0.0000        4.5109 1.6094     1.6094     0.0000 ## 20   3.1091    0.0000        4.5951 0.6931     0.6931     0.0000 ## 21   2.9755    0.0000        4.5643 0.6931     1.7918     0.0000 ## 22   1.2528    3.2581        0.0000 4.3307     0.6931     3.9120 ## 23   1.1939    3.0445        0.0000 4.0254     3.2581     4.0943 ## 24   1.6487    3.2581        0.0000 4.0254     3.0445     4.0073 ## 25   1.8245    3.5835        0.0000 1.0986     4.1109     2.3026 ## 26   0.9933    4.5109        0.0000 1.7918     1.7918     4.3820 ## 27   0.9555    2.3979        0.0000 3.8286     3.4340     3.6889 ## 28   0.9555    3.4340        0.0000 3.7136     3.4340     3.6889 # Plot data using boxplot: boxplot(spider$abund) # Take a look at the function documentation for help:  ?gllvm # Fit a GLLVM to data fitp <- gllvm(y=spider$abund, family = poisson(), num.lv = 2) fitp ## Call:  ## gllvm(y = spider$abund, family = poisson(), num.lv = 2) ## family:  ## [1] \"poisson\" ## method:  ## [1] \"VA\" ##  ## log-likelihood:  -845.8277  ## Residual degrees of freedom:  301  ## AIC:  1761.655  ## AICc:  1770.055  ## BIC:  1895.254 fitnb <- gllvm(y=spider$abund, family = \"negative.binomial\", num.lv = 2) fitnb ## Call:  ## gllvm(y = spider$abund, family = \"negative.binomial\", num.lv = 2) ## family:  ## [1] \"negative.binomial\" ## method:  ## [1] \"VA\" ##  ## log-likelihood:  -733.6807  ## Residual degrees of freedom:  289  ## AIC:  1561.361  ## AICc:  1577.028  ## BIC:  1740.766 # Fit a GLLVM to data par(mfrow = c(1,2)) plot(fitp, which = 1:2) plot(fitnb, which = 1:2) fitLAp <- gllvm(y=spider$abund, family = poisson(), method = \"LA\", num.lv = 2) fitLAnb <- gllvm(y=spider$abund, family = \"negative.binomial\", method = \"LA\", num.lv = 2) fitLAzip <- gllvm(y=spider$abund, family = \"ZIP\", method = \"LA\", num.lv = 2) AIC(fitLAp) AIC(fitLAnb) AIC(fitLAzip) # `soil.dry` and `reflection` are in columns 1 and 6 X <- spider$x[,c(1,6)] fitx1 <- gllvm(spider$abund, X, family = \"negative.binomial\", num.lv = 1) fitx2 <- gllvm(spider$abund, X, family = \"negative.binomial\", num.lv = 2) fitx3 <- gllvm(spider$abund, X, family = \"negative.binomial\", num.lv = 3) AIC(fitx1) ## [1] 1449.428 AIC(fitx2) ## [1] 1486.451 AIC(fitx3) ## [1] 1491.428 # Or alternatively using formula: fitx1 <- gllvm(spider$abund, spider$x, formula = ~soil.dry + reflection, family = \"negative.binomial\", num.lv = 1) fitx1 ## Call:  ## gllvm(y = spider$abund, X = spider$x, formula = ~soil.dry + reflection,  ##     family = \"negative.binomial\", num.lv = 1) ## family:  ## [1] \"negative.binomial\" ## method:  ## [1] \"VA\" ##  ## log-likelihood:  -664.7139  ## Residual degrees of freedom:  276  ## AIC:  1449.428  ## AICc:  1476.046  ## BIC:  1678.454 coef(fitx1) ## $Species.scores ##                   LV1 ## Alopacce 1.000000e+00 ## Alopcune 1.286564e+00 ## Alopfabr 4.411474e-01 ## Arctlute 2.261271e+00 ## Arctperi 6.558817e-06 ## Auloalbi 2.499060e+00 ## Pardlugu 3.973132e-01 ## Pardmont 9.557377e-01 ## Pardnigr 2.565877e+00 ## Pardpull 2.528257e+00 ## Trocterr 9.659180e-01 ## Zoraspin 1.751833e+00 ##  ## $sigma.lv ##       LV1  ## 0.8536904  ##  ## $Intercept ##   Alopacce   Alopcune   Alopfabr   Arctlute   Arctperi   Auloalbi   Pardlugu  ##  -3.010735  -7.407244   2.077617 -21.478661  -7.920069 -12.969707   4.569019  ##   Pardmont   Pardnigr   Pardpull   Trocterr   Zoraspin  ##  -6.088991 -14.644413 -16.457915  -3.712424  -9.219694  ##  ## $Xcoef ##            soil.dry reflection ## Alopacce -0.3438061  1.5945287 ## Alopcune  2.6112725  0.6246891 ## Alopfabr -1.8668475  0.7468388 ## Arctlute  6.3227353  0.8208664 ## Arctperi -1.7566353  2.8892032 ## Auloalbi  4.1826104  0.6832891 ## Pardlugu -0.5456458 -1.2606137 ## Pardmont  1.7920398  1.4688279 ## Pardnigr  4.9045138  0.8601683 ## Pardpull  5.3505939  1.2824173 ## Trocterr  2.3361048  0.2234954 ## Zoraspin  3.5570334  0.1199447 ##  ## $inv.phi ##     Alopacce     Alopcune     Alopfabr     Arctlute     Arctperi     Auloalbi  ## 9.375940e+00 1.699565e+00 1.577636e+00 1.063992e+00 4.391997e+05 1.511603e+00  ##     Pardlugu     Pardmont     Pardnigr     Pardpull     Trocterr     Zoraspin  ## 1.543843e+00 9.784953e-01 2.518153e+00 2.339355e+00 1.470886e+01 3.624948e+00  ##  ## $phi ##     Alopacce     Alopcune     Alopfabr     Arctlute     Arctperi     Auloalbi  ## 1.066560e-01 5.883857e-01 6.338598e-01 9.398569e-01 2.276869e-06 6.615492e-01  ##     Pardlugu     Pardmont     Pardnigr     Pardpull     Trocterr     Zoraspin  ## 6.477341e-01 1.021977e+00 3.971164e-01 4.274683e-01 6.798622e-02 2.758661e-01 # Coefficients for covariates are named as `Xcoef` # Confidence intervals for these coefficients: confint(fitx1, parm = \"Xcoef\") ##               cilow       ciup ## Xcoef1  -1.02657582  0.3389637 ## Xcoef2   1.34798979  3.8745552 ## Xcoef3  -2.85510118 -0.8785939 ## Xcoef4   2.24760383 10.3978668 ## Xcoef5  -2.87603054 -0.6372400 ## Xcoef6   1.79232232  6.5728985 ## Xcoef7  -1.64615225  0.5548606 ## Xcoef8   0.73330963  2.8507700 ## Xcoef9   2.78645009  7.0225774 ## Xcoef10  3.14444174  7.5567460 ## Xcoef11  1.64647443  3.0257352 ## Xcoef12  1.97813993  5.1359268 ## Xcoef13  0.95846116  2.2305962 ## Xcoef14  0.13820904  1.1111691 ## Xcoef15 -0.24255716  1.7362347 ## Xcoef16 -0.34239253  1.9841252 ## Xcoef17  1.63797487  4.1404316 ## Xcoef18 -0.18415487  1.5507331 ## Xcoef19 -1.73569020 -0.7855372 ## Xcoef20  0.89971165  2.0379442 ## Xcoef21  0.01749653  1.7028400 ## Xcoef22  0.40749684  2.1573378 ## Xcoef23 -0.08588201  0.5328728 ## Xcoef24 -0.46477569  0.7046652 # The first 12 intervals are for soil.dry and next 12 for reflection"},{"path":[]},{"path":"/articles/vignette4.html","id":"species-correlations","dir":"Articles","previous_headings":"Studying species correlations","what":"Species correlations","title":"Introduction to gllvm Part 2: Species correlations","text":"Latent variables induce correlation across response variables, provide means estimating correlation patterns across species, extent can explained environmental variables. Information correlation stored LV loadings ùõâj\\boldsymbol\\theta_j, residual covariance matrix, storing information species co-occurrence explained environmental variables, can calculated ùö∫=ùö™ùö™‚ä§\\boldsymbol\\Sigma=\\boldsymbol\\Gamma \\boldsymbol\\Gamma^\\top, ùö™=[ùõâ1‚Ä¶ùõâm]‚Ä≤\\boldsymbol\\Gamma = [\\boldsymbol\\theta_1\\dots\\boldsymbol\\theta_m]'. getResidualCor function can used estimate correlation matrix linear predictor across species. Let‚Äôs consider first correlation matrix based model without predictors: g(E(yij))=Œ≤0j+ùêÆ‚Ä≤ùõâjg(E(y_{ij})) = \\beta_{0j} + \\boldsymbol{u}_i'\\boldsymbol{\\theta}_j correlation matrix based model take account environmental conditions driving species abundances sites, reflects observed.","code":"fitnb <- gllvm(spider$abund, family = \"negative.binomial\", num.lv = 2)"},{"path":"/articles/vignette4.html","id":"visualizing-species-correlations","dir":"Articles","previous_headings":"Studying species correlations","what":"Visualizing species correlations","title":"Introduction to gllvm Part 2: Species correlations","text":"residual correlations can visualized either using biplot, shows species ordination, visualizing actual correlation matrix using, eg., corrplot package. biplot can produced using function ordiplot() argument biplot = TRUE:  Correlations can visualized precisely using corrplot() function:  correlations can also visualized species ordination biplot:","code":"fitnb <- gllvm(spider$abund, family = \"negative.binomial\", num.lv = 2) ordiplot(fitnb, biplot = TRUE) abline(h = 0, v = 0, lty=2) fitnb <- gllvm(spider$abund, family = \"negative.binomial\", num.lv = 2) cr <- getResidualCor(fitnb) library(corrplot); ## corrplot 0.94 loaded corrplot(cr, diag = FALSE, type = \"lower\", method = \"square\", tl.srt = 25) ordiplot(fitnb, biplot = TRUE) abline(h = 0, v = 0, lty=2)"},{"path":[]},{"path":"/articles/vignette4.html","id":"studying-effects-of-environmental-variables","dir":"Articles","previous_headings":"Studying effects of covariates","what":"Studying effects of environmental variables","title":"Introduction to gllvm Part 2: Species correlations","text":"effects environmental variables species can studied including environmental variables ùê±\\boldsymbol{x}_i GLLVM: g(E(yij))=Œ≤0j+ùê±‚Ä≤ùõÉj+ùêÆ‚Ä≤ùõâjg(E(y_{ij})) = \\beta_{0j} + \\boldsymbol{x}_i'\\boldsymbol{\\beta}_{j} + \\boldsymbol{u}_i'\\boldsymbol{\\theta}_j. ùõÉj\\boldsymbol{\\beta}_{j} vector species specific coefficients environmental variables. Next consider example two environmental variables, soil.dry (soil dry mass) reflection (reflection soil surface cloudless sky), shows different environmental gradients ordination:","code":"rbPal <- c(\"#00FA9A\", \"#00EC9F\", \"#00DFA4\", \"#00D2A9\", \"#00C5AF\", \"#00B8B4\", \"#00ABB9\", \"#009DBF\", \"#0090C4\", \"#0083C9\", \"#0076CF\", \"#0069D4\", \"#005CD9\", \"#004EDF\", \"#0041E4\", \"#0034E9\", \"#0027EF\", \"#001AF4\", \"#000DF9\", \"#0000FF\") X <- spider$x[,c(1,6)] par(mfrow = c(1,2), mar=c(4,4,2,2)) for(i in 1:ncol(X)){ Col <- rbPal[as.numeric(cut(X[,i], breaks = 20))] ordiplot(fitnb, symbols = T, s.colors = Col, main = colnames(X)[i], biplot = TRUE) abline(h=0,v=0, lty=2)  }"},{"path":"/articles/vignette4.html","id":"coefficient-plot","dir":"Articles","previous_headings":"Studying effects of covariates","what":"Coefficient plot","title":"Introduction to gllvm Part 2: Species correlations","text":"coefplot() plots point estimates species specific environmental coefficients ùõÉj\\boldsymbol{\\beta}_{j} confidence intervals. biplots environmental gradients indicated , example, species named Arctperi prefers sites low amount dry soil mass high amount reflection sky, similar effects can seen coefficients plotted confidence intervals.","code":"fitx1 <- gllvm(spider$abund, X, family = \"negative.binomial\", num.lv = 1) coefplot(fitx1, mfrow = c(1,2), cex.ylab = 0.8)"},{"path":"/articles/vignette4.html","id":"correlation-matrix","dir":"Articles","previous_headings":"Studying effects of covariates","what":"Correlation matrix","title":"Introduction to gllvm Part 2: Species correlations","text":"Correlation matrix model predictors shows correlation patterns species effect predictors taken account. effects covariates dry.soil reflection accounted, negative correlation species seem exist anymore, indicating negative correlations explained different environmental conditions sites species respond , rather direct species interactions.","code":"crx <- getResidualCor(fitx1) corrplot(crx, diag = FALSE, type = \"lower\", method = \"square\", tl.srt = 25)"},{"path":"/articles/vignette4.html","id":"fourth-corner-models","dir":"Articles","previous_headings":"Studying effects of covariates","what":"Fourth corner models","title":"Introduction to gllvm Part 2: Species correlations","text":"species trait variables ùê≠j\\boldsymbol{t}_j, measuring eg. species behaviour physical appearance, available, fourth corner models considered: g(E(yij))=Œ≤0j+ùê±‚Ä≤ùõÉj+ùê±‚Ä≤ùêÅùê≠j+ùêÆ‚Ä≤ùõâjg(E(y_{ij})) = \\beta_{0j} + \\boldsymbol{x}_i'\\boldsymbol{\\beta}_{j} + \\boldsymbol{x}_i'\\boldsymbol{B}_{}\\boldsymbol{t}_j  + \\boldsymbol{u}_i'\\boldsymbol{\\theta}_j models can also fitted gllvm() function including matrix traits argument TR. Examples can found gllvm package‚Äôs vignettes.","code":""},{"path":[]},{"path":"/articles/vignette6.html","id":"constrained-ordination","dir":"Articles","previous_headings":"","what":"Constrained ordination","title":"Ordination with predictors","text":"Let us first consider constrained ordination actually . first shortly explaining reduced rank regression (RRR). First, consider model: Œ∑ij=Œ≤0j+ùêó‚ä§ùõÉj. \\eta_{ij} = \\beta_{0j} + \\boldsymbol{X}_i^\\top\\boldsymbol{\\beta}_j. , ùõÉj\\boldsymbol{\\beta}_j slopes represent species responses pp predictor variables site ii, ùêó\\boldsymbol{X}_i. gllvm R-package, code fit model : set number unconstrained latent variables zero, defaults two. ‚Äúrank‚Äù ùêó‚ä§ùõÉj\\boldsymbol{X}_i^\\top\\boldsymbol{\\beta}_j pp. Constrained ordination introduces constraint species slopes matrix, namely number independent columns ùõÉj\\boldsymbol{\\beta}_j (column independent can formulated linear combination another). reduced ranks community ecology referred ecological gradients, can also understood ordination axes latent variables. define latent variable ùê≥=ùêÅ‚ä§ùêó,lv+ùõú\\boldsymbol{z}_i = \\boldsymbol{B}^\\top\\boldsymbol{X}_{,lv} + \\boldsymbol{\\epsilon}_i, p√ódp\\times d matrix slopes, can understand constrained ordination regression latent variable ecological gradient, except residual ùõú\\boldsymbol{\\epsilon}_i omitted, .e.¬†assume ecological gradient can represented perfectly predictor variables, model becomes: Œ∑ij=Œ≤0j+ùêó‚ä§ùêÅùõÑj.\\begin{equation} \\eta_{ij} = \\beta_{0j} + \\boldsymbol{X}_i^\\top\\boldsymbol{B}\\boldsymbol{\\gamma}_j. \\end{equation} ùêÅ\\boldsymbol{B} d√óKd \\times K matrix slopes per predictor latent variable, ùõÑj\\boldsymbol{\\gamma}_j set slopes species per latent variable. parametrization practically useful, drastically reduces number parameters compared multivariate regression. rank, number latent variables ordination axes, can determined cross-validation, alternatively using information criteria. code gllvm R-package, arbitrary choice two latent variables, : predictor slopes (called canonical coefficients e.g., CCA RDA) available RRGLM$params$LvXcoef can retrieved coef(RRGLM) summary(RRGLM): Note use rotate argument. ensures solution canonical coefficients rotated solution displayed ordiplot (rotate argument default set TRUE). summary can useful determining drives vertical horizontal shifts location species sites ordination diagram (probably much ). Unlike canonical coefficients, reconstructed species-specific effects invariant rotation, always good practice additionally study exhaustive inference;  fit constrained ordination make use additional optimization routines R-packages. necessary, without constraint predictor slopes orthogonal model unidentifiable. might thus happen, fitting model warning pops-along lines predictor slopes orthogonal, case re-fit model different optimization routine (optimizer='alabama') starting values (starting.values='zero') order get constraints canonical coefficients better converge. Note: general improve convergence, good practice center scale predictor variables.","code":"MGLM <- gllvm(Y, X = X, family = \"poisson\", num.lv = 0) RRGLM <- gllvm(Y, X = X, family = \"poisson\", num.RR = 2) summary(RRGLM, rotate = TRUE) ##  ## Call: ## gllvm(y = Y, X = X, family = \"poisson\", num.RR = 6, starting.val = \"zero\",  ##     reltol.c = 1e-15) ##  ## Family:  poisson  ##  ## AIC:  1841.216 AICc:  1898.108 BIC:  2161.853 LL:  -836.6 df:  84  ##  ## Informed LVs:  0  ## Constrained LVs:  6  ## Unconstrained LVs:  0  ##  ## Formula:  ~ 1  ## LV formula:  ~soil.dry + bare.sand + fallen.leaves + moss + herb.layer + reflection  ##  ## Coefficients LV predictors: ##                      Estimate Std. Error z value Pr(>|z|)     ## soil.dry(CLV1)       0.739241   0.545770   1.354  0.17558     ## bare.sand(CLV1)     -1.504227   0.738137  -2.038  0.04156 *   ## fallen.leaves(CLV1)  0.249424   1.567803   0.159  0.87360     ## moss(CLV1)          -0.406028   1.325428  -0.306  0.75935     ## herb.layer(CLV1)     1.983275   1.046501   1.895  0.05807 .   ## reflection(CLV1)    -2.069525   0.941468  -2.198  0.02794 *   ## soil.dry(CLV2)      -0.524884   0.325749  -1.611  0.10711     ## bare.sand(CLV2)     -0.761665   0.395216  -1.927  0.05395 .   ## fallen.leaves(CLV2) -0.877375   0.969414  -0.905  0.36543     ## moss(CLV2)           0.130217   0.659360   0.197  0.84344     ## herb.layer(CLV2)     1.793405   0.584467   3.068  0.00215 **  ## reflection(CLV2)     0.315377   0.600692   0.525  0.59957     ## soil.dry(CLV3)       0.750252   0.988362   0.759  0.44780     ## bare.sand(CLV3)     -0.897121   0.928729  -0.966  0.33406     ## fallen.leaves(CLV3) -1.145885   1.649139  -0.695  0.48716     ## moss(CLV3)          -0.342914   0.768733  -0.446  0.65554     ## herb.layer(CLV3)    -1.345636   1.047277  -1.285  0.19883     ## reflection(CLV3)     0.820609   0.674645   1.216  0.22385     ## soil.dry(CLV4)      -0.997668   0.514773  -1.938  0.05261 .   ## bare.sand(CLV4)     -0.522736   0.432766  -1.208  0.22709     ## fallen.leaves(CLV4) -0.606122   1.004898  -0.603  0.54640     ## moss(CLV4)           0.150650   0.698787   0.216  0.82931     ## herb.layer(CLV4)     0.026434   0.669088   0.040  0.96849     ## reflection(CLV4)    -1.211241   0.496380  -2.440  0.01468 *   ## soil.dry(CLV5)       0.592508   0.230516   2.570  0.01016 *   ## bare.sand(CLV5)      0.430542   0.196589   2.190  0.02852 *   ## fallen.leaves(CLV5) -0.814613   0.341699  -2.384  0.01713 *   ## moss(CLV5)           0.289127   0.182575   1.584  0.11328     ## herb.layer(CLV5)    -0.160839   0.253159  -0.635  0.52521     ## reflection(CLV5)    -0.726094   0.149143  -4.868 1.12e-06 *** ## soil.dry(CLV6)      -0.031456   0.020354  -1.545  0.12224     ## bare.sand(CLV6)      0.004485   0.014587   0.307  0.75850     ## fallen.leaves(CLV6) -0.057097   0.033731  -1.693  0.09051 .   ## moss(CLV6)          -0.086429   0.020041  -4.313 1.61e-05 *** ## herb.layer(CLV6)    -0.015565   0.019434  -0.801  0.42316     ## reflection(CLV6)    -0.009270   0.014017  -0.661  0.50840     ## --- ## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 coefplot(RRGLM, cex.ylab = 0.5, mar = c(4,2,2,1))"},{"path":"/articles/vignette6.html","id":"random-slopes","dir":"Articles","previous_headings":"Constrained ordination","what":"Random slopes","title":"Ordination with predictors","text":"Generally, constrained ordination can difficulty estimating predictor slopes, example due co-linearity predictors. One way solve , using regularisation. Regularisation adds penalty objective function, shrink parameter estimates closer zero unimportant. convenient way add penalty, formulating random slopes model. gllvm done following syntax: randomB argument additionally used specify variances random slopes unique per latent variable (.e.¬†assume random slopes per predictor come distribution), per predictor (.e.¬†assume random slopes per latent variable come distribution). Either setting benefits, first implies covariance species responses predictor, whereas latter can serve shrink effects single predictor near zero. general, potential stabilize model fitting reduce variance parameter estimates. Finally, slope categorical predictor intercept, formulation also allows include random intercepts ordination. plot species-specific effects can constructed randomCoefplot function:  using random-effects formulation, summary table confidence intervals available canonical coefficients. possible construct summary table prediction random-effects association prediction errors follows: range potential use cases random canonical coefficients, pragmatically, inducing shrinkage predictor effects can result better ‚Äúbehaved‚Äù (fewer outliers) ordination plots.","code":"RRGLMb1 <- gllvm(Y, X = X, family=\"poisson\", num.RR = 2, randomB = \"LV\") RRGLMb1 <- gllvm(Y, X = X, family=\"poisson\", num.RR = 2, randomB = \"P\") randomCoefplot(RRGLMb1, cex.ylab = 0.5, mar = c(4,2,2,1)) # Get coefficients coefs<-data.frame(coef(RRGLMb1,\"LvXcoef\")) coefs$Predictor <- row.names(coefs)  # Wide to long coefsTab<-reshape(coefs,          direction = \"long\",         varying = list(colnames(coefs)[1:(RRGLMb1$num.lv.c+RRGLMb1$num.RR)]),         v.names = \"Estimate\",          times=colnames(coefs)[1:(RRGLMb1$num.lv.c+RRGLMb1$num.RR)],          timevar = \"LV\",         new.row.names = NULL) # Add prediction errors coefsTab <- cbind(coefsTab,PE=c(getPredictErr(RRGLMb1)$b.lv)) row.names(coefsTab)<-1:nrow(coefsTab) coefsTab[,-4] ##        Predictor   LV     Estimate         PE ## 1       soil.dry CLV1 -0.080723064 0.07814185 ## 2      bare.sand CLV1  0.001068039 0.06094532 ## 3  fallen.leaves CLV1 -0.297420665 0.10174450 ## 4           moss CLV1  0.809784152 0.09236949 ## 5     herb.layer CLV1  0.447862820 0.10908394 ## 6     reflection CLV1  0.836470551 0.13821746 ## 7       soil.dry CLV2  0.945275422 0.12950352 ## 8      bare.sand CLV2 -0.075514139 0.04851537 ## 9  fallen.leaves CLV2 -0.212377414 0.23493650 ## 10          moss CLV2 -0.386609004 0.64863215 ## 11    herb.layer CLV2  0.547191839 0.37130075 ## 12    reflection CLV2 -0.413646154 0.69906377"},{"path":"/articles/vignette6.html","id":"concurrent-ordination","dir":"Articles","previous_headings":"","what":"Concurrent ordination","title":"Ordination with predictors","text":"Unlike R-packages, can now formulate ordination additional random-effects included act like LV-level residuals (let‚Äôs face , often 100% confident measured relevant predictors?), can assume ecological gradient represented unmeasured measured predictors (former residual can understood). code : num.lv.c argument used specify number latent variables concurrent ordination (.e.¬†latent variables informed predictors constrained), previously num.RR argument used specify number constrained latent variables. number constrained, informed, unconstrained latent variables can freely combined using num.RR, num.lv.c num.lv arguments (careful overparameterize overfit model!).","code":"CGLLVM <- gllvm(Y, X = X, family = \"poisson\", num.lv.c = 2)"},{"path":"/articles/vignette6.html","id":"partial-constrained-or-concurrent-ordination","dir":"Articles","previous_headings":"","what":"Partial constrained or concurrent ordination","title":"Ordination with predictors","text":"also possible combine constrained concurrent ordination full-rank predictor effects. combine concurrent ordination full-rank predictor effects need additionally use formula interface: lv.formula formula ordination predictors (concurrent constrained), formula formula tells model predictors partialled ordination. Note, two formula arguments include predictor variables, predictor variables provided X argument. essence, performs partial concurrent ordination, num.RR partial constrained ordination. effects partialled ordination (ordination conditioned ) can also treated random effects, sometimes preferable. Partialled means effects taken ordination: effect soil.dry longer visible ordination, arrow drawn effect. possible inspect effect species coefplot function, covariate effects model, inside ordination outside. Information criteria can used determine correct number latent variables, though demonstrate . Results model can examined details using summary(\\cdot) function: Finally, can use tools R-package inference, creating ordination diagram arrows:  Arrows show less intense red (pink), predictors confidence interval slope includes zero, least one two plotted dimensions. various arguments included function improve readability figure, look documentation. arrows always proportional size plot, predictor largest slope estimate largest arrow. predictors effect, slopes ùêÅ\\boldsymbol{B} close zero. also possible use quadratic flag fit quadratic response model though demonstrate , partition variance per latent variable specific predictors.","code":"PCGLLVM <- gllvm(Y, X = X, family = \"poisson\", num.lv.c = 2,                   lv.formula = ~bare.sand + fallen.leaves + moss+herb.layer + reflection,                   formula = ~soil.dry) summary(CGLLVM) ##  ## Call: ## gllvm(y = Y, X = X, num.lv.c = 2, family = \"poisson\", starting.val = \"zero\") ##  ## Family:  poisson  ##  ## AIC:  1665.321 AICc:  1680.282 BIC:  1840.908 LL:  -786.7 df:  46  ##  ## Informed LVs:  2  ## Constrained LVs:  0  ## Unconstrained LVs:  0  ## Residual standard deviation of LVs:  0.6577 0.5729  ##  ## Formula:  ~ 1  ## LV formula:  ~soil.dry + bare.sand + fallen.leaves + moss + herb.layer + reflection  ##  ## Coefficients LV predictors: ##                     Estimate Std. Error z value Pr(>|z|)     ## soil.dry(CLV1)      -0.98389    0.33529  -2.934 0.003342 **  ## bare.sand(CLV1)      0.47349    0.23214   2.040 0.041380 *   ## fallen.leaves(CLV1)  0.33758    0.39012   0.865 0.386866     ## moss(CLV1)           0.67915    0.31526   2.154 0.031224 *   ## herb.layer(CLV1)    -0.40845    0.22679  -1.801 0.071706 .   ## reflection(CLV1)     0.83825    0.37495   2.236 0.025376 *   ## soil.dry(CLV2)       0.93546    0.26428   3.540 0.000401 *** ## bare.sand(CLV2)     -0.02443    0.19079  -0.128 0.898113     ## fallen.leaves(CLV2) -0.84909    0.31374  -2.706 0.006803 **  ## moss(CLV2)           0.51290    0.23897   2.146 0.031851 *   ## herb.layer(CLV2)     0.42712    0.19684   2.170 0.030013 *   ## reflection(CLV2)     0.17366    0.31602   0.550 0.582646     ## --- ## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 ordiplot(CGLLVM, biplot = TRUE)"},{"path":[]},{"path":"/articles/vignette7.html","id":"phylogenetically-structured-environmental-responses","dir":"Articles","previous_headings":"","what":"Phylogenetically structured environmental responses","title":"Phylogenetic random effects","text":"vignette demonstrate fit models incorporate phylogenetic information random effects. , make use adjusted version familiar lme4-formula interface (Bates et al. 2015). , use data Abrego et al. (2015). includes information 215 fungal species 1666 European beech logs, analyzed original authors using similar model. start loading data: included version package contain available environmental covariates, used original analysis. includes diameter breast height (DBH.CM), decay stage (AVERDP), connectivity surrounding forest (CONNECT10), annual temperature range, annual precipitation, logarithm reserve‚Äôs area. can think model two covariance matrices: one correlation covariate effects, another incorporates correlation species due phylogeny. former specified via formula interface, form latter (less) fixed present.","code":"library(gllvm)  data(fungi) Y <- fungi$Y X <- fungi$X tree <- fungi$tree # the tree colMat <- fungi$C # e.g., from ape::vcv(tree) dist <- fungi$dist # e.g., from ape::cophenetic.phylo(tree)  # Scale the predictors covs <- c(\"DBH.CM\",\"AVERDP\",\"CONNECT10\",\"TEMPR\",\"PRECIP\",\"log.AREA\") X[,covs] <- scale(X[, covs])"},{"path":"/articles/vignette7.html","id":"species-ordering","dir":"Articles","previous_headings":"Phylogenetically structured environmental responses","what":"Species ordering","title":"Phylogenetic random effects","text":"important note error NNGP approximation used fitting models depends somewhat order species data (Guinness 2018). software can minimize number VA parameters necessary utilizing block structure phylogeny (.e., full independence due top splits), ideal ordering often provided tip labels phylogeny (make sure arbitrarily order response data). VA method gllvm package retains block structure phylogenetic covariance matrix. necessarily optimal terms approximation error NNGP. less ideal ordering requires larger number nearest neighbours accurate approximation. cases ordering phylogenetic tree seems function poorly, provide function (note, exported) package help evaluate error due certain species ordering findOrder(). calculates Frobenius norm product sparse approximation inverse phylogenetic covariance matrix phylogenetic covariance matrix, minus identity matrix, given species order number nearest neighbours. returns error, approximation, ordering (retains block structure withinBlock = TRUE, default). short: lower error means better approximation (note trade-). code demonstrate :  red lines indicate 10, 15, 20 neighbours. Clearly, ordering species sum squared distances, first eigenvector phylogenetic covariance matrix, gives best approximation (.e., accurate least neighbouts) dataset. Genneraly, serves demonstrate species order matter approximation, better order may available. plot can see error reduces quickly towards 10-15 neighbours, levels 50 neighbours. plotted curve wit computation time, probably exhibit opposite displayed pattern.","code":"# order of species in phylogeny tips # with a plot of error vs. nearest neighbours err1 <- NULL for(i in 1:215){ approx1 <- gllvm:::findOrder(covMat = colMat, distMat = dist, nn = i) err1 <- c(err1, approx1$err) } plot(y=err1,x=1:215,type=\"l\", xlab = \"Neighbours\", ylab = \"Approximation error\") abline(v = 10, col = \"red\", lty = \"dotted\") abline(v = 15, col = \"red\", lty = \"dashed\") abline(v = 20, col = \"red\")  # order species alphabetically err2 <- NULL for(i in 1:215){ approx2 <- gllvm:::findOrder(covMat = colMat, distMat = dist, nn = i, order = order(colnames(Y))) err2 <- c(err2, approx2$err) } lines(y=err2,x=1:215,col=\"blue\")  # order species by sum of squared distances err3 <- NULL for(i in 1:215){ approx3 <- gllvm:::findOrder(covMat = colMat, distMat = dist, nn = i, order = order(apply(dist,2,function(x)sum(x^2)),decreasing=TRUE)) err3 <- c(err3, approx3$err) } lines(y=err3,x=1:215,col=\"forestgreen\")  # order species by distance to the root allDists <- ape::dist.nodes(tree) err4 <- NULL for(i in 1:215){ approx4 <- gllvm:::findOrder(covMat = colMat, distMat = dist, nn = i,           order = as.integer(names(sort(allDists[1:length(tree$tip.label), nrow(allDists)],decreasing = TRUE)))) err4 <- c(err4, approx4$err) } lines(y=err4,x=1:215,col=\"pink\")  # order by internal order of edges  order <- ape::reorder.phylo(tree, order = \"postorder\", index.only=TRUE) err5 <- NULL for(i in 1:215){ approx5 <- gllvm:::findOrder(covMat = colMat, distMat = dist, nn = i,           order = order[order<=length(tree$tip.label)]) err5 <- c(err5, approx5$err) } lines(y=err5,x=1:215,col=\"purple\")  order <- ape::reorder.phylo(tree, order = \"pruningwise\", index.only=TRUE) err6 <- NULL for(i in 1:215){ approx6 <- gllvm:::findOrder(covMat = colMat, distMat = dist, nn = i,           order = order[order<=length(tree$tip.label)]) err6 <- c(err6, approx6$err) } lines(y=err6,x=1:215,col=\"grey\")  # by first eigenvector err7 <- NULL order=order(eigen(colMat)$vec[,1],decreasing=TRUE) for(i in 1:215){ approx7 <- gllvm:::findOrder(covMat = colMat, distMat = dist, nn = i,           order = order) err7 <- c(err7, approx7$err) } lines(y=err7,x=1:215,col=\"green\")  legend(\"topright\", legend=c(\"Tips\",\"Alphabetical\", \"Sum of squared distances\", \"Distance to root\", \"Edges 1\", \"Edges 2\", \"First eigenvector\"), col=c(\"black\",\"blue\", \"forestgreen\",\"pink\",\"purple\",\"grey\",\"green\"),lty = rep(\"solid\",7))"},{"path":"/articles/vignette7.html","id":"fit-the-model","dir":"Articles","previous_headings":"Phylogenetically structured environmental responses","what":"Fit the model","title":"Phylogenetic random effects","text":"Let‚Äôs walk specified arguments. first line enables parallel computation, speed model fitting. Note intercept term included random effects, can excluded incorporating zero formula term. Correlations included covariates inside brackets, uncorrelated effects including separately bracketed terms. specify num.lv = 0 now, although just well include latent variables (e.g., fit model phylogenetically structured random intercepts (un)constrained ordination), beta0comm single (fixed) intercept whole community (species-specific intercepts enter via random effects). sd.errors convenience set false, can take (much) longer time calculate standard errors fit model, really calculate standard errors need (e.g., visualization). gllvm::se.gllvm function can post-hoc calculate standard errors, need refit model. studyDesign matrix specified additionally incorporated random intercepts nested study design. formula row.eff specify random intercept structure. colMat term pass phylogenetic information model, usually list length two, one argument called dist covariance matrix tree. Note two matrices need column names Y. nn.colMat number nearest neighbours consider species tree, fixed 10 default. Smaller numbers usually result faster fitting model, one potentially less accurate. van der Veen O‚ÄôHara (2024) showed 10-15 neighbours usually good choice, although fewer/also still lead accurate estimates phylogenetic signal, can quite problem dependent. colMat.rho.struct two options, single fitting model phylogenetic signal parameter covariates (default) term fitting model phylogenetic signal parameter per covariate. Finally, last line changes optimisation method one seems usually well model type, changes starting values random effect (needed fit model succesfully). model fitting, random effect estimates can found model1$params$Br, prediction errors can extracted gllvm::getPredictErr. requires standard errors, let‚Äôs calculate thosefirst: code visualize model results (van der Veen O‚ÄôHara (2024)):  random effects prediction interval including zero crossed plot. getResidualCov getResidualCor functions extract residual covariance correlation matrix, respectively, visualizing species associations.  randomCoefPlot function constructs caterpillar plots species deviations community mean responses, can extracted via summary method, found via coef model1$params$B. Arguments control VA approximation Ab.struct Ab.struct.rank, details see van der Veen O‚ÄôHara (2024). NOTE: Use Ab.struct = \"CL1\" Ab.struct=\"CL2\" parallel using TMB::openmp(.., autopar=TRUE). Without TMB‚Äôs ‚Äúautomatic‚Äù parallelization feature, memory use excessively computer probably run memory (moderately large number sites species) R session crash. Finally, can look summary information model: gives us overview community mean responses, well variance correlation random effects, phylogenetic signal parameter column signal. parameter ranges zero one, zero species responses phylogenetically structured, one fully phylogenetically structured.","code":"TMB::openmp(parallel::detectCores()-1, autopar = TRUE) # set parallel computation order <- gllvm:::findOrder(covMat = colMat, distMat = dist, nn = 15,           order = as.integer(names(sort(allDists[1:length(tree$tip.label), nrow(allDists)],decreasing = TRUE))))$order order <- tree$tip.label[order] model1 <- gllvm(y = Y[,order], X = X,         formula = ~(DBH.CM + AVERDP + I(AVERDP^2) + CONNECT10 + TEMPR + PRECIP + log.AREA|1), beta0com = TRUE,                      family = \"binomial\", num.lv = 0, sd.errors = FALSE,                       studyDesign = X[,c(\"REGION\", \"RESERVE\")], row.eff = ~(1 | REGION/RESERVE),                      colMat = list(colMat[order,order], dist = dist[order,order]), colMat.rho.struct = \"term\", nn.colMat = 15,         optim.method = \"L-BFGS-B\") # calculate standard errors ses <- se.gllvm(model1) # this can take a few minutes model1$sd <- ses$sd model1$Hess <- ses$Hess row.names(model1$params$Br) <- c(\"Intercept\", \"Deadwood size\", \"Decay stage\", \"Decay stage¬≤\", \"Connectivity\", \"Temperature range\", \"Precipitation\",\"ln(Reserve area)\")  # strike REs that are not significant PEs <- gllvm::getPredictErr(model1) PIs <- data.frame(cbind(LI = c(model1$params$Br)-c(PEs$Br*1.96), UI = c(model1$params$Br)+c(PEs$Br*1.96))) model1$params$Br[-which((PIs$LI>0 & PIs$UI>0) | (PIs$LI<0 & PIs$UI<0))]<-NA  layout(cbind(rbind(2,1),c(3,3)), respect = TRUE, heights = c(1.25,1), widths=c(2,0.5)) par(mar=c(5,5,0,0)) image(1L:ncol(model1$y), 1:ncol(model1$col.eff$spdr), t(model1$params$Br[,tree$tip.label]), col = colorRampPalette(c(\"#E69F00\",\"white\",\"#009E73\"))(28), axes=FALSE, ylim = 0.5+c(0,ncol(model1$col.eff$spdr)),xlim=0.5+c(0,ncol(model1$y)),xlab=NA, breaks = seq(-3.5,3.5,by=.25), ylab=NA) mtext(side=1, text=\"Species-specific random effect\",padj=4, cex = 0.6) axis(2, at= 1:ncol(model1$col.eff$spdr), labels=colnames(t(model1$params$Br)),las=1, cex.axis = 0.6, lwd=0) par(xpd=TRUE) for(i in 1:ncol(model1$col.eff$spdr)){   lines(x=c(-2,0),y=c(i,i)) }  par(mar=c(0,1,2,0)) library(ape) plot(tree, show.tip.label = FALSE, direction = \"downwards\",xaxs=\"i\") # caterpillar coefs <- c(model1$params$beta0[1],model1$params$B[1:(ncol(model1$col.eff$spdr)-1)]) sds <- c(model1$sd$beta0[1],model1$sd$B[2:(ncol(model1$col.eff$spdr))]) CIs <- data.frame(cbind(LI=coefs+sds*qnorm(1-0.95), UI=coefs+sds*qnorm(0.95))) names(coefs) <- c(\"Intercept\", \"Deadwood size\", \"Decay stage\", \"Decay stage¬≤\", \"Connectivity\", \"Temperature range\", \"Precipitation\", \"ln(Reserve area)\") cols <- rep(\"black\", 8) cols[-which((CIs$LI>0 & CIs$UI>0) | (CIs$LI<0 & CIs$UI<0))] <- \"grey\"  par(mar=c(5,0.5,2,5), xpd=FALSE)  plot(coefs, y = 1:length(coefs), yaxt=\"n\",ylab=\"\", pch=\"x\", col = cols, xlab = NA, cex.axis = 0.6, xlim = c(-max(abs(coefs)),max(abs(coefs)))) mtext(side = 1, text = \"Community mean response\", padj = 4, cex = 0.6) segments(x0 = CIs$LI, y0 = 1:length(coefs), x1 = CIs$UI, y1 = 1:length(coefs), col = cols) abline(v = 0, lty=\"dashed\") axis(4, at = 1:length(coefs), labels = names(coefs), las = 1, cex.axis = 0.6,lwd=0) corrplot::corrplot(getEnvironCor(model1),                     type = \"lower\", diag = FALSE, order = \"AOE\",                    tl.pos = \"n\", addgrid.col=NA, col.lim=c(0,1)) summary(model1) ##  ## Call: ## gllvm(y = Y[, order], X = X, formula = ~(DBH.CM + AVERDP + I(AVERDP^2) +  ##     CONNECT10 + TEMPR + PRECIP + log.AREA | 1), family = \"binomial\",  ##     num.lv = 0, studyDesign = X[, c(\"REGION\", \"RESERVE\")], colMat = list(colMat[order,  ##         order], dist = dist[order, order]), colMat.rho.struct = \"term\",  ##     row.eff = ~(1 | REGION/RESERVE), sd.errors = FALSE, beta0com = TRUE,  ##     nn.colMat = 15, optim.method = \"L-BFGS-B\") ##  ## Family:  binomial  ##  ## AIC:  103080 AICc:  103080 BIC:  103662.6 LL:  -51486 df:  54  ##  ## Informed LVs:  0  ## Constrained LVs:  0  ## Unconstrained LVs:  0  ##  ## Formula:  ~(DBH.CM + AVERDP + I(AVERDP^2) + CONNECT10 + TEMPR + PRECIP + log.AREA | 1)  ## LV formula:  ~ 0  ##  ## Random effects: ##  Name        Signal Variance Std.Dev Corr                                    ##  Intercept   0.2106 0.5218   0.7224                                          ##  DBH.CM      0.5031 0.0052   0.0722   0.7524                                 ##  AVERDP      0.9711 0.3825   0.6185   0.1015 -0.0181                         ##  I.AVERDP.2. 0.8007 0.0122   0.1105  -0.4874 -0.4696 -0.4871                 ##  CONNECT10   0.0613 0.0270   0.1642  -0.1800 -0.1082  0.1563 -0.1128         ##  TEMPR       0.0499 0.0436   0.2087  -0.1579 -0.2858 -0.0683  0.7212  0.3666 ##  PRECIP      0.0000 0.0324   0.1799   0.2290  0.6520 -0.3145  0.0977 -0.5629 ##  log.AREA    0.0310 0.0158   0.1258  -0.1418 -0.1302  0.0928 -0.6283  0.4803 ##                   ##                   ##                   ##                   ##                   ##                   ##                   ##  -0.2123          ##  -0.5604 -0.5228  ##  ## Coefficients predictors: ##             Estimate Std. Error z value Pr(>|z|)     ## Intercept   -2.05756    0.13590 -15.140  < 2e-16 *** ## DBH.CM       0.10583    0.01936   5.465 4.62e-08 *** ## AVERDP      -0.08548    0.22763  -0.376 0.707278     ## I.AVERDP.2. -0.12467    0.03344  -3.728 0.000193 *** ## CONNECT10   -0.03260    0.04141  -0.787 0.431209     ## TEMPR        0.03646    0.04454   0.818 0.413120     ## PRECIP      -0.02091    0.03726  -0.561 0.574756     ## log.AREA     0.05643    0.02976   1.896 0.057952 .   ## --- ## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"},{"path":"/articles/vignette7.html","id":"phylogenetic-fourth-corner-model","dir":"Articles","previous_headings":"","what":"Phylogenetic fourth corner model","title":"Phylogenetic random effects","text":"fourth corner model extends previous model functional traits. interface still little difference, correlation random effects always included. Otherwise tools similar, just present example code fitting model, discuss (see vignettes gllvm R-package discussion fourth corner model).","code":"TR <- fungi$TR # the functional traits  model2 <- gllvm(y = Y, X = cbind(int = 1, X), TR = TR,                      formula = ~DBH.CM + AVERDP + I(AVERDP^2) + CONNECT10 +    TEMPR + PRECIP + log.AREA + (DBH.CM + AVERDP + I(AVERDP^2) + CONNECT10 + TEMPR + PRECIP + log.AREA):(PC1.1 + PC1.2 + PC1.3),                        family = \"binomial\", num.lv = 0, studyDesign = X[, c(\"REGION\", \"RESERVE\")],                        colMat = list(C, dist = dist),                        colMat.rho.struct = \"term\", row.eff = ~(1 | REGION/RESERVE), sd.errors = FALSE,                        randomX = ~int + DBH.CM + AVERDP + I(AVERDP^2) + CONNECT10 + TEMPR + PRECIP + log.AREA,                        beta0com = TRUE, Ab.struct = \"MNunstructured\", nn.colMat = 10, max.iter = 20000, maxit = 20000, optim.method = \"L-BFGS-B\",  randomX.start = \"res\")"},{"path":[]},{"path":"/articles/vignette8.html","id":"hurdle-beta-gllvm","dir":"Articles","previous_headings":"","what":"Hurdle beta GLLVM","title":"Analysing sparse ecological percent cover data using gllvm","text":"Traditionally, beta regression used model responses take form percentages. yij*y^*_{ij} (open) interval (0,1)(0,1), distributed according beta distribution, yij*‚àºBeta(Œºij,œïj)y^*_{ij} \\sim \\text{Beta}(\\mu_{ij}, \\phi_j), following density: fbeta(yij*;Œºij,œïj)=Œì(œïj)Œì(Œºijœïj)Œì(œïj‚àíœïjŒºij)(yij*)Œºijœïj‚àí1(1‚àíyij*)œïj(1‚àíŒºij‚àí1). f_{\\text{beta}}(y_{ij}^*; \\mu_{ij}, \\phi_j) = \\frac{\\Gamma(\\phi_j)}{\\Gamma(\\mu_{ij}\\phi_j)\\Gamma(\\phi_j-\\phi_j\\mu_{ij})} (y_{ij}^*)^{\\mu_{ij}\\phi_j-1}(1-y_{ij}^*)^{\\phi_j(1-\\mu_{ij}-1)}. mean parameter Œºij\\mu_{ij} can connected set covariates latent variables link function, equation $g(\\mu_{ij})=\\eta_{ij} = \\beta_{0j} + \\boldsymbol{\\beta}_j^\\top\\bf{x_i} + \\boldsymbol{\\lambda}_j^\\top\\bf{u_i}$. However, model ill-suited percent cover datasets, due fact beta distribution isn‚Äôt capable handling zero (100%100\\%) responses. make use beta regression model scenario, one needs use transformation order ‚Äòpush‚Äô responses away boundaries. procedure might provide reasonable results numbers zeros ones data relatively low. hand, transforming zeros ones, might lose important information. sophisticated way tackling issue considering zero-accommodating model, couple proposed recently. One model hurdle beta model, models two (can extended three 100%100\\% covers recorded, see Korhonen et al. (2024)) classes response yijy_{ij} can take, .e., {0}\\{0\\} (0,1)(0,1), separate processes. Namely, zeros assumed generated Bernoulli process. Conditional yij‚àà(0,1)y_{ij}\\(0,1), response modeled using standard beta distribution presented . likelihood function response YijY_{ij} following hurdle beta distribution form: P(Yij;Œºij,Œºij0,œïj)={1‚àíŒºij0,Yij=0,Œºij0‚ãÖfbeta(Yij;Œºij,œïj),Yij‚àà(0,1). P(Y_{ij};\\mu_{ij}, \\mu_{ij}^0, \\phi_j) = \\begin{cases}         1-\\mu_{ij}^0, & Y_{ij} = 0,\\\\          \\mu_{ij}^0 \\cdot f_{\\text{beta}}(Y_{ij};\\mu_{ij},\\phi_j), & Y_{ij} \\(0,1). \\\\         \\end{cases}  $g(\\mu_{ij}^0) = \\eta_{ij}^0 = \\beta_{0j}^0 + \\bf{x_i}^\\top\\boldsymbol{\\beta}_j^0 + \\bf{u_i}^\\top\\boldsymbol{\\lambda}_j^0$ $g(\\mu_{ij}) = \\eta_{ij} = \\beta_{0j} + \\bf{x_i}^\\top\\boldsymbol{\\beta}_j + \\bf{u_i}^\\top\\boldsymbol{\\lambda}_j$ g(‚ãÖ)g(\\cdot) can either probit logistic link function. Note, , separate linear predictors share environmental covariates $\\bf{x}_i$ latent variable scores $\\bf{u}_i$, coefficients loadings allowed differ. gllvm package implements hurdle beta GLLVM two different estimation methods available. First, accessed argument method=\"VA\" calling uses hybrid approach, method variational approximations, VA, applied Bernoulli-process part data (probit link allowed), method extended variational approximations, see Korhonen et al. (2023), applied beta distributed part. instead specifying method=\"EVA\", EVA method applied parts likelihood.","code":""},{"path":"/articles/vignette8.html","id":"example","dir":"Articles","previous_headings":"","what":"Example","title":"Analysing sparse ecological percent cover data using gllvm","text":"following, show fit logistic hurdle beta GLLVM using EVA SBC LTER marine macroalgae (.e., seaweed) percent cover dataset. data collected 2000-2020 along 44 permanent transect lines along coastal southern California. specify model two latent variables (ordination) include rockiness seabed average number stripes giant kelp environmental covariates model. setting data, LV design covariates, model estimated inspect e.g., covariate effects, use , prefix indicates coefficient relates Bernoulli part hurdle model. Ordination plot can generated per usual:","code":"library(gllvm) ## Loading required package: TMB ##  ## Attaching package: 'gllvm' ## The following object is masked from 'package:stats': ##  ##     simulate data(\"kelpforest\") Yabund <- kelpforest$Y Xenv <- kelpforest$X SPinfo <- kelpforest$SPinfo  # Data contains both algae and sessile invertebrates table(SPinfo$GROUP) ##  ##  ALGAE INVERT  PLANT  ##     61     69      2 # Select only the macroalgae: Yalg <- Yabund[,SPinfo$GROUP==\"ALGAE\"]  # Remove empty rows and rows with missing values from the data rem0 <- which((rowSums(Yalg)==0) | is.na(rowSums(Yalg))) Yalg <- Yalg[-rem0,] Xenv <- Xenv[-rem0,]  # Use only the data from the year 2016:  Yalg <- Yalg[Xenv$YEAR==2016,] Xenv <- Xenv[Xenv$YEAR==2016,]  # Remove species which have no observations Yalg <- Yalg[,-which(colSums(Yalg>0)==0)] # Number of obs. and species: dim(Yalg) ## [1] 44 53 # Specify the covariates in the linear predictor Xformulai = ~KELP_FRONDS + PERCENT_ROCKY fit <- gllvm(Yalg, X=Xenv, formula = Xformulai, family = \"betaH\", method=\"EVA\",               num.lv = 2, link=\"logit\", control=list(reltol=1e-12)) fit$params$Xcoef ##            KELP_FRONDS PERCENT_ROCKY ## AMZO     -7.559186e-04 -0.0373175029 ## AU       -1.171584e-02 -0.0144005483 ## BF       -7.152126e+00  0.2910471383 ## BLD      -3.204658e-03 -0.0476120686 ## BO        2.921004e-01 -0.0518882807 ## BR       -7.344966e-02  0.0170783843 ## BRA       5.055051e-01 -0.0834416672 ## CAL       1.084007e-02  0.0987800253 ## CC        1.025623e-02  0.0073087358 ## CF        3.707650e-01 -0.0541218208 ## CG       -5.926928e-01  0.0200915429 ## CO       -1.616248e-01 -0.0018804530 ## COF      -1.945997e+00  0.1076413311 ## CP       -5.341896e-01 -0.0525919654 ## CRYP     -2.611052e-01  0.2110012892 ## CYOS     -4.161144e-02 -0.0008006455 ## CZ        4.628213e-04  0.0085906513 ## DL        7.894424e-02  0.0212654434 ## DMH       4.544533e-01 -0.0691309306 ## DP       -3.263565e-01  0.0274147869 ## DU        7.196500e-01 -0.0447905585 ## EAH       1.519401e+00 -0.0156289883 ## EC        5.883289e-02 -0.0042398629 ## EH        4.749486e-01 -0.0975087044 ## ER        3.295087e-01  0.0531826773 ## FASP     -1.215428e-03 -0.0391408967 ## FB       -4.407266e+00  0.1916424807 ## FTHR      7.616866e-01 -0.1097986807 ## GR       -7.260712e-01  0.1102382440 ## GS       -3.964070e-01  0.0111632915 ## GYSP      2.413003e-01  0.0143571013 ## IR        1.441621e-04  0.0053780677 ## LH       -3.276121e-03 -0.0450325932 ## LI       -2.157823e-04 -0.1942040396 ## LS       -4.760342e-03 -0.0669292377 ## LX       -9.268553e-03 -0.1243831800 ## MH        1.951122e-01 -0.0469759419 ## NIE      -3.443298e-01  0.0464217012 ## PH        3.919663e+00 -0.4895614905 ## PHSE     -4.274897e-01  0.0069147629 ## PL        1.301021e-01 -0.0120383487 ## POLA      3.667980e-03 -0.0402016866 ## PRSP      7.412486e-02  0.0179344497 ## R        -1.332818e-01 -0.0179944287 ## RAT      -1.488806e-01 -0.0007753643 ## SAFU     -2.529752e+00 -0.0106505288 ## SAHO      1.442079e+01 -0.0401619983 ## SAMU      6.549716e-02 -0.0414008525 ## SCCA      1.490898e-01  0.1616272016 ## STIN     -1.475045e-04 -0.1327540257 ## TALE     -1.129042e+00  0.2133050826 ## UEC      -8.695526e-06 -0.0043477629 ## UV        2.003956e+00 -0.0479209989 ## H01_AMZO -4.841612e+00  0.1788281281 ## H01_AU    5.541914e-01 -0.0499089497 ## H01_BF    9.302235e-01 -0.1831368106 ## H01_BLD  -3.166692e+00  0.0044685104 ## H01_BO   -8.521816e-01  0.0597387768 ## H01_BR   -4.130075e+00  0.2062679137 ## H01_BRA   1.467430e+00 -0.1214364228 ## H01_CAL   1.098740e-01  0.1016509682 ## H01_CC   -9.434492e-01  0.0476976557 ## H01_CF   -8.951098e-01  0.0555029715 ## H01_CG    2.782149e+00 -0.0360817065 ## H01_CO    1.089165e-02 -0.0070612956 ## H01_COF   8.422893e-01  0.1341693069 ## H01_CP    1.234360e-01  0.1637403771 ## H01_CRYP  2.431979e-01 -0.0520857664 ## H01_CYOS  1.385716e-01 -0.0426825965 ## H01_CZ    1.940466e+00  0.0116455418 ## H01_DL    1.940083e+00 -0.1921942650 ## H01_DMH   8.445488e-01 -0.1031294144 ## H01_DP   -1.148621e+00  0.0846122857 ## H01_DU    1.648629e-01  0.1139389772 ## H01_EAH  -1.101818e+01  0.1624284935 ## H01_EC   -4.705728e-01  0.0752961970 ## H01_EH    6.594496e-01 -0.0852358489 ## H01_ER   -9.091324e-02  0.0489652646 ## H01_FASP -3.594163e+00  0.2610957250 ## H01_FB    3.312038e-01 -0.1065414193 ## H01_FTHR -4.004102e-01 -0.0294651876 ## H01_GR    1.734091e-01  0.1893856202 ## H01_GS    6.162066e-01 -0.1798357145 ## H01_GYSP -1.709483e-01  0.0603420945 ## H01_IR    1.031488e+00  0.0744924805 ## H01_LH   -2.832070e-02  0.1480468392 ## H01_LI   -9.133589e+00  0.1530503448 ## H01_LS    1.407361e+00 -0.0180365105 ## H01_LX   -2.052777e+00  0.0602210236 ## H01_MH    1.298937e+00 -0.0143851169 ## H01_NIE   2.156391e+00 -0.1614652703 ## H01_PH   -6.586931e-01  0.0278619343 ## H01_PHSE  4.155348e-01 -0.1406834417 ## H01_PL    1.172594e-01 -0.0136841328 ## H01_POLA  5.610652e-01 -0.0527295403 ## H01_PRSP  5.774080e-01 -0.0424166671 ## H01_R    -3.099174e+00  0.1850947593 ## H01_RAT  -8.390719e-03  0.0203986826 ## H01_SAFU -8.869626e-01 -0.2241742926 ## H01_SAHO -5.815047e+00  0.1592870866 ## H01_SAMU  5.432835e-02 -0.0014264794 ## H01_SCCA -3.423721e+00  0.2266017485 ## H01_STIN -8.767218e+00  0.1366966215 ## H01_TALE -4.500551e-01  0.2346714056 ## H01_UEC  -8.019724e-01  0.0908981956 ## H01_UV   -1.021429e+00 -0.1290730236 ordiplot(fit, jitter = TRUE, s.cex = .8)"},{"path":[]},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jenni Niku. Author, maintainer. Wesley Brooks. Author. Riki Herliansyah. Author. Francis K.C. Hui. Author. Pekka Korhonen. Author. Sara Taskinen. Author. Bert van der Veen. Author. David . Warton. Author.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Niku, J., Brooks, W., Herliansyah, R., Hui, F. K. C., Korhonen, P., Taskinen, S., van der Veen, B., Warton, D. .  (2024). gllvm: Generalized Linear Latent Variable Models.R package version 1.4.7. Niku, J., Hui, F. K. C., Taskinen, S., Warton, D. . (2019). gllvm - Fast analysis multivariate abundance data generalized linear latent variable models R. Methods Ecology Evolution, 10, 2173-2182. Niku, J., Hui, F. K. C., Taskinen, S., Warton, D. . (2021). Analyzing environmental-trait interactions ecological communities fourth-corner latent variable models. Environmetrics, 32, 1-17. van der Veen, B. O'Hara, R.B. (2024). Fast fitting phylogenetic mixed effects models. arxiv. van der Veen, B., Hui, F. K. C., Hovstad, K.., Solbu, E.B., O'Hara, R.B. (2021). Model-based ordination species unequal niche widths. Methods Ecology Evolution, 12, 1288-1300. van der Veen, B., Hui, F. K. C., Hovstad, K.., O'Hara, R.B. (2023). Concurrent ordination: simultaneous unconstrained constrained latent variable modelling. Methods Ecology Evolution, 14, 683-695. Korhonen, P., Hui, F. K. C., Niku, J., Taskinen, S. (2023). Fast universal estimation latent variable models using extended variational approximations. Statistics Computing, 33, 1-16.","code":"@Manual{,   title = {gllvm: Generalized Linear Latent Variable Models},   author = {Jenni Niku and Wesley Brooks and Riki Herliansyah and Francis K. C. Hui and Pekka Korhonen and Sara Taskinen and Bert {van der Veen} and David I. Warton},   year = {2024},   note = {R package version 1.4.7}, } @Article{,   title = {gllvm - Fast analysis of multivariate abundance data with generalized linear latent variable models in R},   author = {Jenni Niku and Francis K. C. Hui and Sara Taskinen and David I. Warton},   journal = {Methods in Ecology and Evolution},   year = {2019},   volume = {10},   pages = {2173-2182}, } @Article{,   title = {Analyzing environmental-trait interactions in ecological communities with fourth-corner latent variable models},   author = {Jenni Niku and Francis K. C. Hui and Sara Taskinen and David I. Warton},   journal = {Environmetrics},   year = {2021},   volume = {32},   pages = {1-17}, } @Article{,   title = {Fast fitting of phylogenetic mixed effects models},   author = {Bert {van der Veen} and Robert B. O'Hara},   journal = {arxiv},   year = {2024}, } @Article{,   title = {Model-based ordination for species with unequal niche widths},   author = {Bert {van der Veen} and Francis K. C. Hui and Knut A. Hovstad and Erik B. Solbu and Robert B. O'Hara},   journal = {Methods in Ecology and Evolution},   year = {2021},   volume = {12},   pages = {1288-1300}, } @Article{,   title = {Concurrent ordination: Simultaneous unconstrained and constrained latent variable modelling},   author = {Bert {van der Veen} and Francis K. C. Hui and Knut A. Hovstad and Robert B. O'Hara},   journal = {Methods in Ecology and Evolution},   year = {2023},   volume = {14},   pages = {683-695}, } @Article{,   title = {Fast and universal estimation of latent variable models using extended variational approximations},   author = {Pekka Korhonen and Francis K. C. Hui and Jenni Niku and Sara Taskinen},   journal = {Statistics and Computing},   year = {2023},   volume = {33},   pages = {1-16}, }"},{"path":"/index.html","id":"gllvm","dir":"","previous_headings":"","what":"Generalized Linear Latent Variable Models","title":"Generalized Linear Latent Variable Models","text":"gllvm R package analysing multivariate ecological data Generalized Linear Latent Variable Models (GLLVM). Estimation performed using maximum likelihood estimation, together either variational approximation (VA) Laplace approximation (LA) method approximate marginal likelihood.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Generalized Linear Latent Variable Models","text":"CRAN can install package using: development version gllvm github help devtools package using:","code":"install.packages(\"gllvm\") devtools::install_github(\"JenniNiku/gllvm\")"},{"path":"/index.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting started","title":"Generalized Linear Latent Variable Models","text":"getting started gllvm recommend read vignette Analysing multivariate abundance data using gllvm introductions using gllvm ordination analysing species correlations. available vignettes : Analysing microbial community data, use quadratic response model, Ordination predictors Analysing percent cover data.","code":""},{"path":"/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Generalized Linear Latent Variable Models","text":"citation function R provides information cite methods package. Please remember cite software (version) separately relevent research articles provide appropriate credit associated contributors. reference software package : Niku, J., Brooks, W., Herliansyah, R., Hui, F. K. C., Korhonen, P., Taskinen, S., van der Veen, B., Warton, D. . (YYYY). gllvm: Generalized Linear Latent Variable Models.R package version XXX, YYYY represents publication date used version package represented XXX.","code":""},{"path":"/index.html","id":"references","dir":"","previous_headings":"","what":"References","title":"Generalized Linear Latent Variable Models","text":"Hui, F.K.C., Warton, D., Ormerod, J., Haapaniemi, V., & Taskinen, S. (2017). Variational approximations generalized linear latent variable models. Journal Computational Graphical Statistics, 26(1), 35 - 43. Niku, J., Warton, D., Hui, F.K.C., & Taskinen, S. (2017). Generalized linear latent variable models multivariate count biomass data ecology. Journal Agricultural, Biological Environmental Statistics, 22(4), 498 - 522. Niku, J., Hui, F.K.C., Taskinen, S., & Warton, D. (2019). gllvm: Fast analysis multivariate abundance data generalized linear latent variable models r. Methods Ecology Evolution, 10(12), 2173 - 2182. Niku, J., Brooks, W., Herliansyah, R., Hui, F.K.C., Taskinen, S., & Warton, D. (2019). Efficient estimation generalized linear latent variable models. PloS one, 14(5), e0216129. Niku, J., Hui, F. K. C., Taskinen, S., Warton, D. . (2021). Analyzing environmental-trait interactions ecological communities fourth-corner latent variable models. Environmetrics, 32(6), 1-17. van der Veen, B., Hui, F.K.C., Hovstad, K.., Solbu, E.B., & O‚ÄôHara, R.B. (2021). Model-based ordination species unequal niche widths. Methods Ecology Evolution, 12(7), 1288 - 1300. van der Veen, B., Hui, F. K. C., Hovstad, K.., O‚ÄôHara, R.B. (2023). Concurrent ordination: simultaneous unconstrained constrained latent variable modelling. Methods Ecology Evolution, 14(2), 683-695. van der Veen, B. O‚ÄôHara, R.B. (2024). Fast fitting phylogenetic mixed effects models. arxiv. Korhonen, P., Hui, F. K. C., Niku, J., Taskinen, S. (2023). Fast universal estimation latent variable models using extended variational approximations. Statistics Computing, 33(1), 1-16.","code":""},{"path":"/reference/AICc.html","id":null,"dir":"Reference","previous_headings":"","what":"Corrected Akaike information criterion and number of observations ‚Äî AICc","title":"Corrected Akaike information criterion and number of observations ‚Äî AICc","text":"Calculates corrected Akaike information criterion small sample sizes, extracts number observations.","code":""},{"path":"/reference/AICc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Corrected Akaike information criterion and number of observations ‚Äî AICc","text":"","code":"# S3 method for class 'gllvm' AICc(object, ...)  # S3 method for class 'gllvm' nobs(object, ...)"},{"path":"/reference/AICc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Corrected Akaike information criterion and number of observations ‚Äî AICc","text":"object object class 'gllvm'. ... used.","code":""},{"path":"/reference/AICc.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Corrected Akaike information criterion and number of observations ‚Äî AICc","text":"Jenni Niku, Bert van der Veen","code":""},{"path":"/reference/anova.gllvm.html","id":null,"dir":"Reference","previous_headings":"","what":"Analysis Of Deviance for gllvm ‚Äî anova.gllvm","title":"Analysis Of Deviance for gllvm ‚Äî anova.gllvm","text":"Computes analysis deviance table two generalized linear latent variable model fits.","code":""},{"path":"/reference/anova.gllvm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Analysis Of Deviance for gllvm ‚Äî anova.gllvm","text":"","code":"# S3 method for class 'gllvm' anova(object, ...)"},{"path":"/reference/anova.gllvm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Analysis Of Deviance for gllvm ‚Äî anova.gllvm","text":"object object class 'gllvm'. ... one objects class 'gllvm'","code":""},{"path":"/reference/anova.gllvm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Analysis Of Deviance for gllvm ‚Äî anova.gllvm","text":"Computes likelihood-ratio test two gllvm models. Test results makes sense nested models. Notice also test designed testing models degrees freedom difference larger 20. models P-value treated approximate.","code":""},{"path":"/reference/anova.gllvm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Analysis Of Deviance for gllvm ‚Äî anova.gllvm","text":"Jenni Niku","code":""},{"path":"/reference/anova.gllvm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Analysis Of Deviance for gllvm ‚Äî anova.gllvm","text":"","code":"# \\donttest{ ## Load a dataset from the mvabund package data(antTraits, package = \"mvabund\") y <- antTraits$abund X <- antTraits$env TR <- antTraits$traits # Fit gllvm model fit1 <- gllvm(y, X, TR, formula = ~ Bare.ground + Shrub.cover, family = poisson()) fit2 <- gllvm(y, X, TR, formula = ~ Bare.ground + Shrub.cover +              (Bare.ground + Shrub.cover) : Webers.length, family = poisson()) # Test if the model with fourth corner interaction terms is significantly # better using likelihood-ratio test: anova(fit1, fit2) #> Model  1 :  ~ Bare.ground + Shrub.cover  #> Model  2 :  ~ Bare.ground + Shrub.cover + (Bare.ground + Shrub.cover):Webers.length  #>   Resid.Df        D Df.diff    P.value #> 1     1106  0.00000       0            #> 2     1104 13.07389       2 0.00144891 # }"},{"path":"/reference/coefplot.gllvm.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot covariate coefficients and confidence intervals ‚Äî coefplot.gllvm","title":"Plot covariate coefficients and confidence intervals ‚Äî coefplot.gllvm","text":"Plots covariate coefficients confidence intervals.","code":""},{"path":"/reference/coefplot.gllvm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot covariate coefficients and confidence intervals ‚Äî coefplot.gllvm","text":"","code":"# S3 method for class 'gllvm' coefplot(   object,   y.label = TRUE,   which.Xcoef = NULL,   order = TRUE,   cex.ylab = 0.5,   cex.xlab = 1.3,   mfrow = NULL,   mar = c(4, 6, 2, 1),   xlim.list = NULL,   ... )"},{"path":"/reference/coefplot.gllvm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot covariate coefficients and confidence intervals ‚Äî coefplot.gllvm","text":"object object class 'gllvm'. y.label logical, TRUE (default) colnames y respect coefficients added plot. .Xcoef vector indicating covariate coefficients plotted. Can vector covariate names numbers. Default NULL covariate coefficients plotted. order logical, whether coefficients ordered, defaults TRUE. cex.ylab magnification used axis annotation relative current setting cex. cex.xlab magnification used axis annotation. mfrow mfrow par. NULL (default) determined automatically. mar vector length 4, defines margin sizes: c(bottom, left, top, right). Defaults c(4,5,2,1). xlim.list list vectors length two define intervals x axis covariate plot. Defaults NULL interval defined range point estimates confidence intervals ... additional graphical arguments.","code":""},{"path":"/reference/coefplot.gllvm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot covariate coefficients and confidence intervals ‚Äî coefplot.gllvm","text":"Jenni Niku <jenni.m.e.niku@jyu.fi>, Francis K.C. Hui, Sara Taskinen, Bert van der Veen","code":""},{"path":"/reference/coefplot.gllvm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot covariate coefficients and confidence intervals ‚Äî coefplot.gllvm","text":"","code":"# Extract subset of the microbial data to be used as an example data(microbialdata) X <- microbialdata$Xenv y <- microbialdata$Y[, order(colMeans(microbialdata$Y > 0),                       decreasing = TRUE)[21:40]] fit <- gllvm(y, X, formula = ~ pH + Phosp, family = poisson()) coefplot(fit)  if (FALSE) { # \\dontrun{ ## Load a dataset from the mvabund package data(antTraits, package = \"mvabund\") y <- as.matrix(antTraits$abund) X <- as.matrix(antTraits$env) # Fit model with environmental covariates fit <- gllvm(y, X, formula = ~ Bare.ground + Shrub.cover,             family = poisson()) coefplot.gllvm(fit)  # Fit model with all environmental covariates fitx <- gllvm(y, X, family = \"negative.binomial\") coefplot(fitx, mfrow = c(3,2)) coefplot(fitx, which.Xcoef = 1:2)  # Fit gllvm model with environmental and trait covariates TR <- antTraits$traits fitT <- gllvm(y = y, X = X, TR = TR, family = \"negative.binomial\") coefplot(fitT)  # Fit  gllvm model with environmental covariances and reduced rank fitRR <- gllvm(y = y, X = X, num.RR = 2, family = \"negative.binomial\") coefplot(fitRR) } # }"},{"path":"/reference/confint.gllvm.html","id":null,"dir":"Reference","previous_headings":"","what":"Confidence intervals for model parameters ‚Äî confint.gllvm","title":"Confidence intervals for model parameters ‚Äî confint.gllvm","text":"Computes confidence intervals  parameters fitted gllvm model.","code":""},{"path":"/reference/confint.gllvm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Confidence intervals for model parameters ‚Äî confint.gllvm","text":"","code":"# S3 method for class 'gllvm' confint(object, parm = NULL, level = 0.95, ...)"},{"path":"/reference/confint.gllvm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Confidence intervals for model parameters ‚Äî confint.gllvm","text":"object object class 'gllvm'. parm specification parameters given confidence intervals, vector names. Examples options \"beta0\", \"Xcoef\",theta\", \"phi\". missing, parameters considered. level confidence level. Scalar 0 1. ... used.","code":""},{"path":"/reference/confint.gllvm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Confidence intervals for model parameters ‚Äî confint.gllvm","text":"Jenni Niku <jenni.m.e.niku@jyu.fi>","code":""},{"path":"/reference/confint.gllvm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Confidence intervals for model parameters ‚Äî confint.gllvm","text":"","code":"if (FALSE) { # \\dontrun{ ## Load a dataset from the mvabund package data(antTraits, package = \"mvabund\") y <- as.matrix(antTraits$abund) X <- as.matrix(antTraits$env[,1:2]) # Fit gllvm model fit <- gllvm(y = y, X = X, family = poisson()) # 95 % confidence intervals for coefficients of X variables confint(fit, level = 0.95, parm = \"Xcoef\") } # }"},{"path":"/reference/ecoCoefs.html","id":null,"dir":"Reference","previous_headings":"","what":"Functions to extract ecological quantities of the latent variables from a GLLVM, if species are a quadratic function of the latent variables. ‚Äî ecoCoefs","title":"Functions to extract ecological quantities of the latent variables from a GLLVM, if species are a quadratic function of the latent variables. ‚Äî ecoCoefs","text":"Extracts species optima tolerances, potentially standard errors (derived Delta method).","code":""},{"path":"/reference/ecoCoefs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Functions to extract ecological quantities of the latent variables from a GLLVM, if species are a quadratic function of the latent variables. ‚Äî ecoCoefs","text":"","code":"# S3 method for class 'gllvm' optima(object, sd.errors = TRUE, ...)  # S3 method for class 'gllvm' tolerances(object, sd.errors = TRUE, ...)"},{"path":"/reference/ecoCoefs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Functions to extract ecological quantities of the latent variables from a GLLVM, if species are a quadratic function of the latent variables. ‚Äî ecoCoefs","text":"object object class 'gllvm'. sd.errors logical. TRUE, also returns standard errors. ... used.","code":""},{"path":"/reference/ecoCoefs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Functions to extract ecological quantities of the latent variables from a GLLVM, if species are a quadratic function of the latent variables. ‚Äî ecoCoefs","text":"Currently separate method calculating species maxima gradient length implemented. Gradient length can inferred standard deviation latent variables, reported summary.gllvm.","code":""},{"path":"/reference/ecoCoefs.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Functions to extract ecological quantities of the latent variables from a GLLVM, if species are a quadratic function of the latent variables. ‚Äî ecoCoefs","text":"Bert van der Veen","code":""},{"path":"/reference/eSpider.html","id":null,"dir":"Reference","previous_headings":"","what":"Hunting spider data ‚Äî eSpider","title":"Hunting spider data ‚Äî eSpider","text":"Extended dataset counts hunting spiders dune area Netherlands, measured 100 pitfall traps.","code":""},{"path":"/reference/eSpider.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hunting spider data ‚Äî eSpider","text":"","code":"data(eSpider)"},{"path":"/reference/eSpider.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Hunting spider data ‚Äî eSpider","text":"abund data frame abundances 12 hunting spider species measured 100 sites. X matrix 26 predictor variables 28 100 sites. nonNA vector indices indicating sites predictor variables measured.","code":""},{"path":"/reference/eSpider.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Hunting spider data ‚Äî eSpider","text":"Counts hunting spiders dune area Netherlands, measured 100 different pitfall traps. dataset published permission CANOCO FORTRAN package (version 4 higher) example datasets. Species names abbreviated, corresponding : Alopacce = Alopecosa accentuata, Alopcune = Alopecosa cuneata, Alopfabr = Alopecosa fabrilis, Arctlute = Arctosa lutetiana, Arctperi = Arctosa perita, Auloalbi = Aulonia albimana, Pardlugu = Pardosa lugubris, Pardmont = Pardosa monticola, Pardnigr = Pardosa nigriceps, Pardpull = Pardosa pullata, Trocterr = Trochosa terricola, Zoraspin = Zora spinimana. Environmental measurements taken 28 100 pitfall traps measuring soil properties(Water content: \"conWate\", Humus content: \"conHumu\", Acidity (pH-KCl)), vegetation (\"BareSand\": percentage bare sand, \"FallTwig\": cover ground leaves twigs, \"CovMoss\": cover mosses lichens, \"CovHerb\": cover herb grass layer (including maximum height, minimum height, \"CovCala\": cover Calamagrostis epigejos, cover Carex arenaria, \"CovFest\": cover Festuca ovina, \"CovCory\": cover Corynephorus canescens, \"CovUrti\": cover Urtica dioica, \"CovMoeh\": cover Moehringia trinervia), \"CovShru\": cover shrub layer (minimum maximum height, \"CovLigu\": cover Ligustrum vulgare), \"CovTree\": cover tree layer (including maximum height, cover Populus tremula Crataegus monogyna)), light properties (\"LuxGrey\": lux equal grey sky, \"LuxSun\": lux cloudless sky, \"LuxRef\": lux reflection soil surface) original publication Canonical Correspondence Analysis used standardized versions log log1p transformed predictors \"ConWate\", \"BareSand\", \"FallTwig\",  \"CovMoss\", \"CovHerb\", \"LuxRef\".","code":""},{"path":"/reference/eSpider.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Hunting spider data ‚Äî eSpider","text":"ter Braak, C.J.F. Smilauer, P.  (1998).  CANOCO reference manual user's guide CANOCO Windows: software canonical community ordination (version 4). Microcomputer Power, New York, New York, USA. ter Braak, C.J.F. (1986). Canonical correspondence analysis: new eigenvector technique multivariate direct gradient analysis. Ecology, 67(5), 1167-1179. Van der Aart, P. J. M. Smeenk-Enserink, N. (1975). Correlations distributions hunting spiders (Lycosidae, Ctenidae) environmental characteristics dune area. Netherlands Journal Zoology, 25(1), 1-45.","code":""},{"path":"/reference/eSpider.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Hunting spider data ‚Äî eSpider","text":"","code":"data(eSpider) Y <- eSpider$abund[eSpider$nonNA, ] X <- eSpider$X[eSpider$nonNA, ] model <- gllvm(y = Y, X = X,      lv.formula = ~log(ConWate) + log1p(BareSand) + log1p(FallTwig) +      log1p(CovMoss) + log1p(CovHerb) + log(LuxRef),     num.RR = 2,      family = \"poisson\")"},{"path":"/reference/fungi.html","id":null,"dir":"Reference","previous_headings":"","what":"Wood-decaying fungi data ‚Äî fungi","title":"Wood-decaying fungi data ‚Äî fungi","text":"Dataset 1666 binary observations 215 fungal species, different 53 European Beech forests spread across 8 regions.","code":""},{"path":"/reference/fungi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wood-decaying fungi data ‚Äî fungi","text":"","code":"data(fungi)"},{"path":"/reference/fungi.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Wood-decaying fungi data ‚Äî fungi","text":"Y data frame presence-absences 215 fungal species measured 1666 logs. X data frame 8 predictor variables. TR data frame traits used Abrego et al. (2022). tree phylogenetic tree. C phylogenetic covariance matrix. dist phylogenetic distance matrix.","code":""},{"path":"/reference/fungi.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Wood-decaying fungi data ‚Äî fungi","text":"Observations fungi species inhabiting European beech logs, different European countries. countries grouped eight different regions. Logs surveyed 53 different reserves (sites). Included environment trait covariates limited analyzed original article, though available published dataset datadryad.org.","code":""},{"path":"/reference/fungi.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Wood-decaying fungi data ‚Äî fungi","text":"Abrego, N., B√§ssler, C., Christensen, M., Heilmann‚ÄêClausen, J. (2022). Traits phylogenies modulate environmental responses wood‚Äêinhabiting fungal communities across spatial scales. Journal Ecology, 110(4), 784-798. Abrego, N., B√§ssler, C., Christensen, M., Heilmann-Clausen, J. (2022). Data code : Traits phylogenies modulate environmental responses wood-inhabiting fungal communities across spatial scales [Dataset]. Dryad. https://doi.org/10.5061/dryad.t76hdr82r","code":""},{"path":"/reference/fungi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Wood-decaying fungi data ‚Äî fungi","text":"","code":"if (FALSE) { # \\dontrun{ data(fungi) Y <- fungi$Y X <- fungi$X TR <- fungi$TR C <- fungi$C dist <- fungi$dist  #model <- gllvm(y = Y, X = cbind(int = 1, X), TR = TR,  #        formula = ~DBH.CM + AVERDP + I(AVERDP^2) + CONNECT10 + TEMPR + PRECIP +  #        log.AREA + (DBH.CM + AVERDP + I(AVERDP^2) + CONNECT10 + TEMPR + PRECIP +  #        log.AREA):(FB.type + Sp.log.vol.¬µ3 + Lifestyle),  #        family = \"binomial\", num.lv = 0, studyDesign = X[,c(\"REGION\", \"RESERVE\")],  #                     colMat = list(C, dist = dist), colMat.rho.struct = \"term\",  #                     row.eff = ~(1 | REGION/RESERVE), sd.errors = FALSE,  #                     randomX = ~int + DBH.CM + AVERDP + I(AVERDP^2) +  #                                CONNECT10 + TEMPR + PRECIP + log.AREA,  #                     beta0com = TRUE, nn.colMat = 10, maxit = 20000) } # }"},{"path":"/reference/getEnvironCov.gllvm.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract species covariances due to environmental random effects from gllvm object ‚Äî getEnvironCov.gllvm","title":"Extract species covariances due to environmental random effects from gllvm object ‚Äî getEnvironCov.gllvm","text":"Calculates species environment covariance matrix gllvm object.","code":""},{"path":"/reference/getEnvironCov.gllvm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract species covariances due to environmental random effects from gllvm object ‚Äî getEnvironCov.gllvm","text":"","code":"# S3 method for class 'gllvm' getEnvironCov(object, x = NULL, ...)"},{"path":"/reference/getEnvironCov.gllvm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract species covariances due to environmental random effects from gllvm object ‚Äî getEnvironCov.gllvm","text":"object object class 'gllvm'. x (optional) vector covariate values calculate covariance . Defaults vector 1s. 'randomX' random species effects present model list length two. ... used","code":""},{"path":"/reference/getEnvironCov.gllvm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract species covariances due to environmental random effects from gllvm object ‚Äî getEnvironCov.gllvm","text":"Function returns following components: cov species covariances due covariates trace.randomB trace covariance matrix due random canonical coefficients trace.randomB.quad trace covariance matrix components due squared model terms trace.col.eff trace covariance matrix due random column (species) effects","code":""},{"path":"/reference/getEnvironCov.gllvm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract species covariances due to environmental random effects from gllvm object ‚Äî getEnvironCov.gllvm","text":"Species covariance matrix due environment calculated. Covariances due covariates can calculated random effects included model, thus limited reduced rank models (including constrained concurrent ordinations) fitted random slopes, models fitted random effects via formula interface, fourth corner model fitted random slopes. full rank models random slopes, .e., formula interface fourth corner model, covariances species formulated : $$\\Sigma_e = kronecker(C\\rho + (1-\\rho)I_p, R),$$ \\(C\\) correlation matrix columns response (e.g., Phylogenetic matrix), \\(\\rho\\) signal parameter, R covariance matrix random effects. , $$= kronecker(I_p, x)$$, x vector covariate values random effects, defaults vector 1s. covariate-specific phylogenetic signal parameters model, instead: $$\\Sigma_e = kronecker(x_i', I_m)*bdiag(L_k)*kronecker(\\Sigma_r, I_m)*bdiag(L_k')*kronecker(x_i, I_m),$$ \\(bdiag(L_k)\\) block-diagonal lower triangular matrix, \\(L_k\\) lower triangular matrix covariance matrix covariate. reduced rank models, covariance separately defined different variance structures canonical coefficients package. LV-specific variances, : $$\\Sigma_e = \\Theta*S*\\Theta',$$ \\(\\Theta\\) matrix loadings, S (diagonal) covariance matrix canonical coefficients. predictor-specific variances, instead : $$\\Sigma_e = \\sum^K_{k=1} \\Theta(I_d*\\sigma_k^2)\\Theta',$$ I_d identity matrix number constrained informed latent variables, \\(\\sigma_k^2\\) variance per predictor canonical coefficients.","code":""},{"path":[]},{"path":"/reference/getEnvironCov.gllvm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extract species covariances due to environmental random effects from gllvm object ‚Äî getEnvironCov.gllvm","text":"Bert van der Veen","code":""},{"path":"/reference/getEnvironCov.gllvm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract species covariances due to environmental random effects from gllvm object ‚Äî getEnvironCov.gllvm","text":"","code":"if (FALSE) { # \\dontrun{ # Example with the spider dataset data(eSpider) y = eSpider$abund[eSpider$nonNA,] X = eSpider$X[eSpider$nonNA,] fit <- gllvm(y, X = scale(X), num.RR = 2,              randomB = \"P\", family = \"negative.binomial\") envcov <- getEnvironCov(fit) envcov$trace.randomB # As proportion of variance in the model envcov$trace.randomB/sum(envcov$trace.randomB) } # }"},{"path":"/reference/getLoadings.gllvm.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract loadings ‚Äî getLoadings.gllvm","title":"Extract loadings ‚Äî getLoadings.gllvm","text":"Extract loadings (species scores) gllvm object.","code":""},{"path":"/reference/getLoadings.gllvm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract loadings ‚Äî getLoadings.gllvm","text":"","code":"# S3 method for class 'gllvm' getLoadings(object, ...)"},{"path":"/reference/getLoadings.gllvm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract loadings ‚Äî getLoadings.gllvm","text":"object object class 'gllvm'. ... used","code":""},{"path":"/reference/getLoadings.gllvm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract loadings ‚Äî getLoadings.gllvm","text":"Function retrieves loadings .k.. species scores GLLVM. optima quadratic response model, see optima.gllvm","code":""},{"path":"/reference/getLV.gllvm.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract latent variables ‚Äî getLV.gllvm","title":"Extract latent variables ‚Äî getLV.gllvm","text":"Extract latent variables gllvm object.","code":""},{"path":"/reference/getLV.gllvm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract latent variables ‚Äî getLV.gllvm","text":"","code":"# S3 method for class 'gllvm' getLV(object, type = NULL, ...)"},{"path":"/reference/getLV.gllvm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract latent variables ‚Äî getLV.gllvm","text":"object object class 'gllvm'. type type latent variable scores retrieve gllvm object. models unconstrained latent variables, defaults \"residual\". models constrained latent variables, defaults conditional. Alternatively, \"marginal\" returns linear combination scores without residual error. ... used","code":""},{"path":"/reference/getLV.gllvm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract latent variables ‚Äî getLV.gllvm","text":"Function retrieves site scores GLLVM. type corresponds separate term model. GLLVM unconstrained latent variables default \"residual\". \"Residual\" scores represent error term concurrent ordination, available constrained ordination. GLLVMs informed latent variables, \"conditional\" returns complete site scores, due fixed- latent effects, latent effect always scaled diagonal species loadings can small relative fixed-effects. \"Conditional\" means conditional random-effect .e. residual. Type \"marginal\"  returns linear combination scores, .e. site scores due fixed-effects. available constrained concurrent ordination. unconstrained constrained latent variables included model, type \"marginal\" returns linear combination scores constrained latent variables \"residual\" scores unconstrained latent variables.","code":""},{"path":"/reference/getPredictErr.gllvm.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract prediction errors for latent variables from gllvm object ‚Äî getPredictErr.gllvm","title":"Extract prediction errors for latent variables from gllvm object ‚Äî getPredictErr.gllvm","text":"Calculates prediction errors latent variables random effects gllvm model.","code":""},{"path":"/reference/getPredictErr.gllvm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract prediction errors for latent variables from gllvm object ‚Äî getPredictErr.gllvm","text":"","code":"# S3 method for class 'gllvm' getPredictErr(object, CMSEP = TRUE, cov = FALSE, ...)"},{"path":"/reference/getPredictErr.gllvm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract prediction errors for latent variables from gllvm object ‚Äî getPredictErr.gllvm","text":"object object class 'gllvm'. CMSEP logical, TRUE conditional mean squared errors predictions calculated. FALSE, prediction errors based covariances variational distributions method =\"VA\" method =\"EVA\". cov TRUE, return covariances/variances predictions. Otherwise FALSE (default) return standard errors predictions. ... used","code":""},{"path":"/reference/getPredictErr.gllvm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract prediction errors for latent variables from gllvm object ‚Äî getPredictErr.gllvm","text":"Function returns following components: lvs prediction errors latent variables row.effects prediction errors random row effects included","code":""},{"path":"/reference/getPredictErr.gllvm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract prediction errors for latent variables from gllvm object ‚Äî getPredictErr.gllvm","text":"Calculates conditional mean squared errors predictions. variational approximation used, prediction errors can based covariances variational distributions, therefore take account uncertainty estimation (fixed) parameters.","code":""},{"path":"/reference/getPredictErr.gllvm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extract prediction errors for latent variables from gllvm object ‚Äî getPredictErr.gllvm","text":"Francis K.C. Hui, Jenni Niku, David . Warton","code":""},{"path":"/reference/getPredictErr.gllvm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract prediction errors for latent variables from gllvm object ‚Äî getPredictErr.gllvm","text":"","code":"if (FALSE) { # \\dontrun{ # Load a dataset from the mvabund package data(antTraits, package = \"mvabund\") y <- as.matrix(antTraits$abund) # Fit gllvm model fit <- gllvm(y = y, family = poisson()) # prediction errors for latent variables: getPredictErr(fit) } # }"},{"path":"/reference/getResidualCor.gllvm.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract residual correlations from gllvm object ‚Äî getResidualCor.gllvm","title":"Extract residual correlations from gllvm object ‚Äî getResidualCor.gllvm","text":"Calculates residual correlation matrix gllvm model.","code":""},{"path":"/reference/getResidualCor.gllvm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract residual correlations from gllvm object ‚Äî getResidualCor.gllvm","text":"","code":"# S3 method for class 'gllvm' getResidualCor(object, adjust = 1, site.index = NULL, ...)"},{"path":"/reference/getResidualCor.gllvm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract residual correlations from gllvm object ‚Äî getResidualCor.gllvm","text":"object object class 'gllvm'. adjust type adjustment used  negative binomial binomial distribution computing residual correlation matrix. Options 0 (adjustment), 1 (default adjustment) 2 (alternative adjustment NB distribution). See details. site.index site index used used calculation GLLVM quadratic response model, residual correlations calculated. ... used","code":""},{"path":"/reference/getResidualCor.gllvm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract residual correlations from gllvm object ‚Äî getResidualCor.gllvm","text":"Residual correlation matrix calculated based residual covariance matrix, see details getResidualCov.gllvm.","code":""},{"path":"/reference/getResidualCor.gllvm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extract residual correlations from gllvm object ‚Äî getResidualCor.gllvm","text":"Francis K.C. Hui, Jenni Niku, David . Warton","code":""},{"path":"/reference/getResidualCor.gllvm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract residual correlations from gllvm object ‚Äî getResidualCor.gllvm","text":"","code":"#'# Extract subset of the microbial data to be used as an example data(microbialdata) y <- microbialdata$Y[, order(colMeans(microbialdata$Y > 0),                       decreasing = TRUE)[21:40]] fit <- gllvm(y, family = poisson()) fit$logL #> [1] -4242.668 cr <- getResidualCor(fit) cr[1:5,1:5] #>             OTU_79    OTU_164    OTU_462     OTU_95    OTU_833 #> OTU_79   1.0000000  0.3887252  0.3422382 -0.7491377  0.9955697 #> OTU_164  0.3887252  1.0000000  0.9987528 -0.9015266  0.4736348 #> OTU_462  0.3422382  0.9987528  1.0000000 -0.8787967  0.4290705 #> OTU_95  -0.7491377 -0.9015266 -0.8787967  1.0000000 -0.8081033 #> OTU_833  0.9955697  0.4736348  0.4290705 -0.8081033  1.0000000 if (FALSE) { # \\dontrun{ # Load a dataset from the mvabund package data(antTraits, package = \"mvabund\") y <- as.matrix(antTraits$abund) # Fit gllvm model fit <- gllvm(y = y, family = poisson()) # residual correlations: cr <- getResidualCor(fit) # Plot residual correlations: install.packages(\"corrplot\", \"gclus\") library(corrplot) library(gclus) corrplot(cr[order.single(cr), order.single(cr)], diag = F,   type = \"lower\", method = \"square\", tl.cex = 0.8, tl.srt = 45, tl.col = \"red\")   } # }"},{"path":"/reference/getResidualCov.gllvm.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract residual covariance matrix from gllvm object ‚Äî getResidualCov.gllvm","title":"Extract residual covariance matrix from gllvm object ‚Äî getResidualCov.gllvm","text":"Calculates residual covariance matrix gllvm model.","code":""},{"path":"/reference/getResidualCov.gllvm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract residual covariance matrix from gllvm object ‚Äî getResidualCov.gllvm","text":"","code":"# S3 method for class 'gllvm' getResidualCov(object, adjust = 1, site.index = NULL, ...)"},{"path":"/reference/getResidualCov.gllvm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract residual covariance matrix from gllvm object ‚Äî getResidualCov.gllvm","text":"object object class 'gllvm'. adjust type adjustment used  negative binomial, binomial normal distribution computing residual correlation matrix. Options 0 (adjustment), 1 (default adjustment) 2 (alternative adjustment NB distribution), see details. site.index site index, vector length one 1, used calculation GLLVM quadratic response model. ... used.","code":""},{"path":"/reference/getResidualCov.gllvm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract residual covariance matrix from gllvm object ‚Äî getResidualCov.gllvm","text":"Function returns following components: cov residual covariance matrix trace trace residual covariance matrix, total variance explained var.q trace residual covariance matrix per latent variable, variance explained per latent variable var.q2 trace squared term residual covariance matrix per latent variable, quadratic responses. Variance explained per latent variable quadratic term","code":""},{"path":"/reference/getResidualCov.gllvm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract residual covariance matrix from gllvm object ‚Äî getResidualCov.gllvm","text":"Residual covariance matrix, storing information species co-occurrence explained environmental variables (included), calculated using matrix latent variables loadings, , \\(\\Theta\\Theta'\\), dispersion parameter related distribution choice, applicable (e.g. case negative-binomial distributed responses). responses modelled using negative binomial distribution, residual variances species must adjusted overdispersion. two possible adjustment terms \\(log(\\phi_j + 1)\\) (adjust = 1) \\(\\psi^{(1)}(1/\\phi_j)\\) (adjust = 2), \\(\\psi^{(1)}\\) trigamma function. negative binomial model can written using different parameterizations. residual covariance adjust = 1 can obtained using lognormal-Poisson parametrization, , $$Y_{ij} \\sim Poisson(\\mu_{ij} \\lambda_j),$$ \\(\\lambda_j \\sim lognormal(-\\sigma^2/2, \\sigma^2)\\) \\(\\sigma^2 = log(\\phi_j + 1)\\) \\(log(\\mu_{ij}) = \\eta_{ij}\\). Now \\(E[Y_{ij}] = \\mu_{ij}\\) variance \\(V(\\mu_{ij}) = \\mu_{ij} + \\mu_{ij}^2 (exp(\\sigma^2) - 1) = \\mu_{ij} + \\mu_{ij}^2 \\phi_j\\), NB distribution. Therefore, linear predictor scale, variance $$V(log(\\mu_{ij} \\lambda_j)) = V(log\\mu_{ij}) + V(log\\lambda_j) = V(u_i'\\theta_j) + \\sigma^2 = \\theta_j'\\theta_j + log(\\phi_j + 1).$$ leads residual covariance matrix \\(\\Theta \\Theta' + \\Psi\\), \\(\\Psi\\) diagonal matrix \\(log(\\phi_j + 1)\\) diagonal elements (adjust = 1). , GLLVM species quadratic function latent variables, instead $$V(log(\\mu_{ij} \\lambda_j)) = V(log\\mu_{ij}) + V(log\\lambda_j) = V(u_i'\\theta_j-u_i' D_j u_i) + \\sigma^2 $$ $$ = \\theta_j'\\theta_j + 2diag(D_j)'diag(D_j)log(\\phi_j + 1).$$ leads residual covariance matrix \\(\\Theta \\Theta' + 2 \\Gamma_j \\Gamma_j' + diag(\\Phi)\\), \\(\\Gamma_j\\) holds quadratic coefficients. Since quadratic coefficients constrained positive, residual covariance latter case , given coefficients linear term, equal positive linear case. residual covariance matrix adjust = 2 can obtained using Poisson-Gamma parametri-zation $$Y_{ij} \\sim Poisson(\\mu_{ij} \\lambda_j),$$ \\(\\lambda_j \\sim Gamma(1/\\phi_j, 1/\\phi_j)\\) \\(\\mu_{ij}\\) . mean variance similar form $$V(log(\\mu_{ij} \\lambda_j)) = V(log\\mu_{ij}) + V(log\\lambda_j) = \\theta_j'\\theta_j + \\psi^{(1)}(1/\\phi_j),$$ \\(\\psi^{(1)}\\) trigamma function. case binomial distribution, adjustment terms (adjust = 1) 1 probit link \\(\\pi^2/3\\) logit link. obtained treating binomial model latent variable model. Assume $$Y^*_{ij} = \\eta_{ij} + e_{ij},$$ \\(e_{ij} \\sim N(0, 1)\\) probit model, \\(e_{ij} \\sim logistic(0, 1)\\) logit model. binary response defined \\(Y_{ij} = 1\\), \\(Y^*_{ij} > 0\\) 0 otherwise. Now \\(\\mu_{ij} = P(Y_{ij} = 1) = P(Y^*_{ij} > 0) = P(\\eta_{ij} > -e_{ij}) = P(e_{ij} <= \\eta_{ij})\\) leads probit logit models. linear predictor scale $$V(\\eta_{ij} + e_{ij}) = V(\\eta_{ij}) + V(e_{ij}).$$ probit model, residual covariance matrix \\(\\Theta\\Theta' + I_m\\), logit model \\(\\Theta\\Theta' + \\pi^2/3 I_m\\). Similarly , GLLVM species quadratic function latent variables, term \\(2\\Gamma_j\\Gamma_j'\\) added residual covariance matrix. normal distribution, can write $$Y_{ij} = \\eta_{ij} + e_{ij},$$ \\(e_{ij} \\sim N(0, \\phi_j^2)\\) thus $$V(\\eta_{ij} + e_{ij}) = V(\\eta_{ij}) + V(e_{ij}).$$ gaussian model, residual covariance matrix \\(\\Theta\\Theta' + diag(\\Phi^2)\\).","code":""},{"path":"/reference/getResidualCov.gllvm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extract residual covariance matrix from gllvm object ‚Äî getResidualCov.gllvm","text":"Francis K.C. Hui, Jenni Niku, David . Warton, Bert van der Veen","code":""},{"path":"/reference/getResidualCov.gllvm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract residual covariance matrix from gllvm object ‚Äî getResidualCov.gllvm","text":"","code":"if (FALSE) { # \\dontrun{ # Load a dataset from the mvabund package data(antTraits, package = \"mvabund\") y <- as.matrix(antTraits$abund) # Fit gllvm model fit <- gllvm(y = y, family = poisson()) # residual covariance: rescov <- getResidualCov(fit) rescov$cov # Trace of the covariance matrix rescov$trace # Variance explained per latent variable rescov$var.q } # }"},{"path":"/reference/gllvm.html","id":null,"dir":"Reference","previous_headings":"","what":"Generalized Linear Latent Variable Models ‚Äî gllvm","title":"Generalized Linear Latent Variable Models ‚Äî gllvm","text":"Fits generalized linear latent variable model multivariate data. model can fitted using Laplace approximation method variational approximation method.","code":""},{"path":"/reference/gllvm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generalized Linear Latent Variable Models ‚Äî gllvm","text":"","code":"gllvm(   y = NULL,   X = NULL,   TR = NULL,   data = NULL,   formula = NULL,   family,   num.lv = NULL,   num.lv.c = 0,   num.RR = 0,   lv.formula = NULL,   lvCor = NULL,   studyDesign = NULL,   dist = list(matrix(0)),   distLV = matrix(0),   colMat = NULL,   colMat.rho.struct = \"single\",   corWithin = FALSE,   corWithinLV = FALSE,   quadratic = FALSE,   row.eff = FALSE,   sd.errors = TRUE,   offset = NULL,   method = \"VA\",   randomB = FALSE,   randomX = NULL,   beta0com = FALSE,   zeta.struc = \"species\",   plot = FALSE,   link = \"probit\",   Ntrials = 1,   Power = 1.1,   seed = NULL,   scale.X = TRUE,   return.terms = TRUE,   gradient.check = FALSE,   disp.formula = NULL,   control = list(reltol = 1e-08, reltol.c = 1e-08, TMB = TRUE, optimizer = ifelse((num.RR     + num.lv.c) == 0 | randomB != FALSE, \"optim\", \"alabama\"), max.iter = 6000, maxit =     6000, trace = FALSE, optim.method = NULL, nn.colMat = 10),   control.va = list(Lambda.struc = \"unstructured\", Ab.struct = ifelse(is.null(colMat),     \"blockdiagonal\", \"MNunstructured\"), Ab.struct.rank = 1, Ar.struc = \"diagonal\",     diag.iter = 1, Ab.diag.iter = 0, Lambda.start = c(0.3, 0.3, 0.3), NN = 3),   control.start = list(starting.val = \"res\", n.init = 1, n.init.max = 10, jitter.var = 0,     jitter.var.br = 0, start.fit = NULL, start.lvs = NULL, randomX.start = \"res\",     quad.start = 0.01, start.struc = \"LV\", scalmax = 10, MaternKappa = 1.5, rangeP =     NULL),   setMap = NULL,   ... )"},{"path":"/reference/gllvm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generalized Linear Latent Variable Models ‚Äî gllvm","text":"y (n x m) matrix responses. X matrix data.frame environmental covariates. TR matrix data.frame trait covariates. data data long format, , matrix responses, environmental trait covariates row index named \"id\". used, model needs defined using formula. alternative data input y, X TR. formula object class \"formula\" (one can coerced class): symbolic description model fitted (fixed-effects predictors). family distribution function responses. Options \"negative.binomial\" (log link), poisson(link = \"log\"), binomial(link = \"probit\") (also link = \"logit\" method = \"LA\" method = \"EVA\"), zero-inflated poisson (\"ZIP\"), zero-inflated negative-binomial (\"ZINB\"), gaussian(link = \"identity\"), Tweedie (\"tweedie\") (log link, \"LA\" \"EVA\"-method), \"gamma\" (log link), \"exponential\" (log link), beta (\"beta\") (logit probit link, \"LA\"  \"EVA\"-method), \"ordinal\" (\"VA\" \"EVA\"-method), beta hurdle \"betaH\" (\"VA\" \"EVA\"-method) \"orderedBeta\" (\"VA\" \"EVA\"-method). Note: \"betaH\" \"orderedBeta\" \"VA\"-method actually fitted using hybrid approach EVA applied beta distribution part likelihood. num.lv number latent variables, d, gllvm model. Non-negative integer, less number response variables (m). Defaults 2, num.lv.c=0 num.RR=0, otherwise 0. num.lv.c number latent variables, d, gllvm model inform, .e., residual term. Non-negative integer, less number response (m) equal , less , number predictor variables (k). Defaults 0. Requires specification \"lv.formula\" combination \"X\" \"datayx\". Can used combination num.lv fixed-effects, traits. num.RR number latent variables, d, gllvm model constrain, without residual term (reduced rank regression). yet combined traits. lv.formula object class \"formula\" (one can coerced class): symbolic description model fitted (latent variables). lvCor (development, used moment!) correlation structure latent variables, defaults NULL Correlation structure latent variables can defined via formula, eg. ~struc(1|groups), option 'struc' corAR1 (AR(1) covariance), corExp (exponentially decaying, see argument 'dist') corCS (compound symmetry). grouping variable needs included either 'X' 'studyDesign'. Works moment unconstrained ordination without quadratic term. studyDesign variables related eg. sampling/study design, used defining correlation structure latent variables row effects. dist list length equal number row effects correlation structure corExp holds matrix coordinates time points. distLV matrix coordinates time points used LV correlation structure corExp. colMat either list length 2 matrix similarity column effects named matrix \"dist\" pairwise distances (columns, use selecting nearest neighbours) sparse approximation matrix inverse likelihood, (p.d.) matrix similarity column effects normal inverse calculation. colMat.rho.struct either single (default) term indicating whether signal parameter shared covariates, . corWithin logical. Vector length equal number row effects. structured row effects correlation, TRUE, correlation set row effects observation units within group. Correlation groups can defined using row.eff. Defaults FALSE, correlation set row parameters groups. corWithinLV logical. LVs correlation, TRUE, correlation set rows observation units within group. Defaults FALSE, correlation set rows groups. quadratic either FALSE(default), TRUE, LV. FALSE models species responses linear function latent variables. TRUE models species responses quadratic function latent variables. LV assumes species quadratic coefficient per latent variable. row.eff FALSE, fixed, \"random\" formula define structure row parameters. Indicating whether row effects included model fixed random effects. Defaults FALSE row effects included. Structured random row effects can defined via formula, eg. ~(1|groups), unique row effects set group, rows, grouping variable needs included X. Correlation structure random group effects/intercepts can also set using ~struc(1|groups), option 'struc' corAR1 (AR(1) covariance), corExp (exponentially decaying, see argument 'dist') corCS (compound symmetry). Correlation structure can set within groups, see argument 'corWithin'. sd.errors logical. TRUE (default) standard errors parameter estimates calculated. offset vector matrix offset terms. method model can fitted using Laplace approximation method (method = \"LA\") variational approximation method (method = \"VA\"), extended variational approximation method (method = \"EVA\") VA applicable. particular model implemented using selected method, model fitted using alternative method default. Defaults \"VA\". randomB either FALSE(default), \"LV\", \"P\", \"single\", \"iid\". Fits concurrent constrained ordination (.e. models num.lv.c num.RR) random slopes predictors. \"LV\" assumes LV-specific variance parameters, \"P\" predictor specific, \"single\" across LVs predictors. randomX formula species specific random effects environmental variables fourth corner model. Defaults NULL, random slopes included. beta0com logical. FALSE column-specific intercepts assumed. TRUE, column-specific intercepts collected common value. zeta.struc structure cut-offs ordinal model. Either \"common\", cut-offs species, \"species\" species-specific cut-offs. latter, classes arbitrary per species, category per species needs least one observations. Defaults \"species\". plot logical. TRUE ordination plots printed iteration step TMB = FALSE. Defaults FALSE. link link function binomial family method = \"LA\" beta family. Options \"logit\" \"probit\". Ntrials number trials binomial family. Power fixed power parameter Tweedie model. Scalar interval (1,2). Defaults 1.1. set NULL estimated (note: experimental). seed single seed value, defaults NULL. scale.X logical. TRUE, covariates scaled fourth corner model fitted. return.terms logical. TRUE 'terms' object returned. gradient.check logical. TRUE gradients checked large values (>0.01) even optimization algorithm converge. disp.formula formula, alternatively vector indices, grouping dispersion parameters (e.g. negative-binomial distribution). Defaults NULL species dispersion parameter. allowed include categorical variables. formula, data included named rows y. control list following arguments controlling optimization: reltol: convergence criteria log-likelihood, defaults 1e-8. reltol.c: convergence criteria equality constraints ordination predictors, defaults 1e-8. TMB: logical, TRUE model fitted using Template Model Builder (TMB). TMB always used method = \"LA\".  Defaults TRUE. optimizer: TMB=TRUE, log-likelihood can optimized using \"optim\" (default) \"nlminb\". ordination predictors (num.RR>0 num.lv.c>0) can additionally one alabama(default), nloptr(agl) nloptr(sqp). max.iter: maximum number iterations TMB = FALSE optimizer = \"nlminb\" TMB = TRUE, defaults 6000. maxit: maximum number iterations optimizer, defaults 6000. trace: logical, TRUE iteration step information current step printed. Defaults FALSE. TMB = FALSE. optim.method: optimization method used optimizer \"optim\",\"alabama\",  \"nloptr\", latter two available combination least two latent variables (.e., num.RR+num.lv.c>1). Defaults \"BFGS\", \"L-BFGS-B\" Tweedie family due limited-memory use. optimizer='alabama' can \"optim\" method,  \"nlminb\". optimizer = 'nloptr(agl)' can one : \"NLOPT_LD_CCSAQ\", \"NLOPT_LD_SLSQP\", \"NLOPT_LD_TNEWTON_PRECOND\" (default), \"NLOPT_LD_TNEWTON\", \"NLOPT_LD_MMA\". nn.colMat: number nearest neighbours calculating inverse \"colMat\", defaults 10. set number columns response data, standard inverse used instead. control.va list following arguments controlling variational approximation method: Lambda.struc: covariance structure VA distributions latent variables method = \"VA\", \"unstructured\" \"diagonal\". Ab.struct: covariance structure VA distributions random slopes method = \"VA\", ordered terms complexity: \"diagonal\", \"MNdiagonal\" (colMat), \"blockdiagonal\" (default without colMat), \"MNunstructured\" (default, colMat), \"diagonalCL1\" ,\"CL1\" (colMat), \"CL2\" (colMat),\"diagonalCL2\" (colMat), \"unstructured\" (colMat) Ab.struct.rank: number columns cholesky variational covariance matrix use, defaults 1. applicable \"MNunstructured\", \"diagonalCL1\", \"CL1\",\"diagonalCL2\", \"unstructured\". Ar.struc: covariance structure VA distributions random row effects method = \"VA\", \"unstructured\" \"diagonal\". Defaults \"diagonal\". diag.iter: non-negative integer can sometimes used speed updating variational (covariance) parameters VA method. Can sometimes improve accuracy. TMB = TRUE either 0 1. Defaults 1. Ab.diag.iter: , variational covariance random slopes. Lambda.start: starting values variances VA distributions latent variables, random row effects random slopes variational approximation method. Defaults 0.3. NN: Number nearest neighbors NN variational covariance. Defaults ... control.start list following arguments controlling starting values: starting.val: starting values can generated fitting model without latent variables, applying factorial analysis residuals get starting values latent variables coefficients (starting.val = \"res\"). Another options use zeros starting values (starting.val = \"zero\") initialize starting values latent variables (n x num.lv) matrix. Defaults \"res\", recommended. n.init: number initial runs. Uses multiple runs picks one giving highest log-likelihood value. Defaults 1. n.init.max: maximum number refits try try n.init without improvement, defaults 10. start.fit: object class 'gllvm' can given starting parameters count data (poisson, NB, ZIP). start.lvs: initialize starting values latent variables (n x num.lv) matrix. Defaults NULL. jitter.var: jitter variance starting values latent variables. Defaults 0, meaning jittering. jitter.var.br: jitter variance starting values random slopes. Defaults 0, meaning jittering. randomX.start: starting value method random slopes. Options \"zero\" \"res\". Defaults \"res\". start.struc: starting value method quadratic term. Options \"LV\" (default) \"\". quad.start: starting values quadratic coefficients. Defaults 0.01. MaternKappa: Starting value smoothness parameter kappa Matern covariance function. Defaults 3/2. scalmax: Sets starting value scale parameter coordinates. Defaults 10, starting value scale parameter scales distances coordinates 0-10. rangeP: Sets starting value range parameter correlation structure. setMap DEVELOPMENT, USE! list set parameters fixed. Parameters fixed need defined factors. arguments may overwrite definitions. ... used.","code":""},{"path":"/reference/gllvm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generalized Linear Latent Variable Models ‚Äî gllvm","text":"object class \"gllvm\" includes following components:  call function call y (n x m) matrix responses. X matrix data.frame environmental covariates. X.design design matrix environmental covariates. lv.X design matrix data.frame environmental covariates latent variables. lv.X.design design matrix data.frame environmental covariates latent variables. TR Trait matrix formula Formula predictors lv.formula Formula latent variables constrained concurrent ordination randomX Formula species specific random effects fourth corner model randomB Boolean flag random slopes constrained concurrent ordination num.lv Number unconstrained latent variables num.lv.c Number latent variables concurrent ordination num.RR Number latent variables constrained ordination Ntrials Number trials binomial model method Method used integration family Response distribution row.eff Type row effect used n.init Number model runs best fit disp.group Groups dispersion parameters sd List standard errors lvs Latent variables params List parameters theta latent variables' loadings relative diagonal entries loading matrix sigma.lv diagonal entries latent variables' loading matrix LvXcoef Predictor coefficients (predictions random slopes) related latent variables, .e. canonical coefficients beta0 column specific intercepts Xcoef coefficients related environmental covariates X B coefficients fourth corner model, RE means Br column random effects sigmaB scale parameters column-specific random effects rho.sp (positive) correlation parameter influence strength \"colMat\" row.params row-specific intercepts sigma scale parameters row-specific random effects phi dispersion parameters \\(\\phi\\) negative binomial Tweedie family, probability zero inflation ZIP family, standard deviation gaussian family shape parameter gamma/beta family inv.phi dispersion parameters \\(1/\\phi\\) negative binomial Power power parameter \\(\\nu\\) Tweedie family sd list standard errors parameters prediction.errors list prediction covariances latent variables variances random row effects method \"LA\" used , Ar, Ab_lv, spArs covariance matrices variational densities latent variables, random row effects, random slopes, colum effects respectively seed Seed used calculating starting values TMBfn TMB objective derivative functions logL log likelihood convergence convergence code optimizer quadratic flag quadratic model Hess List holding matrices second derivatives beta0com Flag common intercept cstruc Correlation structure row effects cstruclv Correlation structure LVs dist Matrix coordinates time points used row effects distLV Matrix coordinates time points used LVs col.eff list components column random effects Ab.struct variational covariance structure fitted model Ab.struct.rank fitted rank variational covariance matrix col.eff flag indicating column random effects included spdr design matrix colMat.rho.struct character vector signal parameter  terms Terms object main predictors start starting values model optim.method Optimization method using 'optim', 'alabama', 'nloptr'","code":""},{"path":"/reference/gllvm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generalized Linear Latent Variable Models ‚Äî gllvm","text":"Fits generalized linear latent variable models Hui et al. (2015 2017) Niku et al. (2017). Method can used two types latent variable models depending covariates. site related environmental covariates used, expectation response \\(Y_{ij}\\) determined $$g(\\mu_{ij}) = \\eta_{ij} = \\alpha_i + \\beta_{0j} + x_i'\\beta_j + u_i'\\theta_j,$$ \\(g(.)\\) known link function, \\(u_i\\) \\(d\\)-variate latent variables (\\(d\\)<<\\(m\\)), \\(\\alpha_i\\) optional row effect site \\(\\), can fixed random effect (also structures possible, see ), \\(\\beta_{0j}\\) intercept term species \\(j\\), \\(\\beta_j\\) \\(\\theta_j\\) column specific coefficients related covariates latent variables, respectively. Models implemented using TMB (Kristensen et al., 2015) applied variational approximation (Hui et al., 2017), extended variational approximation (Korhonen et al., 2021) Laplace approximation (Niku et al., 2017). ordinal family response classes must start 0 1.","code":""},{"path":"/reference/gllvm.html","id":"quadratic-model","dir":"Reference","previous_headings":"","what":"Quadratic model","title":"Generalized Linear Latent Variable Models ‚Äî gllvm","text":"Alternatively, complex version model can fitted quadratic = TRUE, species modeled quadratic function latent variables: $$g(\\mu_{ij}) = \\eta_{ij} = \\alpha_i + \\beta_{0j} + x_i'\\beta_j + u_i'\\theta_j - u_i' D_j u_i$$. , D_j diagonal matrix positive quadratic coefficients, model generates concave shapes . implementation follows ecological theoretical model species generally recognized exhibit non-linear response curves. model quadratic responses, quadratic coefficients assumed species: $$D_j = D$$. model requires less information per species can expected applicable datasets. quadratic coefficients D can used calculate length ecological gradients. quadratic responses, can useful provide latent variables estimated GLLVM linear responses, estimated (Detrended) Correspondence Analysis. latent variables can passed start.lvs argument inside control.start list, many cases gives good results.","code":""},{"path":"/reference/gllvm.html","id":"ordination-with-predictors","dir":"Reference","previous_headings":"","what":"Ordination with predictors","title":"Generalized Linear Latent Variable Models ‚Äî gllvm","text":"GLLVMs linear quadratic response model, series predictors \\(x_{lv}\\) can included explain latent variables: $$g(\\mu_{ij}) = \\alpha_i + \\beta_{0j} + x_i'\\beta_j + (B' x_{lv,} + \\epsilon_i)' \\gamma_j - (B' x_{lv,} + \\epsilon_i)' D_j (B' x_{lv,} + \\epsilon_i) ,$$ \\(z_i = B' x_{lv,} + \\epsilon_i\\) latent variables informed predictors, constrained compared unconstrained ordination methods CCA RDA. Omitting predictors results unconstrained ordination, omitting \\(\\epsilon_i\\) usual constrained ordination, can also fitted.","code":""},{"path":"/reference/gllvm.html","id":"fourth-corner-model","dir":"Reference","previous_headings":"","what":"Fourth corner model","title":"Generalized Linear Latent Variable Models ‚Äî gllvm","text":"alternative model fourth corner model (Brown et al., 2014, Warton et al., 2015) fitted also trait covariates included. expectation response \\(Y_{ij}\\) $$g(\\mu_{ij}) = \\alpha_i + \\beta_{0j} + x_i'(\\beta_x + b_j) + TR_j'\\beta_t + vec(B)*kronecker(TR_j,X_i) + u_i'\\theta_j - u_i'D_ju_i$$ g(.), \\(u_i\\), \\(\\beta_{0j}\\) \\(\\theta_j\\) defined . Vectors \\(\\beta_x\\) \\(\\beta_t\\) main effects coefficients related environmental trait covariates, respectively, matrix \\(B\\) includes interaction terms. Vectors \\(b_j\\) optional species-specific random slopes environmental covariates. interaction/fourth corner terms optional well main effects trait covariates.","code":""},{"path":"/reference/gllvm.html","id":"structured-row-effects","dir":"Reference","previous_headings":"","what":"Structured row effects","title":"Generalized Linear Latent Variable Models ‚Äî gllvm","text":"addition site-specific random effects, \\(\\alpha_i\\), also possible set arbitrary structure/design row effects. , assume observations / rows \\(=1,...,n\\) data matrix groups \\(t=1,...,T\\), row \\(\\) belongs one groups, denote \\(G() \\\\{1,...,T\\}\\). group \\(t\\) number observations \\(n_t\\), \\(\\sum_{t=1}^{T} n_t =n\\). Now can set random intercept group \\(t\\), (see argument 'row.eff'): $$g(\\mu_{ij}) = \\eta_{ij} = \\alpha_{G()} + \\beta_{0j} + x_i'\\beta_j + u_i'\\theta_j,$$ also possibility set correlation structure random intercepts groups, \\((\\alpha_{1},...,\\alpha_{T})^\\top \\sim N(0, \\Sigma_r)\\). might case, example, groups spatially temporally dependent.  Another option set row specific random intercepts \\(\\alpha_i\\), set correlation structure observations within groups, (see argument 'corWithin'). , can set \\(corr(\\alpha_{},\\alpha_{'}) = C(,') \\neq 0\\) according correlation function \\(C\\), \\(G()=G(')\\).  model restricted case, group equal number observations (rows), \\(n_t=n_{t'}\\) \\(t,t' \\\\{1,...,T\\}\\). correlation structures available package corAR1 autoregressive process order 1. corExp exponentially decaying, see argument 'dist'. corCS compound symmetry.","code":""},{"path":"/reference/gllvm.html","id":"starting-values","dir":"Reference","previous_headings":"","what":"Starting values","title":"Generalized Linear Latent Variable Models ‚Äî gllvm","text":"method sensitive choices initial values latent variables. Therefore recommendable use multiple runs pick one giving highest log-likelihood value (see argument 'n.init'). However, sometimes computationally demanding, default option starting.val = \"res\" recommended. details different starting value methods, see Niku et al., (2018).","code":""},{"path":"/reference/gllvm.html","id":"distributions","dir":"Reference","previous_headings":"","what":"Distributions","title":"Generalized Linear Latent Variable Models ‚Äî gllvm","text":"Mean variance distributions defined follows. count data family = poisson(): Expectation \\(E[Y_{ij}] = \\mu_{ij}\\), variance \\(V(\\mu_{ij}) = \\mu_{ij}\\), family = \"negative.binomial\": Expectation \\(E[Y_{ij}] = \\mu_{ij}\\), variance \\(V(\\mu_{ij}) = \\mu_{ij}+\\mu_{ij}^2\\phi_j\\), family = \"ZIP\": Expectation \\(E[Y_{ij}] = (1-p)\\mu_{ij}\\), variance \\(V(\\mu_{ij}) = \\mu_{ij}(1-p_j)(1+\\mu_{ij}p)\\). family = \"ZINB\": Expectation \\(E[Y_{ij}] = (1-p)\\mu_{ij}\\), variance \\(V(\\mu_{ij}) = \\mu_{ij}(1-p_j)(1+\\mu_{ij}(\\phi_j+p_j))\\). binary data family = binomial(): Expectation \\(E[Y_{ij}] = \\mu_{ij}\\), variance \\(V(\\mu_{ij}) = \\mu_{ij}(1-\\mu_{ij})\\). percent cover data \\(0 < Y_{ij} < 1\\) family = \"beta\": Expectation \\(E[Y_{ij}] = \\mu_{ij}\\), variance \\(V(\\mu_{ij}) = \\mu_{ij}(1-\\mu_{ij})//(1+\\phi_j)\\). positive continuous data family = \"gamma\": Expectation \\(E[Y_{ij}] = \\mu_{ij}\\), variance \\(V(\\mu_{ij}) = \\mu_{ij}^2/\\phi_j\\), \\(\\phi_j\\) species specific shape parameter. non-negative  continuous data family = \"exponential\": Expectation \\(E[Y_{ij}] = \\mu_{ij}\\), variance \\(V(\\mu_{ij}) = \\mu_{ij}^2\\). non-negative continuous biomass data family = \"tweedie\" Expectation \\(E[Y_{ij}] = \\mu_{ij}\\), variance \\(V(\\mu_{ij}) = \\phi_j*\\mu_{ij}^\\nu\\), \\(\\nu\\) power parameter Tweedie distribution. See details Dunn Smyth (2005). ordinal data family = \"ordinal\": Cumulative probit model, see Hui et.al. (2016). normal distributed data family = gaussian(): Expectation \\(E[Y_{ij}] = \\mu_{ij}\\), variance \\(V(y_{ij}) = \\phi_j^2.\\)","code":""},{"path":"/reference/gllvm.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Generalized Linear Latent Variable Models ‚Äî gllvm","text":"function gives warning: 'f(x, order = 0) : value range 'lgamma‚Äù, optimizer visited area gradients become big. automatically fixed trying another step optimization process, can ignored errors occur.","code":""},{"path":"/reference/gllvm.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Generalized Linear Latent Variable Models ‚Äî gllvm","text":"Brown, . M., Warton, D. ., Andrew, N. R., Binns, M., Cassis, G., Gibb, H. (2014). fourth-corner solution - using predictive models understand species traits interact environment. Methods Ecology Evolution, 5:344-352. Dunn, P. K. Smyth, G. K. (2005).  Series evaluation tweedie exponential dispersion model densities. Statistics Computing, 15:267-280. Hui, F. K. C., Taskinen, S., Pledger, S., Foster, S. D., Warton, D. . (2015).  Model-based approaches unconstrained ordination. Methods Ecology Evolution, 6:399-411. Hui, F. K. C., Warton, D., Ormerod, J., Haapaniemi, V., Taskinen, S. (2017).  Variational approximations generalized linear latent variable models. Journal Computational Graphical Statistics. Journal Computational Graphical Statistics, 26:35-43. Kasper Kristensen, Anders Nielsen, Casper W. Berg, Hans Skaug, Bradley M. Bell (2016). TMB: Automatic Differentiation Laplace Approximation. Journal Statistical Software, 70(5), 1-21. Korhonen, P., Hui, F. K. C., Niku, J., Taskinen, S. (2021). Fast, universal estimation latent variable models using extended variational approximations. Stat Comput 33, 26 (2023). Niku, J., Warton,  D. ., Hui, F. K. C., Taskinen, S. (2017). Generalized linear latent variable models multivariate count biomass data ecology. Journal Agricultural, Biological, Environmental Statistics, 22:498-522. Niku, J., Brooks, W., Herliansyah, R., Hui, F. K. C., Taskinen, S., Warton,  D. . (2018). Efficient estimation generalized linear latent variable models. PLoS One, 14(5):1-20. Warton, D. ., Guillaume Blanchet, F., O'Hara, R. B., Ovaskainen, O., Taskinen, S., Walker, S. C. Hui, F. K. C. (2015). many variables: Joint modeling community ecology. Trends Ecology & Evolution, 30:766-779.","code":""},{"path":[]},{"path":"/reference/gllvm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Generalized Linear Latent Variable Models ‚Äî gllvm","text":"Jenni Niku <jenni.m.e.niku@jyu.fi>, Wesley Brooks, Riki Herliansyah, Francis K.C. Hui, Pekka Korhonen, Sara Taskinen, Bert van der Veen, David . Warton","code":""},{"path":"/reference/gllvm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generalized Linear Latent Variable Models ‚Äî gllvm","text":"","code":"# Extract subset of the microbial data to be used as an example data(microbialdata) X <- microbialdata$Xenv y <- microbialdata$Y[, order(colMeans(microbialdata$Y > 0),                       decreasing = TRUE)[21:40]] fit <- gllvm(y, X, formula = ~ pH + Phosp, family = poisson()) fit$logL #> [1] -4018.808 ordiplot(fit)  coefplot(fit)   # \\donttest{ # Inclusion of structured random row effect sDesign<-data.frame(Site = microbialdata$Xenv$Site) fit <- gllvm(y, X, formula = ~ pH + Phosp, family = poisson(),              studyDesign=sDesign, row.eff=~(1|Site))  ## Load a dataset from the mvabund package library(mvabund) #>  #> Attaching package: 'mvabund' #> The following object is masked from 'package:gllvm': #>  #>     coefplot data(antTraits, package = \"mvabund\") y <- as.matrix(antTraits$abund) X <- as.matrix(antTraits$env) TR <- antTraits$traits # Fit model with environmental covariates Bare.ground and Shrub.cover fit <- gllvm(y, X, formula = ~ Bare.ground + Shrub.cover,             family = poisson()) ordiplot(fit) coefplot.gllvm(fit)    ## Example 1: Fit model with two unconstrained latent variables # Using variational approximation: fitv0 <- gllvm(y, family = \"negative.binomial\", method = \"VA\") ordiplot(fitv0) plot(fitv0, mfrow = c(2,2))   summary(fitv0) #>  #> Call: #> gllvm(y = y, family = \"negative.binomial\", method = \"VA\") #>  #> Family:  negative.binomial  #>  #> AIC:  4056.17 AICc:  4106.324 BIC:  4889.878 LL:  -1865.1 df:  163  #>  #> Informed LVs:  0  #> Constrained LVs:  0  #> Unconstrained LVs:  2  #>  #> Formula:  ~ 1  #> LV formula:  ~ 0  confint(fitv0) #>                                                2.5 %      97.5 % #> sigma.lv.LV1                            -0.101054520  1.85257413 #> sigma.lv.LV2                             1.079578932  4.48472729 #> theta.LV1.1                              1.000000000  1.00000000 #> theta.LV1.2                             -3.369836924  3.61832887 #> theta.LV1.3                             -1.020676845  2.93833281 #> theta.LV1.4                             -0.677509762  1.54846484 #> theta.LV1.5                             -0.460199165  2.15216832 #> theta.LV1.6                             -2.595239166  1.44035981 #> theta.LV1.7                             -0.921964395  2.06652878 #> theta.LV1.8                             -6.308865233  1.21172423 #> theta.LV1.9                             -1.587002683  5.80962347 #> theta.LV1.10                            -0.558480393  0.96006157 #> theta.LV1.11                            -0.994894799  1.37917755 #> theta.LV1.12                            -0.699284590  2.72152491 #> theta.LV1.13                            -1.196190724  0.15991813 #> theta.LV1.14                            -1.105138881  4.00864981 #> theta.LV1.15                            -1.108958700  0.73146299 #> theta.LV1.16                            -0.653206772  1.48667904 #> theta.LV1.17                            -1.781840019  0.71364295 #> theta.LV1.18                            -0.928084351  1.19484660 #> theta.LV1.19                            -1.532606979  0.26859879 #> theta.LV1.20                            -2.287651301  0.40331968 #> theta.LV1.21                            -3.196743471  1.07149186 #> theta.LV1.22                            -0.365873699  1.80424897 #> theta.LV1.23                            -3.327191292  1.19747175 #> theta.LV1.24                            -2.421145103  0.63384256 #> theta.LV1.25                            -1.105168385  1.40435943 #> theta.LV1.26                            -1.357941543  4.40671446 #> theta.LV1.27                            -2.050006131  0.21916166 #> theta.LV1.28                            -2.560698153  0.76018611 #> theta.LV1.29                            -3.324423376  1.97129068 #> theta.LV1.30                            -4.788160345  1.56070785 #> theta.LV1.31                            -1.012929893  0.15267236 #> theta.LV1.32                            -1.691735472  1.09594412 #> theta.LV1.33                            -0.210983552  1.09985766 #> theta.LV1.34                            -1.667026576  1.01258435 #> theta.LV1.35                            -0.596124303  1.33635731 #> theta.LV1.36                            -0.985066088  0.19064344 #> theta.LV1.37                            -2.768954659  0.48519243 #> theta.LV1.38                            -1.876374696  0.67387483 #> theta.LV1.39                            -0.521953234  2.41005968 #> theta.LV1.40                            -0.374550987  1.19293425 #> theta.LV1.41                            -2.474005601  0.60926507 #> theta.LV2.1                              0.000000000  0.00000000 #> theta.LV2.2                              1.000000000  1.00000000 #> theta.LV2.3                             -0.245410669  0.60976361 #> theta.LV2.4                             -0.058090401  0.36365924 #> theta.LV2.5                             -0.652256739  0.04113870 #> theta.LV2.6                             -0.107726475  0.67653905 #> theta.LV2.7                             -0.151866782  0.42717997 #> theta.LV2.8                             -1.416507224  0.76089128 #> theta.LV2.9                             -0.322498960  1.41262112 #> theta.LV2.10                            -0.392962572 -0.01054992 #> theta.LV2.11                            -0.634745126 -0.10053729 #> theta.LV2.12                            -0.504044002  0.43415965 #> theta.LV2.13                            -0.161777296  0.20510906 #> theta.LV2.14                            -0.221878503  0.87848770 #> theta.LV2.15                            -0.471025812 -0.09694277 #> theta.LV2.16                            -0.556198882  0.01509922 #> theta.LV2.17                            -0.631661565  0.04542530 #> theta.LV2.18                            -0.484010869  0.17681714 #> theta.LV2.19                            -0.363823413  0.10587534 #> theta.LV2.20                            -0.512549961  0.19530946 #> theta.LV2.21                            -0.932254289  0.21005739 #> theta.LV2.22                            -0.116267576  0.37719262 #> theta.LV2.23                            -1.113872135 -0.04380816 #> theta.LV2.24                            -0.696595194  0.13935504 #> theta.LV2.25                            -0.721465153  0.18277040 #> theta.LV2.26                            -0.423107729  0.70806454 #> theta.LV2.27                            -0.372919415  0.22470612 #> theta.LV2.28                            -0.756153818  0.04814946 #> theta.LV2.29                            -1.545063896  0.10741661 #> theta.LV2.30                            -0.307876348  0.93128757 #> theta.LV2.31                            -0.211090731  0.07106664 #> theta.LV2.32                            -0.014392424  0.58052603 #> theta.LV2.33                            -0.254229514  0.10720520 #> theta.LV2.34                            -0.289241622  0.68859090 #> theta.LV2.35                            -0.263582652  0.21016971 #> theta.LV2.36                            -0.241946551  0.03954228 #> theta.LV2.37                            -0.621462849  0.17289429 #> theta.LV2.38                            -0.300903459  0.46399115 #> theta.LV2.39                            -0.299675048  0.35746054 #> Intercept.Amblyopone.australis          -0.362754556  0.04893208 #> Intercept.Aphaenogaster.longiceps       -0.709492423  0.06384867 #> Intercept.Camponotus.cinereus.amperei   -1.855330522 -0.03201067 #> Intercept.Camponotus.claripes           -6.253146607 -0.31989909 #> Intercept.Camponotus.consobrinus        -3.698764645 -0.83566248 #> Intercept.Camponotus.nigriceps          -0.036845879  1.06008055 #> Intercept.Camponotus.nigroaeneus         0.642091321  1.79310593 #> Intercept.Cardiocondyla.nuda.atalanta   -1.679590984  0.47959541 #> Intercept.Crematogaster.sp..A           -1.317854139  0.23396693 #> Intercept.Heteroponera.sp..A            -5.327668272 -0.01451641 #> Intercept.Iridomyrmex.bicknelli         -4.746412379  0.10285262 #> Intercept.Iridomyrmex.dromus             0.802271623  1.67654445 #> Intercept.Iridomyrmex.mjobergi           0.772758491  1.80434274 #> Intercept.Iridomyrmex.purpureus         -1.859361368  0.26212098 #> Intercept.Iridomyrmex.rufoniger          0.981774616  1.68335474 #> Intercept.Iridomyrmex.suchieri          -1.288003487  1.11273980 #> Intercept.Iridomyrmex.suchieroides       2.022082601  2.70289699 #> Intercept.Melophorus.sp..E              -0.135076464  1.04253411 #> Intercept.Melophorus.sp..F              -1.135392642  0.24781672 #> Intercept.Melophorus.sp..H              -2.009053745 -0.37473742 #> Intercept.Meranoplus.sp..A               0.082735499  0.98236440 #> Intercept.Monomorium.leae               -1.272862023  0.16011200 #> Intercept.Monomorium.rothsteini         -1.453993812  0.64859767 #> Intercept.Monomorium.sydneyense          0.841382811  1.84727288 #> Intercept.Myrmecia.pilosula.complex     -0.730680844  1.20941960 #> Intercept.Notoncus.capitatus            -1.320448289  0.40725609 #> Intercept.Notoncus.ectatommoides        -2.053404168 -0.20207715 #> Intercept.Nylanderia.sp..A              -2.473060704  0.53476753 #> Intercept.Ochetellus.glaber              0.239164567  1.22238755 #> Intercept.Paraparatrechina.sp..B         0.030408492  1.47001253 #> Intercept.Pheidole.sp..A                -3.864443141 -0.21642213 #> Intercept.Pheidole.sp..B                -3.311803558  0.27488106 #> Intercept.Pheidole.sp..E                 2.092502680  2.54373402 #> Intercept.Pheidole.sp..J                -2.030383570 -0.15338453 #> Intercept.Polyrhachis.sp..A              1.226637708  1.97956238 #> Intercept.Rhytidoponera.metallica.sp..A -2.978459803 -0.56718703 #> Intercept.Rhytidoponera.sp..B           -1.984440328 -0.52864828 #> Intercept.Solenopsis.sp..A               1.772740348  2.27348555 #> Intercept.Stigmacros.sp..A              -0.397038273  1.09413892 #> Intercept.Tapinoma.sp..A                -3.426967711 -0.97579204 #> Intercept.Tetramorium.sp..A             -1.091880540  0.51275727 #> inv.phi.Amblyopone.australis             0.282620501  1.23747031 #> inv.phi.Aphaenogaster.longiceps         -0.631528704  0.77866261 #> inv.phi.Camponotus.cinereus.amperei     -0.270487810  1.34890505 #> inv.phi.Camponotus.claripes             -0.211424882  1.00850776 #> inv.phi.Camponotus.consobrinus          -1.082732652  2.58821337 #> inv.phi.Camponotus.nigriceps             0.057469939  1.51923385 #> inv.phi.Camponotus.nigroaeneus           0.053228671  3.83235955 #> inv.phi.Cardiocondyla.nuda.atalanta     -0.061328003  0.51823372 #> inv.phi.Crematogaster.sp..A             -0.106602377  1.07141357 #> inv.phi.Heteroponera.sp..A              -0.070044146  0.42295717 #> inv.phi.Iridomyrmex.bicknelli           -0.079418827  0.52848291 #> inv.phi.Iridomyrmex.dromus               0.225181438  2.46845474 #> inv.phi.Iridomyrmex.mjobergi            -0.118035741  5.03073663 #> inv.phi.Iridomyrmex.purpureus           -0.066779230  0.56608215 #> inv.phi.Iridomyrmex.rufoniger           -0.169734753  4.83704229 #> inv.phi.Iridomyrmex.suchieri             0.009085673  0.42275887 #> inv.phi.Iridomyrmex.suchieroides        -0.083718394 19.14377216 #> inv.phi.Melophorus.sp..E                -0.154535948  2.35711091 #> inv.phi.Melophorus.sp..F                -0.884541981  4.74688233 #> inv.phi.Melophorus.sp..H                -0.832200307  2.32031093 #> inv.phi.Meranoplus.sp..A                -0.512532219  5.30099140 #> inv.phi.Monomorium.leae                 -0.424201849  3.55560989 #> inv.phi.Monomorium.rothsteini           -0.018459814  0.63757293 #> inv.phi.Monomorium.sydneyense            0.248471646  1.69159906 #> inv.phi.Myrmecia.pilosula.complex        0.014780948  2.74702080 #> inv.phi.Notoncus.capitatus              -0.099518667  1.27882059 #> inv.phi.Notoncus.ectatommoides          -0.365816423  1.37942419 #> inv.phi.Nylanderia.sp..A                -0.041815620  0.38604661 #> inv.phi.Ochetellus.glaber               -0.084158478  4.06880429 #> inv.phi.Paraparatrechina.sp..B           0.107368740  1.41088340 #> inv.phi.Pheidole.sp..A                  -0.188703853  1.06111908 #> inv.phi.Pheidole.sp..B                  -0.063973551  0.30179019 #> inv.phi.Pheidole.sp..E                  -1.415632292 20.55783945 #> inv.phi.Pheidole.sp..J                  -0.348520249  1.33690820 #> inv.phi.Polyrhachis.sp..A                0.320733128  2.69246122 #> inv.phi.Rhytidoponera.metallica.sp..A   -0.276747974  0.79866464 #> inv.phi.Rhytidoponera.sp..B             -7.676106111 15.06596340 #> inv.phi.Solenopsis.sp..A                -0.858343873 15.09378595 #> inv.phi.Stigmacros.sp..A                 0.003907447  1.35251755 #> inv.phi.Tapinoma.sp..A                  -1.919597041  4.17068867 #> inv.phi.Tetramorium.sp..A               -0.028744157  1.05076124 #> inv.phi.Tapinoma.sp..A                   0.106513400  2.27872438 #> inv.phi.Tetramorium.sp..A               -0.300594294  3.63546926  ## Example 1a: Fit concurrent ordination model with two latent variables and with  # quadratic response model # We scale and centre the  predictors to improve convergence fity1 <- gllvm(y, X = scale(X), family = \"negative.binomial\",                num.lv.c=2, method=\"VA\") ordiplot(fity1, biplot = TRUE)  #'## Example 1b: Fit constrained ordination model with two latent variables and with  # random canonical coefficients fity2 <- gllvm(y, X = scale(X), family = \"negative.binomial\",                num.RR=2, randomB=\"LV\", method=\"VA\")                # Using Laplace approximation: (this line may take about 30 sec to run) fitl0 <- gllvm(y, family = \"negative.binomial\", method = \"LA\") ordiplot(fitl0)  # Poisson family: fit.p <- gllvm(y, family = poisson(), method = \"LA\") ordiplot(fit.p)  # Use poisson model as a starting parameters for ZIP-model, this line  # may take few minutes to run fit.z <- gllvm(y, family = \"ZIP\", method = \"LA\",                control.start = list(start.fit = fit.p)) ordiplot(fit.z)   ## Example 2: gllvm with environmental variables # Fit model with two latent variables and all environmental covariates, fitvX <- gllvm(formula = y ~ X, family = \"negative.binomial\") ordiplot(fitvX, biplot = TRUE) coefplot.gllvm(fitvX)   # Fit model with environmental covariates Bare.ground and Shrub.cover fitvX2 <- gllvm(y, X, formula = ~ Bare.ground + Shrub.cover,  family = \"negative.binomial\") ordiplot(fitvX2) coefplot(fitvX2) #> Error in UseMethod(\"coefplot\"): no applicable method for 'coefplot' applied to an object of class \"gllvm\" # Use 5 initial runs and pick the best one fitvX_5 <- gllvm(y, X, formula = ~ Bare.ground + Shrub.cover,  family = \"negative.binomial\", control.start=list(n.init = 5, jitter.var = 0.1)) ordiplot(fitvX_5) coefplot.gllvm(fitvX_5)    ## Example 3: Data in long format # Reshape data to long format: datalong <- reshape(data.frame(cbind(y,X)), direction = \"long\",                    varying = colnames(y), v.names = \"y\") head(datalong) #>     Bare.ground Canopy.cover Shrub.cover Volume.lying.CWD Feral.mammal.dung #> 1.1        9.00          3.5        0.50       0.03253833              0.20 #> 2.1        6.00          0.0        0.00       0.01202944              0.65 #> 3.1        9.25          0.0        8.10       0.00804195              0.00 #> 4.1       23.25          0.0        0.25       0.00000000              0.20 #> 5.1        8.75          0.0        3.35       0.00993944              0.35 #> 6.1       32.25          0.0        0.00       0.03142221              1.00 #>     time y id #> 1.1    1 0  1 #> 2.1    1 0  2 #> 3.1    1 0  3 #> 4.1    1 4  4 #> 5.1    1 2  5 #> 6.1    1 0  6 fitvLong <- gllvm(data = datalong, formula = y ~ Bare.ground + Shrub.cover,                family = \"negative.binomial\")  ## Example 4: Fourth corner model # Fit fourth corner model with two latent variables fitF1 <- gllvm(y = y, X = X, TR = TR, family = \"negative.binomial\") coefplot.gllvm(fitF1)  # Fourth corner can be plotted also with next lines #fourth = fitF1$fourth.corner #library(lattice) #a = max( abs(fourth) ) #colort = colorRampPalette(c(\"blue\",\"white\",\"red\")) #plot.4th = levelplot(t(as.matrix(fourth)), xlab = \"Environmental Variables\", #              ylab = \"Species traits\", col.regions = colort(100), #              at = seq( -a, a, length = 100), scales = list( x = list(rot = 45))) #print(plot.4th)  # Specify model using formula fitF2 <- gllvm(y = y, X = X, TR = TR,  formula = ~ Bare.ground + Canopy.cover * (Pilosity + Webers.length),  family = \"negative.binomial\") ordiplot(fitF2)  coefplot.gllvm(fitF2)   ## Include species specific random slopes to the fourth corner model fitF3 <- gllvm(y = y, X = X, TR = TR,  formula = ~ Bare.ground + Canopy.cover * (Pilosity + Webers.length),  family = \"negative.binomial\", randomX = ~ Bare.ground + Canopy.cover,   control.start = list(n.init = 3)) ordiplot(fitF3)  coefplot.gllvm(fitF3)    ## Example 5: Fit Tweedie model # Load coral data data(tikus) ycoral <- tikus$abund # Let's consider only years 1981 and 1983 ycoral <- ycoral[((tikus$x$time == 81) + (tikus$x$time == 83)) > 0, ] # Exclude species which have observed at less than 4 sites ycoral <- ycoral[-17, (colSums(ycoral > 0) > 4)] # Fit Tweedie model for coral data (this line may take few minutes to run) fit.twe <- gllvm(y = ycoral, family = \"tweedie\", method = \"LA\") ordiplot(fit.twe)   ## Example 6: Random row effects fitRand <- gllvm(y, family = \"negative.binomial\", row.eff = \"random\") ordiplot(fitRand, biplot = TRUE)  # }"},{"path":"/reference/kelpforest.html","id":null,"dir":"Reference","previous_headings":"","what":"Kelp Forest community Dynamics: Cover of sessile organisms, Uniform Point Contact ‚Äî kelpforest","title":"Kelp Forest community Dynamics: Cover of sessile organisms, Uniform Point Contact ‚Äî kelpforest","text":"data describe cover sessile invertebrates, understory macroalgae, bottom substrate types determined uniform point contact method. presence 150 taxa sessile invertebrates macroalgae recorded 80 uniformly spaced points along permanent 40m x 2m transects. Multiple species can recorded given point. Percent cover given species transect can estimated UPC observations fraction total points species present x 100. total percent cover species combined using method can exceed 100%; however, percent cover single species exceed 100%. specific version data includes 61 species macroalgae, 69 species sessile invertebrates, two species plants.","code":""},{"path":"/reference/kelpforest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Kelp Forest community Dynamics: Cover of sessile organisms, Uniform Point Contact ‚Äî kelpforest","text":"","code":"data(fungi)"},{"path":"/reference/kelpforest.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Kelp Forest community Dynamics: Cover of sessile organisms, Uniform Point Contact ‚Äî kelpforest","text":"Y data frame percent cover records 132 sessile invertebrates understory macroalgae measured 836 permanent transects. X data frame study design variables predictors. SPinfo data frame species information including species names, group taxonomy.","code":""},{"path":"/reference/kelpforest.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Kelp Forest community Dynamics: Cover of sessile organisms, Uniform Point Contact ‚Äî kelpforest","text":"data part SBC LTERs kelp forest monitoring program, began 2000 designed track long-term patterns species abundance diversity reef-associated organisms Santa Barbara Channel, California, USA. sampling locations dataset include nine reef sites along mainland coast Santa Barbara Channel two sites north side Santa Cruz Island. sites reflect several oceanographic regimes channel vary distance sources terrestrial runoff. Data collection began 2000 dataset updated annually. time period data collection varied among 11 kelp forest sites. Sampling BULL, CARP, NAPL began 2000, sampling 6 mainland sites (AHND, AQUE, IVEE, GOLB, ABUR, MOHK) began 2001 (transects 3, 5, 6, 7, 8 IVEE added 2011). Data collection two Santa Cruz Island sites (SCTW SCDI) began 2004. Detailed description data available reference website  https://sbclter.msi.ucsb.edu/data/catalog/package/?package=knb-lter-sbc.15","code":""},{"path":"/reference/kelpforest.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Kelp Forest community Dynamics: Cover of sessile organisms, Uniform Point Contact ‚Äî kelpforest","text":"Reed, D, R. Miller. 2023. SBC LTER: Reef: Kelp Forest Community Dynamics: Cover sessile organisms, Uniform Point Contact ver 33. Environmental Data Initiative. https://doi.org/10.6073/pasta/0af1a5b0d9dde5b4e5915c0012ccf99c. (Accessed: 2023-12-01).","code":""},{"path":"/reference/kelpforest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Kelp Forest community Dynamics: Cover of sessile organisms, Uniform Point Contact ‚Äî kelpforest","text":"","code":"if (FALSE) { # \\dontrun{ data(kelpforest) Y <- kelpforest$Y X <- kelpforest$X SPinfo <- kelpforest$SPinfo } # }"},{"path":"/reference/logLik.gllvm.html","id":null,"dir":"Reference","previous_headings":"","what":"Log-likelihood of gllvm ‚Äî logLik.gllvm","title":"Log-likelihood of gllvm ‚Äî logLik.gllvm","text":"Extracts Log-likelihood 'gllvm' objects.","code":""},{"path":"/reference/logLik.gllvm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Log-likelihood of gllvm ‚Äî logLik.gllvm","text":"","code":"# S3 method for class 'gllvm' logLik(object, ...)"},{"path":"/reference/logLik.gllvm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Log-likelihood of gllvm ‚Äî logLik.gllvm","text":"object object class 'gllvm'. ... used.","code":""},{"path":"/reference/logLik.gllvm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Log-likelihood of gllvm ‚Äî logLik.gllvm","text":"David . Warton, Jenni Niku","code":""},{"path":"/reference/logLik.gllvm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Log-likelihood of gllvm ‚Äî logLik.gllvm","text":"","code":"if (FALSE) { # \\dontrun{ ## Load a dataset from the mvabund package data(antTraits, package = \"mvabund\") y <- as.matrix(antTraits$abund) # Fit gllvm model fit <- gllvm(y = y, family = poisson()) # log-Likelihood: logLik(fit) } # }"},{"path":"/reference/ordiplot.gllvm.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot latent variables from gllvm model ‚Äî ordiplot.gllvm","title":"Plot latent variables from gllvm model ‚Äî ordiplot.gllvm","text":"Plots latent variables corresponding coefficients (biplot).","code":""},{"path":"/reference/ordiplot.gllvm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot latent variables from gllvm model ‚Äî ordiplot.gllvm","text":"","code":"# S3 method for class 'gllvm' ordiplot(   object,   biplot = FALSE,   ind.spp = NULL,   alpha = 0.5,   main = NULL,   which.lvs = c(1, 2),   predict.region = FALSE,   level = 0.95,   jitter = FALSE,   jitter.amount = 0.2,   s.colors = 1,   s.cex = 1.2,   symbols = FALSE,   cex.spp = 0.7,   spp.colors = \"blue\",   arrow.scale = 0.8,   arrow.spp.scale = 0.8,   arrow.ci = TRUE,   arrow.lty = \"solid\",   fac.center = FALSE,   spp.arrows = NULL,   spp.arrows.lty = \"dashed\",   cex.env = 0.7,   lab.dist = 0.1,   lwd.ellips = 0.5,   col.ellips = 4,   lty.ellips = 1,   type = NULL,   rotate = TRUE,   ... )"},{"path":"/reference/ordiplot.gllvm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot latent variables from gllvm model ‚Äî ordiplot.gllvm","text":"object object class 'gllvm'. biplot TRUE latent variables coefficients plotted, FALSE latent variables. ind.spp number response variables (usually, species) include biplot. default none, biplot = TRUE. alpha numeric scalar 0 1 used control relative scaling latent variables coefficients, constructing biplot. main main title. .lvs indices two latent variables plotted number latent variables 2. vector length two. Defaults c(1,2). predict.region TRUE \"sites\" prediction regions predicted latent variables plotted, defaults FALSE. EXTENSION DEVELOPMENT: \"species\" uncertainty estimate regions estimated latent variable loadings plotted. Works biplot = TRUE. level level prediction regions. jitter TRUE, jittering applied points. jitter.amount numeric, positive value indicating amount jittering point, defaults 0.2 (jitter range). s.colors colors sites s.cex size site labels symbols logical, TRUE sites plotted using symbols, FALSE (default) site numbers used cex.spp size species labels biplot spp.colors colors sites, defaults \"blue\" arrow.scale positive value, scale arrows arrow.spp.scale positive value, scale arrows species arrow.ci represent statistical uncertainty arrows constrained concurrent ordination using confidence prediction interval? Defaults TRUE arrow.lty linetype arrows constrained fac.center logical. TRUE place labels binary variables estimated location. spp.arrows plot species scores arrows outside range plot? Defaults FALSE linear response models TRUE quadratic response models. spp.arrows.lty linetype species arrows cex.env size labels arrows constrained ordination lab.dist distance label arrow heads. Value 0 1 lwd.ellips line width prediction ellipses. See graphical parameter lwd. col.ellips colors prediction ellipses. lty.ellips line type prediction ellipses. See graphical parameter lty. type type ordination plot construct. Options \"residual\", \"conditional\", \"marginal\". Defaults \"residual\" GLLVMs unconstrained latent variables \"conditional\" otherwise. rotate logical, TRUE (default) latent variables rotated principal direction using singular value decomposition ... additional graphical arguments.","code":""},{"path":"/reference/ordiplot.gllvm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot latent variables from gllvm model ‚Äî ordiplot.gllvm","text":"Function constructs scatter plot two latent variables, .e. ordination plot. Latent variables re-rotated principal direction using singular value decomposition, first plotted latent variable first latent variable model. one latent variable fitted model, latent variables plotted corresponding row indices. latent variables labeled using row index response matrix y. Coefficients related latent variables plotted figure latent variables biplot = TRUE. labeled using column names y. number latent variable coefficients plotted can controlled ind.spp. argument alpha used control relative scaling latent variables coefficients. alpha = 0.5, latent variables coefficients scale. details constructing biplot, see Gabriel (1971). quadratic response model, species optima plotted. species scores outside range predicted site scores directly plotted, main direction indicated arrows instead. ensures plot remains reasonable scale. Effects environmental variables constrained ordination indicated arrows. arrows exceeds range plot, arrows scaled 80 relative contribution predictors maintained. standard errors available provided model, slopes environmental variables 95 slightly less intensely coloured. constrained ordination, conditional plot includes fixed- random-effects optimally represent species co-occurrence patterns, corresponding \"conditional\" site scores getLV.gllvm. Marginal corresponds ordination plot excludes residual patterns (.e. excluding random-effect), available num.lv.c>0 num.RR>0. conditional plot requires num.lv.c>0. \"residual\" type corresponds ordination diagram residual patterns. See getLV.gllvm details.","code":""},{"path":"/reference/ordiplot.gllvm.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Plot latent variables from gllvm model ‚Äî ordiplot.gllvm","text":"- error occurred using ordiplot(), try full name function ordiplot.gllvm() functions named 'ordiplot' might found packages well.","code":""},{"path":"/reference/ordiplot.gllvm.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Plot latent variables from gllvm model ‚Äî ordiplot.gllvm","text":"Gabriel, K. R. (1971). biplot graphic display matrices application principal component analysis. Biometrika, 58, 453-467.","code":""},{"path":[]},{"path":"/reference/ordiplot.gllvm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot latent variables from gllvm model ‚Äî ordiplot.gllvm","text":"Jenni Niku <jenni.m.e.niku@jyu.fi>, Francis K.C. Hui, Bert van der Veen","code":""},{"path":"/reference/ordiplot.gllvm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot latent variables from gllvm model ‚Äî ordiplot.gllvm","text":"","code":"#'# Extract subset of the microbial data to be used as an example data(microbialdata) y <- microbialdata$Y[, order(colMeans(microbialdata$Y > 0),                       decreasing = TRUE)[21:40]] fit <- gllvm(y, family = poisson()) fit$logL #> [1] -4242.668 ordiplot(fit, predict.region = TRUE)  if (FALSE) { # \\dontrun{ #'## Load a dataset from the mvabund package data(antTraits, package = \"mvabund\") y <- as.matrix(antTraits$abund) fit <- gllvm(y, family = poisson()) # Ordination plot: ordiplot(fit) # Biplot with 10 species ordiplot(fit, biplot = TRUE, ind.spp = 10) } # }"},{"path":"/reference/plot.gllvm.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Diagnostics for an gllvm Object ‚Äî plot.gllvm","title":"Plot Diagnostics for an gllvm Object ‚Äî plot.gllvm","text":"Five plots (selectable ) currently available: plot residuals linear predictors fitted values, Normal Q-Q plot residuals simulated point-wise 95% confidence interval envelope, residuals row index column index scale location plot.","code":""},{"path":"/reference/plot.gllvm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Diagnostics for an gllvm Object ‚Äî plot.gllvm","text":"","code":"# S3 method for class 'gllvm' plot(   x,   which = 1:5,   caption = c(\"Residuals vs linear predictors\", \"Normal Q-Q\", \"Residuals vs row\",     \"Residuals vs column\", \"Scale-Location\"),   var.colors = NULL,   add.smooth = TRUE,   envelopes = TRUE,   reps = 150,   envelope.col = c(\"blue\", \"lightblue\"),   n.plot = NULL,   ... )"},{"path":"/reference/plot.gllvm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Diagnostics for an gllvm Object ‚Äî plot.gllvm","text":"x object class 'gllvm'. subset plots required, specify subset numbers 1:5, see caption . caption captions appear plots. var.colors colors responses, vector length number response variables 1. Defaults NULL, different responses different colors. add.smooth logical indicating smoother added. envelopes logical, indicating simulated point-wise confidence interval envelope added Q-Q plot, defaults TRUE reps number replications simulating confidence envelopes normal Q-Q plot envelope.col colors envelopes, vector length two n.plot number species (response variables) plotted. Defaults NULL response variables plotted. Might useful data high dimensional. ... additional graphical arguments.","code":""},{"path":"/reference/plot.gllvm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot Diagnostics for an gllvm Object ‚Äî plot.gllvm","text":"plot.gllvm used model diagnostics. Dunn-Smyth residuals (randomized quantile residuals) (Dunn Smyth, 1996) used plots. Colors indicate different species.","code":""},{"path":"/reference/plot.gllvm.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Plot Diagnostics for an gllvm Object ‚Äî plot.gllvm","text":"Dunn, P. K., Smyth, G. K. (1996). Randomized quantile residuals. Journal Computational Graphical Statistics, 5, 236-244. Hui, F. K. C., Taskinen, S., Pledger, S., Foster, S. D., Warton, D. . (2015).  Model-based approaches unconstrained ordination. Methods Ecology Evolution, 6:399-411.","code":""},{"path":[]},{"path":"/reference/plot.gllvm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot Diagnostics for an gllvm Object ‚Äî plot.gllvm","text":"Jenni Niku <jenni.m.e.niku@jyu.fi>","code":""},{"path":[]},{"path":"/reference/predict.gllvm.html","id":null,"dir":"Reference","previous_headings":"","what":"Predict Method for gllvm Fits ‚Äî predict.gllvm","title":"Predict Method for gllvm Fits ‚Äî predict.gllvm","text":"Obtains predictions fitted generalized linear latent variable model object.","code":""},{"path":"/reference/predict.gllvm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predict Method for gllvm Fits ‚Äî predict.gllvm","text":"","code":"# S3 method for class 'gllvm' predict(   object,   newX = NULL,   newTR = NULL,   newLV = NULL,   type = \"link\",   level = 1,   offset = TRUE,   ... )"},{"path":"/reference/predict.gllvm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predict Method for gllvm Fits ‚Äî predict.gllvm","text":"object object class 'gllvm'. newX new data frame environmental variables. omitted, original matrix environmental variables used. newTR new data frame traits response taxon. omitted, original matrix traits used. newLV new matrix latent variables.  omitted, original matrix latent variables used. Note number rows/sites must newX (X covariates included model). type type prediction required. default (\"link\") scale linear predictors; alternative \"response\" scale response variable. , predictions binomial model predicted probabilities. case ordinal data, type = \"response\" gives predicted probabilities level ordinal variable. level specification predict. Level one (level = 1) attempts use predicted site scores variational approximations laplace approximation given site scores newLV. Level 0 sets latent variable zero. Defaults 1. offset specification whether offset values included predictions case model, defaults TRUE offset values used fit model included predictions. Alternatives matrix/vector (number rows must match newX) new offset values FALSE, offsets ignored. ... used.","code":""},{"path":"/reference/predict.gllvm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predict Method for gllvm Fits ‚Äî predict.gllvm","text":"matrix containing requested predictor types.","code":""},{"path":"/reference/predict.gllvm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Predict Method for gllvm Fits ‚Äî predict.gllvm","text":"newX, newTR newLV omitted predictions based data used fitting model. Notice newTR need match number species original data. Instead, new sites can specified newX. predictors newX (newTR) given, newLV , latent variables used predictions.","code":""},{"path":"/reference/predict.gllvm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Predict Method for gllvm Fits ‚Äî predict.gllvm","text":"Jenni Niku <jenni.m.e.niku@jyu.fi>,  David Warton","code":""},{"path":"/reference/predict.gllvm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Predict Method for gllvm Fits ‚Äî predict.gllvm","text":"","code":"# \\donttest{ # Load a dataset from the mvabund package data(antTraits, package = \"mvabund\") y <- as.matrix(antTraits$abund) X <- scale(antTraits$env[, 1:3]) # Fit gllvm model fit <- gllvm(y = y, X, family = poisson()) # fitted values predfit <- predict(fit, type = \"response\")  # linear predictors predlin <- predict(fit) # Predict new sites: # Generate matrix of environmental variables for 10 new sites xnew <- cbind(rnorm(10), rnorm(10), rnorm(10)) colnames(xnew) <- colnames(X) predfit <- predict(fit, newX = xnew, type = \"response\", level = 0) #> Error in terms.formula(object, data = data): argument is not a valid model  TR <- (antTraits$tr[, 1:3]) fitt <- gllvm(y = y, X, TR, family = poisson()) # linear predictors predlin <- predict(fitt) # Predict new sites: # Generate matrix of environmental variables for 10 new sites xnew <- cbind(rnorm(10), rnorm(10), rnorm(10)) colnames(xnew) <- colnames(X) # Generate matrix of traits for species trnew <- data.frame(Femur.length = rnorm(41), No.spines = rnorm(41),  Pilosity = factor(sample(0:3, 41, replace = TRUE))) predfit <- predict(fitt, newX = xnew, newTR = trnew, type = \"response\", level = 0) # }"},{"path":"/reference/predictLVs.gllvm.html","id":null,"dir":"Reference","previous_headings":"","what":"Predict latent variables for gllvm Fits ‚Äî predictLVs.gllvm","title":"Predict latent variables for gllvm Fits ‚Äî predictLVs.gllvm","text":"Obtains predictions latent variables fitted generalized linear latent variable model object. Currently works variational approximation method.","code":""},{"path":"/reference/predictLVs.gllvm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predict latent variables for gllvm Fits ‚Äî predictLVs.gllvm","text":"","code":"# S3 method for class 'gllvm' predictLVs(object, newX = NULL, newY = object$y, ...)"},{"path":"/reference/predictLVs.gllvm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predict latent variables for gllvm Fits ‚Äî predictLVs.gllvm","text":"object object class 'gllvm'. newX new data frame environmental variables. omitted, original matrix environmental variables used. newY new response data. Defaults dataset used original model fit. ... used.","code":""},{"path":"/reference/predictLVs.gllvm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predict latent variables for gllvm Fits ‚Äî predictLVs.gllvm","text":"matrix containing requested predictor types.","code":""},{"path":"/reference/predictLVs.gllvm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Predict latent variables for gllvm Fits ‚Äî predictLVs.gllvm","text":"Obtains predictions latent variables fitted generalized linear latent variable model object.","code":""},{"path":"/reference/predictLVs.gllvm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Predict latent variables for gllvm Fits ‚Äî predictLVs.gllvm","text":"David Warton, Jenni Niku <jenni.m.e.niku@jyu.fi>","code":""},{"path":"/reference/predictLVs.gllvm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Predict latent variables for gllvm Fits ‚Äî predictLVs.gllvm","text":"","code":"# \\donttest{ # Load a dataset from the mvabund package data(antTraits, package = \"mvabund\") y <- as.matrix(antTraits$abund) X <- scale(antTraits$env[, 1:3]) # Fit gllvm model fit <- gllvm(y = y, X, family = poisson()) # fitted values predLVs <- predictLVs.gllvm(fit) #> Error in eval(object$call): object 'X' not found # }"},{"path":"/reference/randomCoefplot.gllvm.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot random slope coefficients ‚Äî randomCoefplot.gllvm","title":"Plot random slope coefficients ‚Äî randomCoefplot.gllvm","text":"Plots random slopes prediction intervals.","code":""},{"path":"/reference/randomCoefplot.gllvm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot random slope coefficients ‚Äî randomCoefplot.gllvm","text":"","code":"# S3 method for class 'gllvm' randomCoefplot(   object,   y.label = TRUE,   which.Xcoef = NULL,   cex.ylab = 0.5,   mfrow = NULL,   mar = c(4, 6, 2, 1),   xlim.list = NULL,   order = FALSE,   ... )"},{"path":"/reference/randomCoefplot.gllvm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot random slope coefficients ‚Äî randomCoefplot.gllvm","text":"object object class 'gllvm'. y.label logical, TRUE (default) colnames y respect coefficients added plot. .Xcoef fector indicating covariate coefficients plotted. Can vector covariate names numbers. Default NULL covariate coefficients plotted. cex.ylab magnification used axis annotation relative current setting cex. mfrow mfrow par. NULL (default) determined automatically. mar vector length 4, defines margin sizes: c(bottom, left, top, right). Defaults c(4,5,2,1). xlim.list list vectors length two define intervals x axis covariate plot. Defaults NULL interval defined range point estimates confidence intervals order logical, TRUE (default), coefficients sorted according point estimates ... additional graphical arguments.","code":""},{"path":"/reference/randomCoefplot.gllvm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot random slope coefficients ‚Äî randomCoefplot.gllvm","text":"Jenni Niku <jenni.m.e.niku@jyu.fi>, Francis K.C. Hui, Bert van der Veen, Sara Taskinen,","code":""},{"path":"/reference/randomCoefplot.gllvm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot random slope coefficients ‚Äî randomCoefplot.gllvm","text":"","code":"if (FALSE) { # \\dontrun{ ## Load a dataset from the mvabund package data(antTraits, package = \"mvabund\") y <- as.matrix(antTraits$abund) X <- as.matrix(antTraits$env) TR <- antTraits$traits # Fit model with random slopes fitF <- gllvm(y = y, X = X, TR = TR,  formula = ~ Bare.ground + Bare.ground : Webers.length,  family = poisson(), randomX = ~ Bare.ground) randomCoefplot(fitF) } # }"},{"path":"/reference/residuals.gllvm.html","id":null,"dir":"Reference","previous_headings":"","what":"Dunn-Smyth residuals for gllvm model ‚Äî residuals.gllvm","title":"Dunn-Smyth residuals for gllvm model ‚Äî residuals.gllvm","text":"Calculates Dunn-Smyth residuals gllvm model.","code":""},{"path":"/reference/residuals.gllvm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dunn-Smyth residuals for gllvm model ‚Äî residuals.gllvm","text":"","code":"# S3 method for class 'gllvm' residuals(object, ...)"},{"path":"/reference/residuals.gllvm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dunn-Smyth residuals for gllvm model ‚Äî residuals.gllvm","text":"object object class 'gllvm'. ... used.","code":""},{"path":"/reference/residuals.gllvm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dunn-Smyth residuals for gllvm model ‚Äî residuals.gllvm","text":"residuals matrix residuals linpred matrix linear predictors","code":""},{"path":"/reference/residuals.gllvm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Dunn-Smyth residuals for gllvm model ‚Äî residuals.gllvm","text":"Computes Dunn-Smyth residuals (randomized quantile residuals, Dunn Smyth, 1996) gllvm model. observation \\(Y_{ij}\\) Dunn-Smyth residuals defined $$r_{ij}=\\Phi^{-1}(u_{ij}F_{ij}(y_{ij})  + (1-u_{ij})F_{ij}^-(y_{ij})),$$ \\(\\Phi(.)\\) \\(F_{ij}(.)\\) cumulative probability functions standard normal distribution, \\(F_{ij}^-(y))\\) limit \\(F_{ij}(y)\\) approached negative side, \\(u_{ij}\\) generated random standard uniform distribution.","code":""},{"path":"/reference/residuals.gllvm.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Dunn-Smyth residuals for gllvm model ‚Äî residuals.gllvm","text":"Dunn, P. K., Smyth, G. K. (1996). Randomized quantile residuals. Journal Computational Graphical Statistics, 5, 236-244. Hui, F. K. C., Taskinen, S., Pledger, S., Foster, S. D., Warton, D. . (2015).  Model-based approaches unconstrained ordination. Methods Ecology Evolution, 6:399-411.","code":""},{"path":"/reference/residuals.gllvm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Dunn-Smyth residuals for gllvm model ‚Äî residuals.gllvm","text":"Jenni Niku <jenni.m.e.niku@jyu.fi>","code":""},{"path":"/reference/residuals.gllvm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dunn-Smyth residuals for gllvm model ‚Äî residuals.gllvm","text":"","code":"if (FALSE) { # \\dontrun{ # Load a dataset from the mvabund package data(antTraits, package = \"mvabund\") y <- as.matrix(antTraits$abund) # Fit gllvm model fit <- gllvm(y = y, family = poisson()) # residuals res <- residuals(fit) } # }"},{"path":"/reference/se.gllvm.html","id":null,"dir":"Reference","previous_headings":"","what":"Standard errors for gllvm model ‚Äî se.gllvm","title":"Standard errors for gllvm model ‚Äî se.gllvm","text":"Calculates Hessian standard errors gllvm model.","code":""},{"path":"/reference/se.gllvm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Standard errors for gllvm model ‚Äî se.gllvm","text":"","code":"# S3 method for class 'gllvm' se(object, ...)"},{"path":"/reference/se.gllvm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Standard errors for gllvm model ‚Äî se.gllvm","text":"object object class 'gllvm'. ... used.","code":""},{"path":"/reference/se.gllvm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Standard errors for gllvm model ‚Äî se.gllvm","text":"sd list standard errors parameters Hess list including Hessian matrix approximative covariance matrix parameters","code":""},{"path":"/reference/se.gllvm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Standard errors for gllvm model ‚Äî se.gllvm","text":"Computes Hessian standard errors gllvm model.","code":""},{"path":"/reference/se.gllvm.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Standard errors for gllvm model ‚Äî se.gllvm","text":"Dunn, P. K., Smyth, G. K. (1996). Randomized quantile residuals. Journal Computational Graphical Statistics, 5, 236-244. Hui, F. K. C., Taskinen, S., Pledger, S., Foster, S. D., Warton, D. . (2015).  Model-based approaches unconstrained ordination. Methods Ecology Evolution, 6:399-411.","code":""},{"path":"/reference/se.gllvm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Standard errors for gllvm model ‚Äî se.gllvm","text":"Jenni Niku <jenni.m.e.niku@jyu.fi>","code":""},{"path":"/reference/se.gllvm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Standard errors for gllvm model ‚Äî se.gllvm","text":"","code":"data(eSpider) mod <- gllvm(eSpider$abund, num.lv = 2, family = \"poisson\", sd.errors = FALSE) # Calculate standard errors after fitting sdErr <- se(mod) # Store the standard errors in the right place mod$sd <-sdErr$sd # Store the Hessian in the right place mod$Hess <- sdErr$Hess"},{"path":"/reference/simulate.gllvm.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate data from gllvm fit ‚Äî simulate.gllvm","title":"Simulate data from gllvm fit ‚Äî simulate.gllvm","text":"Generate new data using fitted values parameters","code":""},{"path":"/reference/simulate.gllvm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate data from gllvm fit ‚Äî simulate.gllvm","text":"","code":"# S3 method for class 'gllvm' simulate(object, nsim = 1, seed = NULL, conditional = FALSE, ...)"},{"path":"/reference/simulate.gllvm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate data from gllvm fit ‚Äî simulate.gllvm","text":"object object class 'gllvm'. nsim optional positive integer specifying number simulated datasets. Defaults 1. seed optional integer set seed number, passed set.seed. Defaults random seed number. conditional conditional = FALSE simulates marginally latent variables. ... used.","code":""},{"path":"/reference/simulate.gllvm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate data from gllvm fit ‚Äî simulate.gllvm","text":"matrix containing generated data.","code":""},{"path":"/reference/simulate.gllvm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulate data from gllvm fit ‚Äî simulate.gllvm","text":"simulate function gllvm objects.","code":""},{"path":"/reference/simulate.gllvm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Simulate data from gllvm fit ‚Äî simulate.gllvm","text":"David Warton, Jenni Niku <jenni.m.e.niku@jyu.fi>","code":""},{"path":"/reference/simulate.gllvm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate data from gllvm fit ‚Äî simulate.gllvm","text":"","code":"# \\donttest{ # Load a dataset from the mvabund package data(antTraits, package = \"mvabund\") y <- as.matrix(antTraits$abund) X <- scale(antTraits$env[, 1:3]) # Fit gllvm model fit <- gllvm(y = y, X, family = poisson()) # Simulate data newdata <- simulate(fit) #> Error in terms.formula(object, data = data): argument is not a valid model # }"},{"path":"/reference/Skabbholmen.html","id":null,"dir":"Reference","previous_headings":"","what":"Skabbholmen island data ‚Äî Skabbholmen","title":"Skabbholmen island data ‚Äî Skabbholmen","text":"Dataset ordinal observations plants, island Skabbholmen Stocholm archipelago. Includes 65 unique sites 70 species, surveyed two different years.","code":""},{"path":"/reference/Skabbholmen.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Skabbholmen island data ‚Äî Skabbholmen","text":"","code":"data(Skabbholmen)"},{"path":"/reference/Skabbholmen.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Skabbholmen island data ‚Äî Skabbholmen","text":"Y data frame ordinal 70 plant species measured 126 plots. X matrix 2 predictor variables 126 plots. species matrix full species names abbreviations used community data (Y).","code":""},{"path":"/reference/Skabbholmen.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Skabbholmen island data ‚Äî Skabbholmen","text":"Observations vascular plant cover 126 one-square-meter plots divided four transects. ordinal responses five-degree Hult-Sernander-Du Rietz scale, originally recorded Wolfgang Cramer (1987) additionally analyzed ter Braak (1987). total 64 unique sites, surveyed two different years (1978 1984), two plots surveyed one year (thus bringing total number rows data 126). plots located elevation gradient, running shoreline edge old-growth forest. Elevation shoreline recorded centimeters sampling 1978. dataset published permission CANOCO FORTRAN package example datasets.","code":""},{"path":"/reference/Skabbholmen.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Skabbholmen island data ‚Äî Skabbholmen","text":"ter Braak, C.J.F. Smilauer, P.  (1998).  CANOCO reference manual user's guide CANOCO Windows: software canonical community ordination (version 4). Microcomputer Power, New York, New York, USA. Jongman, E., & Jongman, S. R. R. (1995). Data analysis community landscape ecology. Cambridge university press. ter Braak, C.J.F. (1987). analysis vegetation-environment relationships canonical correspondence analysis. Vegetatio, 69(1), 69-77. Cramer, W. & Hytteborn, H. (1987). separation fluctuation long-term change vegetation dynamics rising seashore. Vegetatio, 69, 157‚Äì167.","code":""},{"path":"/reference/Skabbholmen.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Skabbholmen island data ‚Äî Skabbholmen","text":"","code":"# Uncomment the example #data(Skabbholmen) #Y <- Skabbholmen$Y #X <- Skabbholmen$X #model <- gllvm(y = Y, X = X,  #    num.RR = 2,  #    family = \"ordinal\", #    zeta.struc=\"common\", #    row.eff=~(1|transectID))"},{"path":"/reference/summary.gllvm.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarizing gllvm model fits ‚Äî summary.gllvm","title":"Summarizing gllvm model fits ‚Äî summary.gllvm","text":"summary fitted 'gllvm' object, including function call, distribution family model parameters.","code":""},{"path":"/reference/summary.gllvm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarizing gllvm model fits ‚Äî summary.gllvm","text":"","code":"# S3 method for class 'gllvm' summary(   object,   by = \"all\",   digits = max(3L, getOption(\"digits\") - 3L),   signif.stars = getOption(\"show.signif.stars\"),   dispersion = FALSE,   spp.intercepts = FALSE,   row.intercepts = FALSE,   Lvcoefs = FALSE,   rotate = TRUE,   type = NULL,   ... )  # S3 method for class 'summary.gllvm' print(x, ...)  # S3 method for class 'summary.gllvm' plot(x, component = NULL, ...)"},{"path":"/reference/summary.gllvm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarizing gllvm model fits ‚Äî summary.gllvm","text":"object object class 'gllvm' = \"\" (default) return Wald statistics per predictor LV ordination includes predictors, = \"terms\" return multivariate Wald statistic per predictor (displayed first LV), = \"LV\" per dimension (displayed first predictors). digits number significant digits use printing signif.stars TRUE, significance stars printed coefficient, defaults TRUE dispersion option return dispersion parameters, defaults FALSE spp.intercepts option return species intercepts, defaults FALSE row.intercepts option return row intercepts, defaults FALSE Lvcoefs option return species scores ordination, defaults FALSE. Returns species optima quadratic model. rotate defaults TRUE. TRUE rotates output latent variables principal direction, coincides ordiplot results. unconstrained constrained latent variables included, predictor slopes rotated. type match \"type\" ordiplot.gllvm ... used. x summary object component component plotted","code":""},{"path":"/reference/summary.gllvm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Summarizing gllvm model fits ‚Äî summary.gllvm","text":"Various options available include extra parameter estimates summary, excluded default, readability.","code":""},{"path":"/reference/summary.gllvm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Summarizing gllvm model fits ‚Äî summary.gllvm","text":"Jenni Niku <jenni.m.e.niku@jyu.fi>, Bert van der Veen","code":""},{"path":"/reference/summary.gllvm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarizing gllvm model fits ‚Äî summary.gllvm","text":"","code":"if (FALSE) { # \\dontrun{ ## Load a dataset from the mvabund package data(antTraits, package = \"mvabund\") y <- as.matrix(antTraits$abund) # Fit gllvm model fit <- gllvm(y = y, family = poisson()) summary(fit) } # }"},{"path":"/reference/varPartitioning.gllvm.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate variance partitioning ‚Äî varPartitioning.gllvm","title":"Calculate variance partitioning ‚Äî varPartitioning.gllvm","text":"Calculates variance partitioning gllvm object function varPartitioning(). Function plotVarPartitioning() (alias plotVP()) plots results variance partitioning fitted gllvm.","code":""},{"path":"/reference/varPartitioning.gllvm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate variance partitioning ‚Äî varPartitioning.gllvm","text":"","code":"# S3 method for class 'gllvm' varPartitioning(   object,   group = NULL,   groupnames = NULL,   adj.cov = TRUE,   grouplvs = FALSE,   ... )  plotVarPartitioning(   VP,   main = \"Variance Partitioning\",   xlab = \"Response\",   ylab = \"Variance proportion\",   legend.text = NULL,   ... )  plotVP(VP, ...)"},{"path":"/reference/varPartitioning.gllvm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate variance partitioning ‚Äî varPartitioning.gllvm","text":"object object class 'gllvm'. group vector integers identifying grouping X covariates, default use model terms formula lv.formula. groupnames vector strings given names groups defined group adj.cov logical, whether adjust co-variation within group grouplvs logical, whether group latent variables one group ... additional graphical arguments passed barplot function VP variance partitioning object gllvm produced function varPartitioning. main main title xlab label x axis. ylab label y axis. legend.text vector names groups, default 'groupnames' varPartitioning. FALSE, legend printed.","code":""},{"path":"/reference/varPartitioning.gllvm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate variance partitioning ‚Äî varPartitioning.gllvm","text":"Variance linear predictor response j can calculated $$Var(\\eta_j) = \\sum_k \\beta_{jk}^2*var(z_{.k}) + 2 \\sum_{(k1=1,...,K-1)} \\sum_{(k2=k1+1,...,K)}  \\beta_{j(k1)}\\beta_{j(k2)} Cov(Z_{.k1},Z_{.k2}) , $$ \\(z_{.k}\\) vector consisting predictor/latent variable/row effect etc values sampling units . \\(z_{.k}\\)s correlated, covariance term 0 thus variance explained response j predictor \\(z_{.k}\\) given \\(\\beta_{jk}^2*var(z_{.k})/Var(\\eta_j)\\). case correlated predictors, advised group group. variance explained calculated correlated group predictors together adjusted covariance term.","code":""},{"path":"/reference/varPartitioning.gllvm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate variance partitioning ‚Äî varPartitioning.gllvm","text":"Jenni Niku <jenni.m.e.niku@jyu.fi>","code":""},{"path":"/reference/varPartitioning.gllvm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate variance partitioning ‚Äî varPartitioning.gllvm","text":"","code":"# Extract subset of the microbial data to be used as an example data(microbialdata) X <- microbialdata$Xenv y <- microbialdata$Y[, order(colMeans(microbialdata$Y > 0),                       decreasing = TRUE)[21:40]] fit <- gllvm(y, X[,1:3], formula = ~ pH + Phosp, family = poisson(),               studyDesign = X[,4:5], row.eff = ~(1|Site)) VP <- varPartitioning(fit) plotVarPartitioning(VP)   if (FALSE) { # \\dontrun{ # Plot the result of  variance partitioning plot(VP, col = palette(hcl.colors(5, \"viridis\"))) } # }"},{"path":"/reference/vcov.gllvm.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns variance-covariance matrix of coefficients in a GLLVM. ‚Äî vcov.gllvm","title":"Returns variance-covariance matrix of coefficients in a GLLVM. ‚Äî vcov.gllvm","text":"Returns variance-covariance matrix parameters GLLVM. variance-covariance matrix calculated model fitting, function calculate variance-covariance matrix, may computational intensive large number species /sites.","code":""},{"path":"/reference/vcov.gllvm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns variance-covariance matrix of coefficients in a GLLVM. ‚Äî vcov.gllvm","text":"","code":"# S3 method for class 'gllvm' vcov(object, ...)"},{"path":"/reference/vcov.gllvm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns variance-covariance matrix of coefficients in a GLLVM. ‚Äî vcov.gllvm","text":"object object class 'gllvm'. ... used.","code":""},{"path":"/reference/vcov.gllvm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Returns variance-covariance matrix of coefficients in a GLLVM. ‚Äî vcov.gllvm","text":"Calculates variance-covariance matrix GLLVM object using se.gllvm, may computational intensive many parameters.parameters might unintuitive names. Fixed-effects coefficients labeled \"b\", ordered per species : 1) intercepts 2) fixed-effects slopes. Coefficients latent variables labled \"lambda\" (linear coefficients) \"lambda2\".","code":""},{"path":"/reference/vcov.gllvm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Returns variance-covariance matrix of coefficients in a GLLVM. ‚Äî vcov.gllvm","text":"Bert van der Veen","code":""},{"path":"/news/index.html","id":"version-147","dir":"Changelog","previous_headings":"","what":"Version 1.4.7","title":"Version 1.4.7","text":"Added ‚Äúfungi‚Äù dataset Abrego et al.¬†2022 Added ‚Äúkelpforest‚Äù dataset Reed Miller 2023 New vignette phylogenetic random effects New vignette percent cover data analysis Function calculating plotting variance partitioning (varPartitioning.gllvm plotVP)","code":""},{"path":"/news/index.html","id":"version-146","dir":"Changelog","previous_headings":"","what":"Version 1.4.6","title":"Version 1.4.6","text":"Added ‚ÄògetLoadings‚Äô function retrieving species‚Äô loadings Added ‚Äòfac.center‚Äô argument ordiplot plot canonical coefficients binary variables points Added simple plotting function gllvm summary Improved scaling ordiplot quadratic model biplot = FALSE optima.gllvm tolerances.gllvm num.lv now correctly provide tolerances w.r.t. scaled LV Improved starting values models ‚ÄòrandomB‚Äô ‚Äò.Xcoef‚Äô coefplot.gllvm now also works fourth-corner models Added intercept beta0com=TRUE coefplot.gllvm fourth-corner models","code":""},{"path":"/news/index.html","id":"bug-fixes-1-4-6","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"Version 1.4.6","text":"Bug fixed prevented increasing point size sites ordiplot symbols = TRUE Bug fixed optima.gllvm models single LV","code":""},{"path":"/news/index.html","id":"version-145","dir":"Changelog","previous_headings":"","what":"Version 1.4.5","title":"Version 1.4.5","text":"Prep parallelisation Enabled parallelisation (see TMB::openmp) Largely vectorized ‚Äúresiduals.gllvm‚Äù, residuals ‚Äúgllvm.aux‚Äù Added covariance random effects summary preparation emmeans support: moved design matrix ‚Äúlv.X‚Äù ‚Äúlv.X.design‚Äù. ‚Äúlv.X‚Äù now stores original supplied data.frame","code":""},{"path":"/news/index.html","id":"bug-fixes-1-4-5","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"Version 1.4.5","text":"Bug ZINB fixed","code":""},{"path":"/news/index.html","id":"version-144","dir":"Changelog","previous_headings":"","what":"Version 1.4.4","title":"Version 1.4.4","text":"Removed ‚Äúdependent.row‚Äù feature Added possibility multiple random row intercepts Can plotted ‚ÄúrandomCoefPlot‚Äù Phylogenetic signal parameter included objectparamsparamsrho.sp Can covariate specific num.RR num.lv.c can now larger number predictors randomB!=FALSE Added ‚Äúiid‚Äù option ‚ÄúrandomB‚Äù Added ‚ÄúgetEnvironCov‚Äù function extract species associations due random covariate effects","code":""},{"path":"/news/index.html","id":"version-143","dir":"Changelog","previous_headings":"","what":"Version 1.4.3","title":"Version 1.4.3","text":"CRAN release: 2023-09-18 CRAN release 1.4.3 see updates versions 1.4.2 1.4.3","code":""},{"path":"/news/index.html","id":"bug-fixes-1-4-3","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"Version 1.4.3","text":"Bug correlated row effects fixed Bug getPredictErr models fitted LA fixed, returns now prediction errors random slopes X covariates well Bug randomCoefplot fixed","code":""},{"path":[]},{"path":"/news/index.html","id":"new-features-1-4-2","dir":"Changelog","previous_headings":"","what":"New Features","title":"Version 1.4.2","text":"Added correction factor second partial derivatives canonical coefficients concurrent constrained ordination Added randomCoefPlot functionality constrained concurrent ordination models random slopes. Currently supported models quadratic responses Summary now provides possibility calculate wald statistics across LVs predictors concurrent constrained ordination coef now renames parameter estimates intuitive names allows subset parameter list names Tweedie power parameter estimated now set NULL `gllvm. VA support Zero-inflated poisson distribution Zero-inflated negative-binomial distribution added Binomial (Ntrials>1) support added (previously Bernoulli) Now allowed () NAs response data","code":""},{"path":"/news/index.html","id":"bug-fixes-1-4-2","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"Version 1.4.2","text":"Fixed issue structured row-effects concurrent constrained ordination Fixed bug prevented plotting prediction regions constrained ordination structured row-effects standard errors returned optima.gllvm tolerances.gllvm randomB != FALSE Species names original order order = TRUE RandomCoefPlot Fixed issue arose {0,1} bounded parameters reached bounds Various bug fixes constrained/concurrent ordination random intercepts random slopes Bug predictions structured row intercepts fixed, see issue #86","code":""},{"path":"/news/index.html","id":"version-141","dir":"Changelog","previous_headings":"","what":"Version 1.4.1","title":"Version 1.4.1","text":"CRAN release: 2023-01-07","code":""},{"path":"/news/index.html","id":"new-features-1-4-1","dir":"Changelog","previous_headings":"","what":"New Features","title":"Version 1.4.1","text":"Computational stability random slopes constr. concr. ordination significantly improved Computational stability quadratic model significantly improved Unstructured VA covariance matrix quadratic models random intercepts Added example se.gllvm","code":""},{"path":"/news/index.html","id":"bug-fixes-1-4-1","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"Version 1.4.1","text":"Bugfix random slopes concr. ordination LV-specific variances random row intercepts Bugfix quadratic model Poisson, NB, gamma, exponential responses Bugfix starting values constrained concurrent quadratic model","code":""},{"path":"/news/index.html","id":"bug-fixes-1-4-1-1","dir":"Changelog","previous_headings":"Bug Fixes","what":"Bug Fixes","title":"Version 1.4.1","text":"Valgrind error fixed","code":""},{"path":"/news/index.html","id":"version-140","dir":"Changelog","previous_headings":"","what":"Version 1.4.0","title":"Version 1.4.0","text":"CRAN release: 2022-12-17","code":""},{"path":"/news/index.html","id":"new-features-1-4-0","dir":"Changelog","previous_headings":"","what":"New Features","title":"Version 1.4.0","text":"CRAN release 1.4.0‚Äôs new features see features described versions 1.3.2-1.3.3","code":""},{"path":"/news/index.html","id":"bug-fixes-1-4-0","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"Version 1.4.0","text":"bug fixes CRAN release 1.4.0 see versions 1.3.2-1.3.3","code":""},{"path":[]},{"path":"/news/index.html","id":"new-features-1-3-3","dir":"Changelog","previous_headings":"","what":"New Features","title":"Version 1.3.3","text":"n.init option improved, stops improved fit found n.init.max (defaults 10) iterations. Row names data now carry site scores, can displayed ordiplot","code":""},{"path":"/news/index.html","id":"bug-fixes-1-3-3","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"Version 1.3.3","text":"Memory allocation problem development version fixed Diagonal elements loading matrix ‚Äòtheta‚Äô fixed fourth corner model Bug ‚Äòpredict‚Äô random slopes fixed, occurred new x-covariate values given","code":""},{"path":[]},{"path":"/news/index.html","id":"new-features-1-3-2","dir":"Changelog","previous_headings":"","what":"New Features","title":"Version 1.3.2","text":"Ordination predictors (num.RR,num.lv.c) now implemented constrained optimization routines (alabama,nloptr) long canonical coefficients treated fixed-effects. follows necessary identifiability constraints. reduced-rank approximated predictor slopes multivariate regression can now plotted (confidence intervals) using coefplot. available yet quadratic effects. Separate checks put place warn users constraints canonical coefficients (orthogonality columns) converged. Separate checks put place warn users coefficients quadratic model converged Canonical coefficients ordination predictors (num.RR,num.lv.c) can now treated random-effects using ‚ÄòrandomB‚Äô argument. moment, need either random fixed, mixing. Prediction intervals can retrieved getPredictErr function. extended version spider dataset made available Added option magnify x-axis labels coefplot Site names present row labels response data now shown ordination plot","code":""},{"path":"/news/index.html","id":"bug-fixes-1-3-2","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"Version 1.3.2","text":"order quadratic coefficients wrong num.RR, num.lv, num.lv.c used model. Fixed bug calculation starting values constrained ordination (num.RR) residuals re-calculated num.lv.c>0 Fixed bug coefplot one predictor included model Fixed bug prevent using gllvm quadratic response model starting values another model Changed import/export various functions requested github issue #65 Various minor tweaks summary function","code":""},{"path":"/news/index.html","id":"version-131","dir":"Changelog","previous_headings":"","what":"Version 1.3.1","title":"Version 1.3.1","text":"CRAN release: 2021-07-28","code":""},{"path":"/news/index.html","id":"new-features-1-3-1","dir":"Changelog","previous_headings":"","what":"New Features","title":"Version 1.3.1","text":"Structured row parameters implemented, including possibility within group correlations random row effects. Constrained ordination model implemented. NB binomial (probit logit) response model implemented using extended variational approximation method.","code":""},{"path":"/news/index.html","id":"bug-fixes-1-3-1","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"Version 1.3.1","text":"Vignettes removed CRAN version package, can seen package‚Äôs website .","code":""},{"path":"/news/index.html","id":"version-130","dir":"Changelog","previous_headings":"","what":"Version 1.3.0","title":"Version 1.3.0","text":"CRAN release: 2021-04-30","code":""},{"path":"/news/index.html","id":"new-features-1-3-0","dir":"Changelog","previous_headings":"","what":"New Features","title":"Version 1.3.0","text":"Quadratic latent variables allowed, term - u_i‚ÄôD_j u_i can included model using ‚Äòquadratic = TRUE‚Äô. addition, functions ‚Äòoptima()‚Äô, ‚Äòtolerances()‚Äô ‚Äògradient.length()‚Äô included. Beta response distribution implemented using Laplace approximation extended variational approximation method. Tweedie response model implemented using extended variational approximation method. Ordinal model works now ‚Äònum.lv=0‚Äô. Residual covariance adjustment added gaussian family.","code":""},{"path":"/news/index.html","id":"bug-fixes-1-3-0","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"Version 1.3.0","text":"Estimation variances random slopes X covariates didn‚Äôt work properly ‚Äòrow.eff = FALSE‚Äô ‚Äòrow.eff = ‚Äúfixed‚Äù‚Äô. Problems occurred calculation starting values ordinal model. Problems occurred predict() residuals(), random slopes X covariates included. Problems occurred predict() new X covariates given. Problems occurred predictLVs() fourth corner models.","code":""},{"path":"/news/index.html","id":"version-131-1","dir":"Changelog","previous_headings":"","what":"Version 1.3.1","title":"Version 1.3.1","text":"CRAN release: 2021-07-28","code":""},{"path":"/news/index.html","id":"new-features-1-3-1-1","dir":"Changelog","previous_headings":"","what":"New Features","title":"Version 1.3.1","text":"Structured row parameters implemented, including possibility within group correlations random row effects. Constrained ordination model implemented. NB binomial (probit logit) response model implemented using extended variational approximation method.","code":""},{"path":"/news/index.html","id":"bug-fixes-1-3-1-1","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"Version 1.3.1","text":"Vignettes removed CRAN version package, can seen package‚Äôs website .","code":""},{"path":"/news/index.html","id":"version-130-1","dir":"Changelog","previous_headings":"","what":"Version 1.3.0","title":"Version 1.3.0","text":"CRAN release: 2021-04-30","code":""},{"path":"/news/index.html","id":"new-features-1-3-0-1","dir":"Changelog","previous_headings":"","what":"New Features","title":"Version 1.3.0","text":"Quadratic latent variables allowed, term - u_i‚ÄôD_j u_i can included model using ‚Äòquadratic = TRUE‚Äô. addition, functions ‚Äòoptima()‚Äô, ‚Äòtolerances()‚Äô ‚Äògradient.length()‚Äô included. Beta response distribution implemented using Laplace approximation extended variational approximation method. Tweedie response model implemented using extended variational approximation method. Ordinal model works now ‚Äònum.lv=0‚Äô. Residual covariance adjustment added gaussian family.","code":""},{"path":"/news/index.html","id":"bug-fixes-1-3-0-1","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"Version 1.3.0","text":"Estimation variances random slopes X covariates didn‚Äôt work properly ‚Äòrow.eff = FALSE‚Äô ‚Äòrow.eff = ‚Äúfixed‚Äù‚Äô. Problems occurred calculation starting values ordinal model. Problems occurred predict() residuals(), random slopes X covariates included. Problems occurred predict() new X covariates given. Problems occurred predictLVs() fourth corner models.","code":""}]
